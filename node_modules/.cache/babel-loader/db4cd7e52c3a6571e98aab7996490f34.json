{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useUserInfoAuth = () => {\n  const [isAuthenticated, setAuthenticationStatus] = useState(false);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const checkIfAuthenticated = async () => {\n      try {\n        const result = await axios({\n          url: \"http://localhost:4000/\",\n          method: \"GET\",\n          withCredentials: \"include\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Credentials\": true\n          }\n        });\n        setAuthenticationStatus(true);\n        setUser({\n          user: result.data.user\n        });\n      } catch (err) {\n        console.log(\"Error checking auth status\", err);\n        setAuthenticationStatus(false);\n      }\n    };\n\n    checkIfAuthenticated();\n  }, []);\n  return {\n    isAuthenticated,\n    setAuthenticationStatus,\n    user,\n    setUser\n  };\n};\n\nexport default useUserInfoAuth;","map":{"version":3,"sources":["/Users/benyoo/Desktop/voice-frontend/src/hooks/useUserInfoAuth.js"],"names":["useState","useEffect","axios","useUserInfoAuth","isAuthenticated","setAuthenticationStatus","user","setUser","checkIfAuthenticated","result","url","method","withCredentials","headers","Accept","data","err","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC1B,QAAM,CAACC,eAAD,EAAkBC,uBAAlB,IAA6CL,QAAQ,CAAC,KAAD,CAA3D;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,oBAAoB,GAAG,YAAY;AACrC,UAAI;AACA,cAAMC,MAAM,GAAG,MAAMP,KAAK,CAAC;AACvBQ,UAAAA,GAAG,EAAE,wBADkB;AAEvBC,UAAAA,MAAM,EAAE,KAFe;AAGvBC,UAAAA,eAAe,EAAE,SAHM;AAIvBC,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE,kBADD;AAEP,4BAAgB,kBAFT;AAGP,gDAAoC;AAH7B;AAJc,SAAD,CAA1B;AAWAT,QAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAE,QAAAA,OAAO,CAAC;AAACD,UAAAA,IAAI,EAAEG,MAAM,CAACM,IAAP,CAAYT;AAAnB,SAAD,CAAP;AACH,OAdD,CAcE,OAAOU,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,GAA1C;AACAX,QAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACH;AACJ,KAnBD;;AAqBAG,IAAAA,oBAAoB;AACvB,GAvBQ,EAuBN,EAvBM,CAAT;AAyBA,SAAO;AACHJ,IAAAA,eADG;AAEHC,IAAAA,uBAFG;AAGHC,IAAAA,IAHG;AAIHC,IAAAA;AAJG,GAAP;AAMH,CAnCD;;AAqCA,eAAeJ,eAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useUserInfoAuth = () => {\n    const [isAuthenticated, setAuthenticationStatus] = useState(false);\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        const checkIfAuthenticated = async () => {\n            try {\n                const result = await axios({\n                    url: \"http://localhost:4000/\",\n                    method: \"GET\",\n                    withCredentials: \"include\",\n                    headers: {\n                      Accept: \"application/json\",\n                      \"Content-Type\": \"application/json\",\n                      \"Access-Control-Allow-Credentials\": true\n                    }\n                });\n\n                setAuthenticationStatus(true);\n                setUser({user: result.data.user});\n            } catch (err) {\n                console.log(\"Error checking auth status\", err);\n                setAuthenticationStatus(false);\n            }\n        };\n\n        checkIfAuthenticated();\n    }, []);\n\n    return {\n        isAuthenticated,\n        setAuthenticationStatus,\n        user,\n        setUser,\n    };\n};\n\nexport default useUserInfoAuth;"]},"metadata":{},"sourceType":"module"}