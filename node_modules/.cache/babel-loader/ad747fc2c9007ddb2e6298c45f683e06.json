{"ast":null,"code":"var _jsxFileName = \"/Users/benyoo/Desktop/voice-frontend/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nvar AudioContext = window.AudioContext || window.webkitAudioContext;\nvar context = new AudioContext();\n\nfunction myPCMSource() {\n  return Math.random() * 2 - 3;\n}\n\nfunction process_microphone_buffer(event) {\n  var i, N, inp, microphone_output_buffer;\n  console.log(\"Input\", event.inputBuffer.getChannelData(0));\n  microphone_output_buffer = event.inputBuffer.getChannelData(0); // just mono - 1 channel for now\n}\n\nconst handleListen = () => {\n  navigator.mediaDevices.getUserMedia({\n    audio: true\n  }).then(stream => {\n    console.log(\"STREAm!!!\", stream); // var gain_node = context.createGain();\n    // gain_node.connect( context.destination );\n\n    const microphone = context.createMediaStreamSource(stream);\n    console.log(\"microphone\", microphone); //microphone.connect(gain_node);\n\n    const node = context.createScriptProcessor(2048, 1, 1); // listen to the audio data, and record into the buffer\n\n    microphone.connect(node);\n    node.connect(microphone.context.destination);\n    node.onaudioprocess = process_microphone_buffer; // function(e){\n    //   // console.log(\"Input\", e.inputBuffer.getChannelData(0))\n    //   // console.log(\"1\", e.outputBuffer.getChannelData(0))\n    //   // var input_int16 = e.inputBuffer.getChannelData(0);\n    //   // var output_float = e.outputBuffer.getChannelData(0);\n    //   // for (var i = 0; i < 4096; i++) {\n    //   //   output_float[i] = (input_int16[i] / 32767);\n    //   // }\n    //   // //console.log(\"e!\", e);\n    //   //ws.send(JSON.stringify({sound: _arrayBufferToBase64(convertoFloat32ToInt16(inputData))}));\n    // }\n  }).catch(err => {\n    console.log(\"error\", err);\n  });\n};\n\nfunction App() {\n  handleListen();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }\n  }, \"src/App.js\"), \" and save to reload.\"), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Learn React\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/benyoo/Desktop/voice-frontend/src/App.js"],"names":["React","AudioContext","window","webkitAudioContext","context","myPCMSource","Math","random","process_microphone_buffer","event","i","N","inp","microphone_output_buffer","console","log","inputBuffer","getChannelData","handleListen","navigator","mediaDevices","getUserMedia","audio","then","stream","microphone","createMediaStreamSource","node","createScriptProcessor","connect","destination","onaudioprocess","catch","err","App","logo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AAEA,IAAIC,YAAY,GAAGC,MAAM,CAACD,YAAP,IAAuBC,MAAM,CAACC,kBAAjD;AACA,IAAIC,OAAO,GAAG,IAAIH,YAAJ,EAAd;;AAEA,SAASI,WAAT,GAAuB;AACrB,SAAOC,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAA3B;AACD;;AAED,SAASC,yBAAT,CAAmCC,KAAnC,EAA0C;AAExC,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,GAAV,EAAeC,wBAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,KAAK,CAACO,WAAN,CAAkBC,cAAlB,CAAiC,CAAjC,CAArB;AACAJ,EAAAA,wBAAwB,GAAGJ,KAAK,CAACO,WAAN,CAAkBC,cAAlB,CAAiC,CAAjC,CAA3B,CAJwC,CAIwB;AACjE;;AAED,MAAMC,YAAY,GAAG,MAAM;AACzBC,EAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAClCC,IAAAA,KAAK,EAAE;AAD2B,GAApC,EAEGC,IAFH,CAESC,MAAD,IAAY;AAClBV,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBS,MAAzB,EADkB,CAElB;AACA;;AAEA,UAAMC,UAAU,GAAGrB,OAAO,CAACsB,uBAAR,CAAgCF,MAAhC,CAAnB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BU,UAA1B,EANkB,CAOlB;;AAEA,UAAME,IAAI,GAAGvB,OAAO,CAACwB,qBAAR,CAA8B,IAA9B,EAAoC,CAApC,EAAuC,CAAvC,CAAb,CATkB,CAUlB;;AACAH,IAAAA,UAAU,CAACI,OAAX,CAAmBF,IAAnB;AACAA,IAAAA,IAAI,CAACE,OAAL,CAAaJ,UAAU,CAACrB,OAAX,CAAmB0B,WAAhC;AACAH,IAAAA,IAAI,CAACI,cAAL,GAAsBvB,yBAAtB,CAbkB,CAelB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA7BD,EA8BCwB,KA9BD,CA8BQC,GAAD,IAAS;AACdnB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBkB,GAArB;AACD,GAhCD;AAiCD,CAlCD;;AAoCA,SAASC,GAAT,GAAe;AACbhB,EAAAA,YAAY;AACZ,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEiB,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,yBAFF,eAKE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,IAAI,EAAC,qBAFP;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CADF,CADF;AAkBD;;AAED,eAAeD,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nvar AudioContext = window.AudioContext || window.webkitAudioContext;\nvar context = new AudioContext();\n\nfunction myPCMSource() { \n  return Math.random() * 2 - 3;\n}\n\nfunction process_microphone_buffer(event) {\n\n  var i, N, inp, microphone_output_buffer;\n  console.log(\"Input\", event.inputBuffer.getChannelData(0));\n  microphone_output_buffer = event.inputBuffer.getChannelData(0); // just mono - 1 channel for now\n}\n\nconst handleListen = () => {\n  navigator.mediaDevices.getUserMedia({\n    audio: true,\n  }).then((stream) => {\n    console.log(\"STREAm!!!\", stream)\n    // var gain_node = context.createGain();\n    // gain_node.connect( context.destination );\n    \n    const microphone = context.createMediaStreamSource(stream);\n    console.log(\"microphone\", microphone)\n    //microphone.connect(gain_node);\n\n    const node = context.createScriptProcessor(2048, 1, 1);\n    // listen to the audio data, and record into the buffer\n    microphone.connect(node);\n    node.connect(microphone.context.destination)\n    node.onaudioprocess = process_microphone_buffer;\n    \n    // function(e){\n    //   // console.log(\"Input\", e.inputBuffer.getChannelData(0))\n    //   // console.log(\"1\", e.outputBuffer.getChannelData(0))\n\n    //   // var input_int16 = e.inputBuffer.getChannelData(0);\n    //   // var output_float = e.outputBuffer.getChannelData(0);\n    //   // for (var i = 0; i < 4096; i++) {\n    //   //   output_float[i] = (input_int16[i] / 32767);\n    //   // }\n    //   // //console.log(\"e!\", e);\n    //   //ws.send(JSON.stringify({sound: _arrayBufferToBase64(convertoFloat32ToInt16(inputData))}));\n    // }\n  })\n  .catch((err) => {\n    console.log(\"error\", err);\n  })\n};\n\nfunction App() {\n  handleListen();\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}