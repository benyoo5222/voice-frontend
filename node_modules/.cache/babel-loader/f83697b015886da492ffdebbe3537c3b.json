{"ast":null,"code":"var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction unwrapExports(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar byteLength_1 = byteLength;\nvar toByteArray_1 = toByteArray;\nvar fromByteArray_1 = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}\n\nvar base64Js = {\n  byteLength: byteLength_1,\n  toByteArray: toByteArray_1,\n  fromByteArray: fromByteArray_1\n};\n\nvar read = function read(buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nvar write = function write(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};\n\nvar ieee754 = {\n  read: read,\n  write: write\n};\nvar buffer = createCommonjsModule(function (module, exports) {\n  var customInspectSymbol = typeof Symbol === 'function' && typeof Symbol[\"for\"] === 'function' ? Symbol[\"for\"]('nodejs.util.inspect.custom') : null;\n  exports.Buffer = Buffer;\n  exports.SlowBuffer = SlowBuffer;\n  exports.INSPECT_MAX_BYTES = 50;\n  var K_MAX_LENGTH = 0x7fffffff;\n  exports.kMaxLength = K_MAX_LENGTH;\n  /**\n   * If `Buffer.TYPED_ARRAY_SUPPORT`:\n   *   === true    Use Uint8Array implementation (fastest)\n   *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n   *               implementation (most compatible, even IE6)\n   *\n   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n   * Opera 11.6+, iOS 4.2+.\n   *\n   * We report that the browser does not support typed arrays if the are not subclassable\n   * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n   * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n   * for __proto__ and has a buggy typed array implementation.\n   */\n\n  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n  }\n\n  function typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n      var arr = new Uint8Array(1);\n      var proto = {\n        foo: function foo() {\n          return 42;\n        }\n      };\n      Object.setPrototypeOf(proto, Uint8Array.prototype);\n      Object.setPrototypeOf(arr, proto);\n      return arr.foo() === 42;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  Object.defineProperty(Buffer.prototype, 'parent', {\n    enumerable: true,\n    get: function get() {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.buffer;\n    }\n  });\n  Object.defineProperty(Buffer.prototype, 'offset', {\n    enumerable: true,\n    get: function get() {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.byteOffset;\n    }\n  });\n\n  function createBuffer(length) {\n    if (length > K_MAX_LENGTH) {\n      throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n    } // Return an augmented `Uint8Array` instance\n\n\n    var buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n  /**\n   * The Buffer constructor returns instances of `Uint8Array` that have their\n   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n   * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n   * returns a single octet.\n   *\n   * The `Uint8Array` prototype remains unmodified.\n   */\n\n\n  function Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === 'number') {\n      if (typeof encodingOrOffset === 'string') {\n        throw new TypeError('The \"string\" argument must be of type string. Received type number');\n      }\n\n      return allocUnsafe(arg);\n    }\n\n    return from(arg, encodingOrOffset, length);\n  }\n\n  Buffer.poolSize = 8192; // not used by this implementation\n\n  function from(value, encodingOrOffset, length) {\n    if (typeof value === 'string') {\n      return fromString(value, encodingOrOffset);\n    }\n\n    if (ArrayBuffer.isView(value)) {\n      return fromArrayLike(value);\n    }\n\n    if (value == null) {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + babelHelpers[\"typeof\"](value));\n    }\n\n    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n\n    if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n    }\n\n    var valueOf = value.valueOf && value.valueOf();\n\n    if (valueOf != null && valueOf !== value) {\n      return Buffer.from(valueOf, encodingOrOffset, length);\n    }\n\n    var b = fromObject(value);\n    if (b) return b;\n\n    if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n      return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n    }\n\n    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + babelHelpers[\"typeof\"](value));\n  }\n  /**\n   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n   * if value is a number.\n   * Buffer.from(str[, encoding])\n   * Buffer.from(array)\n   * Buffer.from(buffer)\n   * Buffer.from(arrayBuffer[, byteOffset[, length]])\n   **/\n\n\n  Buffer.from = function (value, encodingOrOffset, length) {\n    return from(value, encodingOrOffset, length);\n  }; // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n  // https://github.com/feross/buffer/pull/148\n\n\n  Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\n  Object.setPrototypeOf(Buffer, Uint8Array);\n\n  function assertSize(size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('\"size\" argument must be of type number');\n    } else if (size < 0) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n    }\n  }\n\n  function alloc(size, fill, encoding) {\n    assertSize(size);\n\n    if (size <= 0) {\n      return createBuffer(size);\n    }\n\n    if (fill !== undefined) {\n      // Only pay attention to encoding if it's a string. This\n      // prevents accidentally sending in a number that would\n      // be interpretted as a start offset.\n      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n    }\n\n    return createBuffer(size);\n  }\n  /**\n   * Creates a new filled Buffer instance.\n   * alloc(size[, fill[, encoding]])\n   **/\n\n\n  Buffer.alloc = function (size, fill, encoding) {\n    return alloc(size, fill, encoding);\n  };\n\n  function allocUnsafe(size) {\n    assertSize(size);\n    return createBuffer(size < 0 ? 0 : checked(size) | 0);\n  }\n  /**\n   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n   * */\n\n\n  Buffer.allocUnsafe = function (size) {\n    return allocUnsafe(size);\n  };\n  /**\n   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n   */\n\n\n  Buffer.allocUnsafeSlow = function (size) {\n    return allocUnsafe(size);\n  };\n\n  function fromString(string, encoding) {\n    if (typeof encoding !== 'string' || encoding === '') {\n      encoding = 'utf8';\n    }\n\n    if (!Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n\n    var length = byteLength(string, encoding) | 0;\n    var buf = createBuffer(length);\n    var actual = buf.write(string, encoding);\n\n    if (actual !== length) {\n      // Writing a hex string, for example, that contains invalid characters will\n      // cause everything after the first invalid character to be ignored. (e.g.\n      // 'abxxcd' will be treated as 'ab')\n      buf = buf.slice(0, actual);\n    }\n\n    return buf;\n  }\n\n  function fromArrayLike(array) {\n    var length = array.length < 0 ? 0 : checked(array.length) | 0;\n    var buf = createBuffer(length);\n\n    for (var i = 0; i < length; i += 1) {\n      buf[i] = array[i] & 255;\n    }\n\n    return buf;\n  }\n\n  function fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n      throw new RangeError('\"offset\" is outside of buffer bounds');\n    }\n\n    if (array.byteLength < byteOffset + (length || 0)) {\n      throw new RangeError('\"length\" is outside of buffer bounds');\n    }\n\n    var buf;\n\n    if (byteOffset === undefined && length === undefined) {\n      buf = new Uint8Array(array);\n    } else if (length === undefined) {\n      buf = new Uint8Array(array, byteOffset);\n    } else {\n      buf = new Uint8Array(array, byteOffset, length);\n    } // Return an augmented `Uint8Array` instance\n\n\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n\n  function fromObject(obj) {\n    if (Buffer.isBuffer(obj)) {\n      var len = checked(obj.length) | 0;\n      var buf = createBuffer(len);\n\n      if (buf.length === 0) {\n        return buf;\n      }\n\n      obj.copy(buf, 0, 0, len);\n      return buf;\n    }\n\n    if (obj.length !== undefined) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0);\n      }\n\n      return fromArrayLike(obj);\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data);\n    }\n  }\n\n  function checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= K_MAX_LENGTH) {\n      throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n    }\n\n    return length | 0;\n  }\n\n  function SlowBuffer(length) {\n    if (+length != length) {\n      // eslint-disable-line eqeqeq\n      length = 0;\n    }\n\n    return Buffer.alloc(+length);\n  }\n\n  Buffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n  };\n\n  Buffer.compare = function compare(a, b) {\n    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n\n    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n      throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n    }\n\n    if (a === b) return 0;\n    var x = a.length;\n    var y = b.length;\n\n    for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n      if (a[i] !== b[i]) {\n        x = a[i];\n        y = b[i];\n        break;\n      }\n    }\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  };\n\n  Buffer.isEncoding = function isEncoding(encoding) {\n    switch (String(encoding).toLowerCase()) {\n      case 'hex':\n      case 'utf8':\n      case 'utf-8':\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n      case 'base64':\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return true;\n\n      default:\n        return false;\n    }\n  };\n\n  Buffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    if (list.length === 0) {\n      return Buffer.alloc(0);\n    }\n\n    var i;\n\n    if (length === undefined) {\n      length = 0;\n\n      for (i = 0; i < list.length; ++i) {\n        length += list[i].length;\n      }\n    }\n\n    var buffer = Buffer.allocUnsafe(length);\n    var pos = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      var buf = list[i];\n\n      if (isInstance(buf, Uint8Array)) {\n        buf = Buffer.from(buf);\n      }\n\n      if (!Buffer.isBuffer(buf)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n      }\n\n      buf.copy(buffer, pos);\n      pos += buf.length;\n    }\n\n    return buffer;\n  };\n\n  function byteLength(string, encoding) {\n    if (Buffer.isBuffer(string)) {\n      return string.length;\n    }\n\n    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n      return string.byteLength;\n    }\n\n    if (typeof string !== 'string') {\n      throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + babelHelpers[\"typeof\"](string));\n    }\n\n    var len = string.length;\n    var mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0; // Use a for loop to avoid recursion\n\n    var loweredCase = false;\n\n    for (;;) {\n      switch (encoding) {\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n          return len;\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8ToBytes(string).length;\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return len * 2;\n\n        case 'hex':\n          return len >>> 1;\n\n        case 'base64':\n          return base64ToBytes(string).length;\n\n        default:\n          if (loweredCase) {\n            return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n          }\n\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  }\n\n  Buffer.byteLength = byteLength;\n\n  function slowToString(encoding, start, end) {\n    var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n    if (start === undefined || start < 0) {\n      start = 0;\n    } // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n\n\n    if (start > this.length) {\n      return '';\n    }\n\n    if (end === undefined || end > this.length) {\n      end = this.length;\n    }\n\n    if (end <= 0) {\n      return '';\n    } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n    end >>>= 0;\n    start >>>= 0;\n\n    if (end <= start) {\n      return '';\n    }\n\n    if (!encoding) encoding = 'utf8';\n\n    while (true) {\n      switch (encoding) {\n        case 'hex':\n          return hexSlice(this, start, end);\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Slice(this, start, end);\n\n        case 'ascii':\n          return asciiSlice(this, start, end);\n\n        case 'latin1':\n        case 'binary':\n          return latin1Slice(this, start, end);\n\n        case 'base64':\n          return base64Slice(this, start, end);\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return utf16leSlice(this, start, end);\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n          encoding = (encoding + '').toLowerCase();\n          loweredCase = true;\n      }\n    }\n  } // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n  // to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n  // reliably in a browserify context because there could be multiple different\n  // copies of the 'buffer' package in use. This method works even for Buffer\n  // instances that were created from another copy of the `buffer` package.\n  // See: https://github.com/feross/buffer/issues/154\n\n\n  Buffer.prototype._isBuffer = true;\n\n  function swap(b, n, m) {\n    var i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n  }\n\n  Buffer.prototype.swap16 = function swap16() {\n    var len = this.length;\n\n    if (len % 2 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 16-bits');\n    }\n\n    for (var i = 0; i < len; i += 2) {\n      swap(this, i, i + 1);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.swap32 = function swap32() {\n    var len = this.length;\n\n    if (len % 4 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 32-bits');\n    }\n\n    for (var i = 0; i < len; i += 4) {\n      swap(this, i, i + 3);\n      swap(this, i + 1, i + 2);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.swap64 = function swap64() {\n    var len = this.length;\n\n    if (len % 8 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 64-bits');\n    }\n\n    for (var i = 0; i < len; i += 8) {\n      swap(this, i, i + 7);\n      swap(this, i + 1, i + 6);\n      swap(this, i + 2, i + 5);\n      swap(this, i + 3, i + 4);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.toString = function toString() {\n    var length = this.length;\n    if (length === 0) return '';\n    if (arguments.length === 0) return utf8Slice(this, 0, length);\n    return slowToString.apply(this, arguments);\n  };\n\n  Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n\n  Buffer.prototype.equals = function equals(b) {\n    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n    if (this === b) return true;\n    return Buffer.compare(this, b) === 0;\n  };\n\n  Buffer.prototype.inspect = function inspect() {\n    var str = '';\n    var max = exports.INSPECT_MAX_BYTES;\n    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n    if (this.length > max) str += ' ... ';\n    return '<Buffer ' + str + '>';\n  };\n\n  if (customInspectSymbol) {\n    Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n  }\n\n  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if (isInstance(target, Uint8Array)) {\n      target = Buffer.from(target, target.offset, target.byteLength);\n    }\n\n    if (!Buffer.isBuffer(target)) {\n      throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + babelHelpers[\"typeof\"](target));\n    }\n\n    if (start === undefined) {\n      start = 0;\n    }\n\n    if (end === undefined) {\n      end = target ? target.length : 0;\n    }\n\n    if (thisStart === undefined) {\n      thisStart = 0;\n    }\n\n    if (thisEnd === undefined) {\n      thisEnd = this.length;\n    }\n\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n      throw new RangeError('out of range index');\n    }\n\n    if (thisStart >= thisEnd && start >= end) {\n      return 0;\n    }\n\n    if (thisStart >= thisEnd) {\n      return -1;\n    }\n\n    if (start >= end) {\n      return 1;\n    }\n\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    var x = thisEnd - thisStart;\n    var y = end - start;\n    var len = Math.min(x, y);\n    var thisCopy = this.slice(thisStart, thisEnd);\n    var targetCopy = target.slice(start, end);\n\n    for (var i = 0; i < len; ++i) {\n      if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i];\n        y = targetCopy[i];\n        break;\n      }\n    }\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  }; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n  //\n  // Arguments:\n  // - buffer - a Buffer to search\n  // - val - a string, Buffer, or number\n  // - byteOffset - an index into `buffer`; will be clamped to an int32\n  // - encoding - an optional encoding, relevant is val is a string\n  // - dir - true for indexOf, false for lastIndexOf\n\n\n  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1; // Normalize byteOffset\n\n    if (typeof byteOffset === 'string') {\n      encoding = byteOffset;\n      byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) {\n      byteOffset = 0x7fffffff;\n    } else if (byteOffset < -0x80000000) {\n      byteOffset = -0x80000000;\n    }\n\n    byteOffset = +byteOffset; // Coerce to Number.\n\n    if (numberIsNaN(byteOffset)) {\n      // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n      byteOffset = dir ? 0 : buffer.length - 1;\n    } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n    if (byteOffset >= buffer.length) {\n      if (dir) return -1;else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n      if (dir) byteOffset = 0;else return -1;\n    } // Normalize val\n\n\n    if (typeof val === 'string') {\n      val = Buffer.from(val, encoding);\n    } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n    if (Buffer.isBuffer(val)) {\n      // Special case: looking for empty string/buffer always fails\n      if (val.length === 0) {\n        return -1;\n      }\n\n      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === 'number') {\n      val = val & 0xFF; // Search for a byte value [0-255]\n\n      if (typeof Uint8Array.prototype.indexOf === 'function') {\n        if (dir) {\n          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n        } else {\n          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n      }\n\n      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n    }\n\n    throw new TypeError('val must be string, number or Buffer');\n  }\n\n  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    var indexSize = 1;\n    var arrLength = arr.length;\n    var valLength = val.length;\n\n    if (encoding !== undefined) {\n      encoding = String(encoding).toLowerCase();\n\n      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n        if (arr.length < 2 || val.length < 2) {\n          return -1;\n        }\n\n        indexSize = 2;\n        arrLength /= 2;\n        valLength /= 2;\n        byteOffset /= 2;\n      }\n    }\n\n    function read(buf, i) {\n      if (indexSize === 1) {\n        return buf[i];\n      } else {\n        return buf.readUInt16BE(i * indexSize);\n      }\n    }\n\n    var i;\n\n    if (dir) {\n      var foundIndex = -1;\n\n      for (i = byteOffset; i < arrLength; i++) {\n        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n          if (foundIndex === -1) foundIndex = i;\n          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n          if (foundIndex !== -1) i -= i - foundIndex;\n          foundIndex = -1;\n        }\n      }\n    } else {\n      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n      for (i = byteOffset; i >= 0; i--) {\n        var found = true;\n\n        for (var j = 0; j < valLength; j++) {\n          if (read(arr, i + j) !== read(val, j)) {\n            found = false;\n            break;\n          }\n        }\n\n        if (found) return i;\n      }\n    }\n\n    return -1;\n  }\n\n  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n  };\n\n  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n  };\n\n  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n  };\n\n  function hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    var remaining = buf.length - offset;\n\n    if (!length) {\n      length = remaining;\n    } else {\n      length = Number(length);\n\n      if (length > remaining) {\n        length = remaining;\n      }\n    }\n\n    var strLen = string.length;\n\n    if (length > strLen / 2) {\n      length = strLen / 2;\n    }\n\n    for (var i = 0; i < length; ++i) {\n      var parsed = parseInt(string.substr(i * 2, 2), 16);\n      if (numberIsNaN(parsed)) return i;\n      buf[offset + i] = parsed;\n    }\n\n    return i;\n  }\n\n  function utf8Write(buf, string, offset, length) {\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n  }\n\n  function asciiWrite(buf, string, offset, length) {\n    return blitBuffer(asciiToBytes(string), buf, offset, length);\n  }\n\n  function latin1Write(buf, string, offset, length) {\n    return asciiWrite(buf, string, offset, length);\n  }\n\n  function base64Write(buf, string, offset, length) {\n    return blitBuffer(base64ToBytes(string), buf, offset, length);\n  }\n\n  function ucs2Write(buf, string, offset, length) {\n    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n  }\n\n  Buffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n      encoding = 'utf8';\n      length = this.length;\n      offset = 0; // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === 'string') {\n      encoding = offset;\n      length = this.length;\n      offset = 0; // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n      offset = offset >>> 0;\n\n      if (isFinite(length)) {\n        length = length >>> 0;\n        if (encoding === undefined) encoding = 'utf8';\n      } else {\n        encoding = length;\n        length = undefined;\n      }\n    } else {\n      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n    }\n\n    var remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n      throw new RangeError('Attempt to write outside buffer bounds');\n    }\n\n    if (!encoding) encoding = 'utf8';\n    var loweredCase = false;\n\n    for (;;) {\n      switch (encoding) {\n        case 'hex':\n          return hexWrite(this, string, offset, length);\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Write(this, string, offset, length);\n\n        case 'ascii':\n          return asciiWrite(this, string, offset, length);\n\n        case 'latin1':\n        case 'binary':\n          return latin1Write(this, string, offset, length);\n\n        case 'base64':\n          // Warning: maxLength not taken into account in base64Write\n          return base64Write(this, string, offset, length);\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return ucs2Write(this, string, offset, length);\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  };\n\n  Buffer.prototype.toJSON = function toJSON() {\n    return {\n      type: 'Buffer',\n      data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n  };\n\n  function base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) {\n      return base64Js.fromByteArray(buf);\n    } else {\n      return base64Js.fromByteArray(buf.slice(start, end));\n    }\n  }\n\n  function utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    var res = [];\n    var i = start;\n\n    while (i < end) {\n      var firstByte = buf[i];\n      var codePoint = null;\n      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n      if (i + bytesPerSequence <= end) {\n        var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n        switch (bytesPerSequence) {\n          case 1:\n            if (firstByte < 0x80) {\n              codePoint = firstByte;\n            }\n\n            break;\n\n          case 2:\n            secondByte = buf[i + 1];\n\n            if ((secondByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n              if (tempCodePoint > 0x7F) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 3:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 4:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n            fourthByte = buf[i + 3];\n\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n        }\n      }\n\n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 0xFFFD;\n        bytesPerSequence = 1;\n      } else if (codePoint > 0xFFFF) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 0x10000;\n        res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n        codePoint = 0xDC00 | codePoint & 0x3FF;\n      }\n\n      res.push(codePoint);\n      i += bytesPerSequence;\n    }\n\n    return decodeCodePointsArray(res);\n  } // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n  // the lowest limit is Chrome, with 0x10000 args.\n  // We go 1 magnitude less, for safety\n\n\n  var MAX_ARGUMENTS_LENGTH = 0x1000;\n\n  function decodeCodePointsArray(codePoints) {\n    var len = codePoints.length;\n\n    if (len <= MAX_ARGUMENTS_LENGTH) {\n      return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n    } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n    var res = '';\n    var i = 0;\n\n    while (i < len) {\n      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n    }\n\n    return res;\n  }\n\n  function asciiSlice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i] & 0x7F);\n    }\n\n    return ret;\n  }\n\n  function latin1Slice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i]);\n    }\n\n    return ret;\n  }\n\n  function hexSlice(buf, start, end) {\n    var len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    var out = '';\n\n    for (var i = start; i < end; ++i) {\n      out += hexSliceLookupTable[buf[i]];\n    }\n\n    return out;\n  }\n\n  function utf16leSlice(buf, start, end) {\n    var bytes = buf.slice(start, end);\n    var res = '';\n\n    for (var i = 0; i < bytes.length; i += 2) {\n      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n    }\n\n    return res;\n  }\n\n  Buffer.prototype.slice = function slice(start, end) {\n    var len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n\n    if (start < 0) {\n      start += len;\n      if (start < 0) start = 0;\n    } else if (start > len) {\n      start = len;\n    }\n\n    if (end < 0) {\n      end += len;\n      if (end < 0) end = 0;\n    } else if (end > len) {\n      end = len;\n    }\n\n    if (end < start) end = start;\n    var newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance\n\n    Object.setPrototypeOf(newBuf, Buffer.prototype);\n    return newBuf;\n  };\n  /*\n   * Need to make sure that buffer isn't trying to write out of bounds.\n   */\n\n\n  function checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n  }\n\n  Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n\n    return val;\n  };\n\n  Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      checkOffset(offset, byteLength, this.length);\n    }\n\n    var val = this[offset + --byteLength];\n    var mul = 1;\n\n    while (byteLength > 0 && (mul *= 0x100)) {\n      val += this[offset + --byteLength] * mul;\n    }\n\n    return val;\n  };\n\n  Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    return this[offset];\n  };\n\n  Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n  };\n\n  Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n  };\n\n  Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n  };\n\n  Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n  };\n\n  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n\n  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var i = byteLength;\n    var mul = 1;\n    var val = this[offset + --i];\n\n    while (i > 0 && (mul *= 0x100)) {\n      val += this[offset + --i] * mul;\n    }\n\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n\n  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return this[offset];\n    return (0xff - this[offset] + 1) * -1;\n  };\n\n  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    var val = this[offset] | this[offset + 1] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n  };\n\n  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    var val = this[offset + 1] | this[offset] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n  };\n\n  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n  };\n\n  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n  };\n\n  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754.read(this, offset, true, 23, 4);\n  };\n\n  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754.read(this, offset, false, 23, 4);\n  };\n\n  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754.read(this, offset, true, 52, 8);\n  };\n\n  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754.read(this, offset, false, 52, 8);\n  };\n\n  function checkInt(buf, value, offset, ext, max, min) {\n    if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  }\n\n  Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var mul = 1;\n    var i = 0;\n    this[offset] = value & 0xFF;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      this[offset + i] = value / mul & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    this[offset + i] = value & 0xFF;\n\n    while (--i >= 0 && (mul *= 0x100)) {\n      this[offset + i] = value / mul & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n    this[offset] = value & 0xff;\n    return offset + 1;\n  };\n\n  Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = 0;\n    var mul = 1;\n    var sub = 0;\n    this[offset] = value & 0xFF;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n        sub = 1;\n      }\n\n      this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    var sub = 0;\n    this[offset + i] = value & 0xFF;\n\n    while (--i >= 0 && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n        sub = 1;\n      }\n\n      this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = value & 0xff;\n    return offset + 1;\n  };\n\n  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    if (value < 0) value = 0xffffffff + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n  };\n\n  function checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n    if (offset < 0) throw new RangeError('Index out of range');\n  }\n\n  function writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 4);\n    }\n\n    ieee754.write(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n  }\n\n  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, true, noAssert);\n  };\n\n  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, false, noAssert);\n  };\n\n  function writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 8);\n    }\n\n    ieee754.write(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n  }\n\n  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, true, noAssert);\n  };\n\n  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, false, noAssert);\n  }; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\n  Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n    if (targetStart < 0) {\n      throw new RangeError('targetStart out of bounds');\n    }\n\n    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n    if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n    if (end > this.length) end = this.length;\n\n    if (target.length - targetStart < end - start) {\n      end = target.length - targetStart + start;\n    }\n\n    var len = end - start;\n\n    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n      // Use built-in when available, missing from IE11\n      this.copyWithin(targetStart, start, end);\n    } else if (this === target && start < targetStart && targetStart < end) {\n      // descending copy from end\n      for (var i = len - 1; i >= 0; --i) {\n        target[i + targetStart] = this[i + start];\n      }\n    } else {\n      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    }\n\n    return len;\n  }; // Usage:\n  //    buffer.fill(number[, offset[, end]])\n  //    buffer.fill(buffer[, offset[, end]])\n  //    buffer.fill(string[, offset[, end]][, encoding])\n\n\n  Buffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n      if (typeof start === 'string') {\n        encoding = start;\n        start = 0;\n        end = this.length;\n      } else if (typeof end === 'string') {\n        encoding = end;\n        end = this.length;\n      }\n\n      if (encoding !== undefined && typeof encoding !== 'string') {\n        throw new TypeError('encoding must be a string');\n      }\n\n      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n        throw new TypeError('Unknown encoding: ' + encoding);\n      }\n\n      if (val.length === 1) {\n        var code = val.charCodeAt(0);\n\n        if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n          // Fast path: If `val` fits into a single byte, use that numeric value.\n          val = code;\n        }\n      }\n    } else if (typeof val === 'number') {\n      val = val & 255;\n    } else if (typeof val === 'boolean') {\n      val = Number(val);\n    } // Invalid ranges are not set to a default, so can range check early.\n\n\n    if (start < 0 || this.length < start || this.length < end) {\n      throw new RangeError('Out of range index');\n    }\n\n    if (end <= start) {\n      return this;\n    }\n\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    var i;\n\n    if (typeof val === 'number') {\n      for (i = start; i < end; ++i) {\n        this[i] = val;\n      }\n    } else {\n      var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n      var len = bytes.length;\n\n      if (len === 0) {\n        throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n      }\n\n      for (i = 0; i < end - start; ++i) {\n        this[i + start] = bytes[i % len];\n      }\n    }\n\n    return this;\n  }; // HELPER FUNCTIONS\n  // ================\n\n\n  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\n  function base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split('=')[0]; // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\n    str = str.trim().replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n    if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n    while (str.length % 4 !== 0) {\n      str = str + '=';\n    }\n\n    return str;\n  }\n\n  function utf8ToBytes(string, units) {\n    units = units || Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n\n    for (var i = 0; i < length; ++i) {\n      codePoint = string.charCodeAt(i); // is surrogate component\n\n      if (codePoint > 0xD7FF && codePoint < 0xE000) {\n        // last char was a lead\n        if (!leadSurrogate) {\n          // no lead yet\n          if (codePoint > 0xDBFF) {\n            // unexpected trail\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue;\n          } else if (i + 1 === length) {\n            // unpaired lead\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue;\n          } // valid lead\n\n\n          leadSurrogate = codePoint;\n          continue;\n        } // 2 leads in a row\n\n\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          leadSurrogate = codePoint;\n          continue;\n        } // valid surrogate pair\n\n\n        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n      } else if (leadSurrogate) {\n        // valid bmp char, but last char was a lead\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n      }\n\n      leadSurrogate = null; // encode utf8\n\n      if (codePoint < 0x80) {\n        if ((units -= 1) < 0) break;\n        bytes.push(codePoint);\n      } else if (codePoint < 0x800) {\n        if ((units -= 2) < 0) break;\n        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n      } else if (codePoint < 0x10000) {\n        if ((units -= 3) < 0) break;\n        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n      } else if (codePoint < 0x110000) {\n        if ((units -= 4) < 0) break;\n        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n      } else {\n        throw new Error('Invalid code point');\n      }\n    }\n\n    return bytes;\n  }\n\n  function asciiToBytes(str) {\n    var byteArray = [];\n\n    for (var i = 0; i < str.length; ++i) {\n      // Node's code seems to be doing this and not & 0x7F..\n      byteArray.push(str.charCodeAt(i) & 0xFF);\n    }\n\n    return byteArray;\n  }\n\n  function utf16leToBytes(str, units) {\n    var c, hi, lo;\n    var byteArray = [];\n\n    for (var i = 0; i < str.length; ++i) {\n      if ((units -= 2) < 0) break;\n      c = str.charCodeAt(i);\n      hi = c >> 8;\n      lo = c % 256;\n      byteArray.push(lo);\n      byteArray.push(hi);\n    }\n\n    return byteArray;\n  }\n\n  function base64ToBytes(str) {\n    return base64Js.toByteArray(base64clean(str));\n  }\n\n  function blitBuffer(src, dst, offset, length) {\n    for (var i = 0; i < length; ++i) {\n      if (i + offset >= dst.length || i >= src.length) break;\n      dst[i + offset] = src[i];\n    }\n\n    return i;\n  } // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n  // the `instanceof` check but they should be treated as of that type.\n  // See: https://github.com/feross/buffer/issues/166\n\n\n  function isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n  }\n\n  function numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj; // eslint-disable-line no-self-compare\n  } // Create lookup table for `toString('hex')`\n  // See: https://github.com/feross/buffer/issues/219\n\n\n  var hexSliceLookupTable = function () {\n    var alphabet = '0123456789abcdef';\n    var table = new Array(256);\n\n    for (var i = 0; i < 16; ++i) {\n      var i16 = i * 16;\n\n      for (var j = 0; j < 16; ++j) {\n        table[i16 + j] = alphabet[i] + alphabet[j];\n      }\n    }\n\n    return table;\n  }();\n});\nvar buffer_1 = buffer.Buffer;\nvar buffer_2 = buffer.SlowBuffer;\nvar buffer_3 = buffer.INSPECT_MAX_BYTES;\nvar buffer_4 = buffer.kMaxLength;\nvar ensure_buffer = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ensureBuffer = void 0;\n  /**\n   * Makes sure that, if a Uint8Array is passed in, it is wrapped in a Buffer.\n   *\n   * @param potentialBuffer - The potential buffer\n   * @returns Buffer the input if potentialBuffer is a buffer, or a buffer that\n   * wraps a passed in Uint8Array\n   * @throws TypeError If anything other than a Buffer or Uint8Array is passed in\n   */\n\n  function ensureBuffer(potentialBuffer) {\n    if (buffer.Buffer.isBuffer(potentialBuffer)) {\n      return potentialBuffer;\n    }\n\n    if (ArrayBuffer.isView(potentialBuffer)) {\n      return buffer.Buffer.from(potentialBuffer.buffer);\n    }\n\n    if (potentialBuffer instanceof ArrayBuffer) {\n      return buffer.Buffer.from(potentialBuffer);\n    }\n\n    throw new TypeError('Must use either Buffer or TypedArray');\n  }\n\n  exports.ensureBuffer = ensureBuffer;\n});\nunwrapExports(ensure_buffer);\nvar ensure_buffer_1 = ensure_buffer.ensureBuffer;\nvar uuid = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.parseUUID = void 0;\n  /**\n   * UUID regular expression pattern copied from `uuid` npm module.\n   * @see https://github.com/uuidjs/uuid/blob/master/src/regex.js\n   */\n\n  const UUID_RX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n  /**\n   * Parser function copied from `uuid` npm module.\n   * @see https://github.com/uuidjs/uuid/blob/master/src/parse.js\n   * @internal\n   */\n\n  function parseUUID(uuid) {\n    if (typeof uuid !== 'string') {\n      throw new TypeError('Invalid type for UUID, expected string but got ' + typeof uuid);\n    }\n\n    if (!UUID_RX.test(uuid)) {\n      throw new TypeError('Invalid format for UUID: ' + uuid);\n    }\n\n    let v;\n    const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n    arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n    arr[1] = v >>> 16 & 0xff;\n    arr[2] = v >>> 8 & 0xff;\n    arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n    arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n    arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n    arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n    arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n    arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n    arr[9] = v & 0xff; // Parse ........-....-....-....-############\n    // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n    arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n    arr[11] = v / 0x100000000 & 0xff;\n    arr[12] = v >>> 24 & 0xff;\n    arr[13] = v >>> 16 & 0xff;\n    arr[14] = v >>> 8 & 0xff;\n    arr[15] = v & 0xff;\n    return arr;\n  }\n\n  exports.parseUUID = parseUUID;\n});\nunwrapExports(uuid);\nvar uuid_1 = uuid.parseUUID;\nvar binary = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Binary = void 0;\n  /**\n   * A class representation of the BSON Binary type.\n   * @public\n   */\n\n  class Binary {\n    /**\n     * @param buffer - a buffer object containing the binary data.\n     * @param subType - the option binary type.\n     */\n    constructor(buffer$1, subType) {\n      if (!(buffer$1 == null) && !(typeof buffer$1 === 'string') && !ArrayBuffer.isView(buffer$1) && !(buffer$1 instanceof ArrayBuffer) && !Array.isArray(buffer$1)) {\n        throw new TypeError('Binary can only be constructed from string, Buffer, TypedArray, or Array<number>');\n      }\n\n      this.sub_type = subType !== null && subType !== void 0 ? subType : Binary.BSON_BINARY_SUBTYPE_DEFAULT;\n\n      if (buffer$1 == null) {\n        // create an empty binary buffer\n        this.buffer = buffer.Buffer.alloc(Binary.BUFFER_SIZE);\n        this.position = 0;\n      } else {\n        if (typeof buffer$1 === 'string') {\n          // string\n          this.buffer = buffer.Buffer.from(buffer$1, 'binary');\n        } else if (Array.isArray(buffer$1)) {\n          // number[]\n          this.buffer = buffer.Buffer.from(buffer$1);\n        } else {\n          // Buffer | TypedArray | ArrayBuffer\n          this.buffer = ensure_buffer.ensureBuffer(buffer$1);\n        }\n\n        this.position = this.buffer.byteLength;\n      }\n    }\n    /**\n     * Updates this binary with byte_value.\n     *\n     * @param byteValue - a single byte we wish to write.\n     */\n\n\n    put(byteValue) {\n      // If it's a string and a has more than one character throw an error\n      if (typeof byteValue === 'string' && byteValue.length !== 1) {\n        throw new TypeError('only accepts single character String');\n      } else if (typeof byteValue !== 'number' && byteValue.length !== 1) throw new TypeError('only accepts single character Uint8Array or Array'); // Decode the byte value once\n\n\n      let decodedByte;\n\n      if (typeof byteValue === 'string') {\n        decodedByte = byteValue.charCodeAt(0);\n      } else if (typeof byteValue === 'number') {\n        decodedByte = byteValue;\n      } else {\n        decodedByte = byteValue[0];\n      }\n\n      if (decodedByte < 0 || decodedByte > 255) {\n        throw new TypeError('only accepts number in a valid unsigned byte range 0-255');\n      }\n\n      if (this.buffer.length > this.position) {\n        this.buffer[this.position++] = decodedByte;\n      } else {\n        const buffer$1 = buffer.Buffer.alloc(Binary.BUFFER_SIZE + this.buffer.length); // Combine the two buffers together\n\n        this.buffer.copy(buffer$1, 0, 0, this.buffer.length);\n        this.buffer = buffer$1;\n        this.buffer[this.position++] = decodedByte;\n      }\n    }\n    /**\n     * Writes a buffer or string to the binary.\n     *\n     * @param sequence - a string or buffer to be written to the Binary BSON object.\n     * @param offset - specify the binary of where to write the content.\n     */\n\n\n    write(sequence, offset) {\n      offset = typeof offset === 'number' ? offset : this.position; // If the buffer is to small let's extend the buffer\n\n      if (this.buffer.length < offset + sequence.length) {\n        const buffer$1 = buffer.Buffer.alloc(this.buffer.length + sequence.length);\n        this.buffer.copy(buffer$1, 0, 0, this.buffer.length); // Assign the new buffer\n\n        this.buffer = buffer$1;\n      }\n\n      if (ArrayBuffer.isView(sequence)) {\n        this.buffer.set(ensure_buffer.ensureBuffer(sequence), offset);\n        this.position = offset + sequence.byteLength > this.position ? offset + sequence.length : this.position;\n      } else if (typeof sequence === 'string') {\n        this.buffer.write(sequence, offset, sequence.length, 'binary');\n        this.position = offset + sequence.length > this.position ? offset + sequence.length : this.position;\n      }\n    }\n    /**\n     * Reads **length** bytes starting at **position**.\n     *\n     * @param position - read from the given position in the Binary.\n     * @param length - the number of bytes to read.\n     */\n\n\n    read(position, length) {\n      length = length && length > 0 ? length : this.position; // Let's return the data based on the type we have\n\n      return this.buffer.slice(position, position + length);\n    }\n    /**\n     * Returns the value of this binary as a string.\n     * @param asRaw - Will skip converting to a string\n     * @remarks\n     * This is handy when calling this function conditionally for some key value pairs and not others\n     */\n\n\n    value(asRaw) {\n      asRaw = !!asRaw; // Optimize to serialize for the situation where the data == size of buffer\n\n      if (asRaw && this.buffer.length === this.position) {\n        return this.buffer;\n      } // If it's a node.js buffer object\n\n\n      if (asRaw) {\n        return this.buffer.slice(0, this.position);\n      }\n\n      return this.buffer.toString('binary', 0, this.position);\n    }\n    /** the length of the binary sequence */\n\n\n    length() {\n      return this.position;\n    }\n    /** @internal */\n\n\n    toJSON() {\n      return this.buffer.toString('base64');\n    }\n    /** @internal */\n\n\n    toString(format) {\n      return this.buffer.toString(format);\n    }\n    /** @internal */\n\n\n    toExtendedJSON(options) {\n      options = options || {};\n      const base64String = this.buffer.toString('base64');\n      const subType = Number(this.sub_type).toString(16);\n\n      if (options.legacy) {\n        return {\n          $binary: base64String,\n          $type: subType.length === 1 ? '0' + subType : subType\n        };\n      }\n\n      return {\n        $binary: {\n          base64: base64String,\n          subType: subType.length === 1 ? '0' + subType : subType\n        }\n      };\n    }\n    /** @internal */\n\n\n    static fromExtendedJSON(doc, options) {\n      options = options || {};\n      let data;\n      let type;\n\n      if ('$binary' in doc) {\n        if (options.legacy && typeof doc.$binary === 'string' && '$type' in doc) {\n          type = doc.$type ? parseInt(doc.$type, 16) : 0;\n          data = buffer.Buffer.from(doc.$binary, 'base64');\n        } else {\n          if (typeof doc.$binary !== 'string') {\n            type = doc.$binary.subType ? parseInt(doc.$binary.subType, 16) : 0;\n            data = buffer.Buffer.from(doc.$binary.base64, 'base64');\n          }\n        }\n      } else if ('$uuid' in doc) {\n        type = 4;\n        data = buffer.Buffer.from(uuid.parseUUID(doc.$uuid));\n      }\n\n      if (!data) {\n        throw new TypeError(`Unexpected Binary Extended JSON format ${JSON.stringify(doc)}`);\n      }\n\n      return new Binary(data, type);\n    }\n\n  }\n\n  exports.Binary = Binary;\n  /**\n   * Binary default subtype\n   * @internal\n   */\n\n  Binary.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n  /** Initial buffer default size */\n\n  Binary.BUFFER_SIZE = 256;\n  /** Default BSON type */\n\n  Binary.SUBTYPE_DEFAULT = 0;\n  /** Function BSON type */\n\n  Binary.SUBTYPE_FUNCTION = 1;\n  /** Byte Array BSON type */\n\n  Binary.SUBTYPE_BYTE_ARRAY = 2;\n  /** Deprecated UUID BSON type @deprecated Please use SUBTYPE_UUID */\n\n  Binary.SUBTYPE_UUID_OLD = 3;\n  /** UUID BSON type */\n\n  Binary.SUBTYPE_UUID = 4;\n  /** MD5 BSON type */\n\n  Binary.SUBTYPE_MD5 = 5;\n  /** User BSON type */\n\n  Binary.SUBTYPE_USER_DEFINED = 128;\n  Object.defineProperty(Binary.prototype, '_bsontype', {\n    value: 'Binary'\n  });\n});\nunwrapExports(binary);\nvar binary_1 = binary.Binary;\nvar code$1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Code = void 0;\n  /**\n   * A class representation of the BSON Code type.\n   * @public\n   */\n\n  class Code {\n    /**\n     * @param code - a string or function.\n     * @param scope - an optional scope for the function.\n     */\n    constructor(code, scope) {\n      this.code = code;\n      this.scope = scope;\n    }\n    /** @internal */\n\n\n    toJSON() {\n      return {\n        code: this.code,\n        scope: this.scope\n      };\n    }\n    /** @internal */\n\n\n    toExtendedJSON() {\n      if (this.scope) {\n        return {\n          $code: this.code,\n          $scope: this.scope\n        };\n      }\n\n      return {\n        $code: this.code\n      };\n    }\n    /** @internal */\n\n\n    static fromExtendedJSON(doc) {\n      return new Code(doc.$code, doc.$scope);\n    }\n\n  }\n\n  exports.Code = Code;\n  Object.defineProperty(Code.prototype, '_bsontype', {\n    value: 'Code'\n  });\n});\nunwrapExports(code$1);\nvar code_1 = code$1.Code;\nvar require$$0 = {};\nvar inherits;\n\nif (typeof Object.create === 'function') {\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\n\nvar inherits$1 = inherits; // Copyright Joyent, Inc. and other Node contributors.\n\nvar formatRegExp = /%[sdj%]/g;\n\nfunction format(f) {\n  if (!isString(f)) {\n    var objects = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function (x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n\n    switch (x) {\n      case '%s':\n        return String(args[i++]);\n\n      case '%d':\n        return Number(args[i++]);\n\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n\n      default:\n        return x;\n    }\n  });\n\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n\n  return str;\n} // Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\n\n\nfunction deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function () {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n\n  function deprecated() {\n    if (!warned) {\n      {\n        console.error(msg);\n      }\n      warned = true;\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\nvar debugs = {};\nvar debugEnviron;\n\nfunction debuglog(set) {\n  if (isUndefined(debugEnviron)) debugEnviron = '';\n  set = set.toUpperCase();\n\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n\n      debugs[set] = function () {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function () {};\n    }\n  }\n\n  return debugs[set];\n}\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n\n/* legacy: obj, showHidden, depth, colors*/\n\n\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  }; // legacy...\n\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  } // set default options\n\n\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n} // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\n\ninspect.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n}; // Don't use 'blue' not visible on cmd.exe\n\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return \"\\x1B[\" + inspect.colors[style][0] + 'm' + str + \"\\x1B[\" + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\nfunction arrayToHash(array) {\n  var hash = {};\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n  return hash;\n}\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special\n  value.inspect !== inspect && // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n\n    return ret;\n  } // Primitive types cannot have properties\n\n\n  var primitive = formatPrimitive(ctx, value);\n\n  if (primitive) {\n    return primitive;\n  } // Look up the keys of the object.\n\n\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  } // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\n\n  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  } // Some type of object without properties can be shortcutted.\n\n\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      braces = ['{', '}']; // Make Array say that they are Array\n\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  } // Make functions say that they are functions\n\n\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  } // Make RegExps say that they are RegExps\n\n\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  } // Make dates with properties first say the date\n\n\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  } // Make error with message first say the error\n\n\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n  var output;\n\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n\n  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is \"object\", so special case here.\n\n  if (isNull(value)) return ctx.stylize('null', 'null');\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || {\n    value: value[key]\n  };\n\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n\n    name = JSON.stringify('' + key);\n\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function (prev, cur) {\n    if (cur.indexOf('\\n') >= 0) ;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n} // NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nfunction isSymbol(arg) {\n  return babelHelpers[\"typeof\"](arg) === 'symbol';\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nfunction isObject(arg) {\n  return babelHelpers[\"typeof\"](arg) === 'object' && arg !== null;\n}\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || babelHelpers[\"typeof\"](arg) === 'symbol' || // ES6 symbol\n  typeof arg === 'undefined';\n}\n\nfunction isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34\n\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n} // log is just a thin wrapper to console.log that prepends a timestamp\n\n\nfunction log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\nfunction _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n  var keys = Object.keys(add);\n  var i = keys.length;\n\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n\n  return origin;\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar require$$1 = {\n  inherits: inherits$1,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n};\nvar utils = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.deprecate = exports.isObjectLike = exports.isDate = exports.isBuffer = exports.haveBuffer = exports.isBigUInt64Array = exports.isBigInt64Array = exports.isUint8Array = exports.randomBytes = exports.normalizedFunctionString = void 0;\n  /**\n   * Normalizes our expected stringified form of a function across versions of node\n   * @param fn - The function to stringify\n   */\n\n  function normalizedFunctionString(fn) {\n    return fn.toString().replace('function(', 'function (');\n  }\n\n  exports.normalizedFunctionString = normalizedFunctionString;\n\n  function insecureRandomBytes(size) {\n    const result = buffer.Buffer.alloc(size);\n\n    for (let i = 0; i < size; ++i) result[i] = Math.floor(Math.random() * 256);\n\n    return result;\n  }\n\n  exports.randomBytes = insecureRandomBytes;\n\n  if (typeof window !== 'undefined' && window.crypto && window.crypto.getRandomValues) {\n    exports.randomBytes = size => window.crypto.getRandomValues(buffer.Buffer.alloc(size));\n  } else {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      exports.randomBytes = require$$0.randomBytes;\n    } catch (e) {// keep the fallback\n    } // NOTE: in transpiled cases the above require might return null/undefined\n\n\n    if (exports.randomBytes == null) {\n      exports.randomBytes = insecureRandomBytes;\n    }\n  }\n\n  function isUint8Array(value) {\n    return Object.prototype.toString.call(value) === '[object Uint8Array]';\n  }\n\n  exports.isUint8Array = isUint8Array;\n\n  function isBigInt64Array(value) {\n    return Object.prototype.toString.call(value) === '[object BigInt64Array]';\n  }\n\n  exports.isBigInt64Array = isBigInt64Array;\n\n  function isBigUInt64Array(value) {\n    return Object.prototype.toString.call(value) === '[object BigUint64Array]';\n  }\n\n  exports.isBigUInt64Array = isBigUInt64Array;\n  /** Call to check if your environment has `Buffer` */\n\n  function haveBuffer() {\n    return typeof commonjsGlobal !== 'undefined' && typeof commonjsGlobal.Buffer !== 'undefined';\n  }\n\n  exports.haveBuffer = haveBuffer;\n  /** Callable in any environment to check if value is a Buffer */\n\n  function isBuffer(value) {\n    return haveBuffer() && buffer.Buffer.isBuffer(value);\n  }\n\n  exports.isBuffer = isBuffer; // To ensure that 0.4 of node works correctly\n\n  function isDate(d) {\n    return isObjectLike(d) && Object.prototype.toString.call(d) === '[object Date]';\n  }\n\n  exports.isDate = isDate;\n  /**\n   * @internal\n   * this is to solve the `'someKey' in x` problem where x is unknown.\n   * https://github.com/typescript-eslint/typescript-eslint/issues/1071#issuecomment-541955753\n   */\n\n  function isObjectLike(candidate) {\n    return typeof candidate === 'object' && candidate !== null;\n  }\n\n  exports.isObjectLike = isObjectLike;\n\n  function deprecate(fn, message) {\n    if (typeof window === 'undefined' || typeof self === 'undefined') {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      return require$$1.deprecate(fn, message);\n    }\n\n    let warned = false;\n\n    function deprecated(...args) {\n      if (!warned) {\n        console.warn(message);\n        warned = true;\n      }\n\n      return fn.apply(this, ...args);\n    }\n\n    return deprecated;\n  }\n\n  exports.deprecate = deprecate;\n});\nunwrapExports(utils);\nvar utils_1 = utils.deprecate;\nvar utils_2 = utils.isObjectLike;\nvar utils_3 = utils.isDate;\nvar utils_4 = utils.isBuffer;\nvar utils_5 = utils.haveBuffer;\nvar utils_6 = utils.isBigUInt64Array;\nvar utils_7 = utils.isBigInt64Array;\nvar utils_8 = utils.isUint8Array;\nvar utils_9 = utils.randomBytes;\nvar utils_10 = utils.normalizedFunctionString;\nvar db_ref = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.DBRef = exports.isDBRefLike = void 0;\n  /** @internal */\n\n  function isDBRefLike(value) {\n    return utils.isObjectLike(value) && value['$id'] != null && value['$ref'] != null;\n  }\n\n  exports.isDBRefLike = isDBRefLike;\n  /**\n   * A class representation of the BSON DBRef type.\n   * @public\n   */\n\n  class DBRef {\n    /**\n     * @param collection - the collection name.\n     * @param oid - the reference ObjectId.\n     * @param db - optional db name, if omitted the reference is local to the current db.\n     */\n    constructor(collection, oid, db, fields) {\n      // check if namespace has been provided\n      const parts = collection.split('.');\n\n      if (parts.length === 2) {\n        db = parts.shift(); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n        collection = parts.shift();\n      }\n\n      this.collection = collection;\n      this.oid = oid;\n      this.db = db;\n      this.fields = fields || {};\n    } // Property provided for compatibility with the 1.x parser\n    // the 1.x parser used a \"namespace\" property, while 4.x uses \"collection\"\n\n    /** @internal */\n\n\n    get namespace() {\n      return this.collection;\n    }\n\n    set namespace(value) {\n      this.collection = value;\n    }\n    /** @internal */\n\n\n    toJSON() {\n      const o = Object.assign({\n        $ref: this.collection,\n        $id: this.oid\n      }, this.fields);\n      if (this.db != null) o.$db = this.db;\n      return o;\n    }\n    /** @internal */\n\n\n    toExtendedJSON(options) {\n      options = options || {};\n      let o = {\n        $ref: this.collection,\n        $id: this.oid\n      };\n\n      if (options.legacy) {\n        return o;\n      }\n\n      if (this.db) o.$db = this.db;\n      o = Object.assign(o, this.fields);\n      return o;\n    }\n    /** @internal */\n\n\n    static fromExtendedJSON(doc) {\n      const copy = Object.assign({}, doc);\n      delete copy.$ref;\n      delete copy.$id;\n      delete copy.$db;\n      return new DBRef(doc.$ref, doc.$id, doc.$db, copy);\n    }\n\n  }\n\n  exports.DBRef = DBRef;\n  Object.defineProperty(DBRef.prototype, '_bsontype', {\n    value: 'DBRef'\n  });\n});\nunwrapExports(db_ref);\nvar db_ref_1 = db_ref.DBRef;\nvar db_ref_2 = db_ref.isDBRefLike;\nvar long_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Long = void 0;\n  /**\n   * wasm optimizations, to do native i64 multiplication and divide\n   */\n\n  let wasm = undefined;\n\n  try {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module( // prettier-ignore\n    new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n  } catch (_a) {// no wasm support\n  }\n\n  const TWO_PWR_16_DBL = 1 << 16;\n  const TWO_PWR_24_DBL = 1 << 24;\n  const TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n  const TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n  const TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n  /** A cache of the Long representations of small integer values. */\n\n  const INT_CACHE = {};\n  /** A cache of the Long representations of small unsigned integer values. */\n\n  const UINT_CACHE = {};\n  /**\n   * A class representing a 64-bit integer\n   * @public\n   * @remarks\n   * The internal representation of a long is the two given signed, 32-bit values.\n   * We use 32-bit pieces because these are the size of integers on which\n   * Javascript performs bit-operations.  For operations like addition and\n   * multiplication, we split each number into 16 bit pieces, which can easily be\n   * multiplied within Javascript's floating-point representation without overflow\n   * or change in sign.\n   * In the algorithms below, we frequently reduce the negative case to the\n   * positive case by negating the input(s) and then post-processing the result.\n   * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n   * a positive number, it overflows back into a negative).  Not handling this\n   * case would often result in infinite recursion.\n   * Common constant values ZERO, ONE, NEG_ONE, etc. are found as static properties on this class.\n   */\n\n  class Long {\n    /**\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n     *  See the from* functions below for more convenient ways of constructing Longs.\n     * @param low - The low (signed) 32 bits of the long\n     * @param high - The high (signed) 32 bits of the long\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     */\n    constructor(low = 0, high = 0, unsigned) {\n      /** This is an alias of {@link Long.compare} */\n      this.comp = Long.prototype.compare;\n      /**This is an alias of {@link Long.divide} */\n\n      this.div = Long.prototype.divide;\n      /** This is an alias of {@link Long.equals} */\n\n      this.eq = Long.prototype.equals;\n      /** This is an alias of {@link Long.greaterThan} */\n\n      this.gt = Long.prototype.greaterThan;\n      /** This is an alias of {@link Long.greaterThanOrEqual} */\n\n      this.gte = Long.prototype.greaterThanOrEqual;\n      /** This is an alias of {@link Long.greaterThanOrEqual} */\n\n      this.ge = Long.prototype.greaterThanOrEqual;\n      /** This is an alias of {@link Long#lessThan}. */\n\n      this.lt = Long.prototype.lessThan;\n      /** This is an alias of {@link Long.lessThanOrEqual} */\n\n      this.lte = Long.prototype.lessThanOrEqual;\n      /** This is an alias of {@link Long.modulo} */\n\n      this.mod = Long.prototype.modulo;\n      /** This is an alias of {@link Long.modulo} */\n\n      this.rem = Long.prototype.modulo;\n      /** This is an alias of {@link Long.multiply} */\n\n      this.mul = Long.prototype.multiply;\n      /** This is an alias of {@link Long.negate} */\n\n      this.neg = Long.prototype.negate;\n      /** This is an alias of {@link Long.notEquals} */\n\n      this.neq = Long.prototype.notEquals;\n      /** This is an alias of {@link Long.notEquals} */\n\n      this.ne = Long.prototype.notEquals;\n      /** This is an alias of {@link Long.shiftLeft} */\n\n      this.shl = Long.prototype.shiftLeft;\n      /** This is an alias of {@link Long.shiftRight} */\n\n      this.shr = Long.prototype.shiftRight;\n      /** This is an alias of {@link Long.shiftRightUnsigned} */\n\n      this.shr_u = Long.prototype.shiftRightUnsigned;\n      /** This is an alias of {@link Long.shiftRightUnsigned} */\n\n      this.shru = Long.prototype.shiftRightUnsigned;\n      /** This is an alias of {@link Long.subtract} */\n\n      this.sub = Long.prototype.subtract;\n      /** This is an alias of {@link Long.isZero} */\n\n      this.eqz = Long.prototype.isZero;\n      /** This is an alias of {@link Long.lessThanOrEqual} */\n\n      this.le = Long.prototype.lessThanOrEqual;\n      this.low = low | 0;\n      this.high = high | 0;\n      this.unsigned = !!unsigned;\n      Object.defineProperty(this, '__isLong__', {\n        value: true,\n        configurable: false,\n        writable: false,\n        enumerable: false\n      });\n    }\n    /**\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits.\n     * Each is assumed to use 32 bits.\n     * @param lowBits - The low 32 bits\n     * @param highBits - The high 32 bits\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n\n\n    static fromBits(lowBits, highBits, unsigned) {\n      return new Long(lowBits, highBits, unsigned);\n    }\n    /**\n     * Returns a Long representing the given 32 bit integer value.\n     * @param value - The 32 bit integer in question\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n\n\n    static fromInt(value, unsigned) {\n      let obj, cachedObj, cache;\n\n      if (unsigned) {\n        value >>>= 0;\n\n        if (cache = 0 <= value && value < 256) {\n          cachedObj = UINT_CACHE[value];\n          if (cachedObj) return cachedObj;\n        }\n\n        obj = Long.fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache) UINT_CACHE[value] = obj;\n        return obj;\n      } else {\n        value |= 0;\n\n        if (cache = -128 <= value && value < 128) {\n          cachedObj = INT_CACHE[value];\n          if (cachedObj) return cachedObj;\n        }\n\n        obj = Long.fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache) INT_CACHE[value] = obj;\n        return obj;\n      }\n    }\n    /**\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n     * @param value - The number in question\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n\n\n    static fromNumber(value, unsigned) {\n      if (isNaN(value)) return unsigned ? Long.UZERO : Long.ZERO;\n\n      if (unsigned) {\n        if (value < 0) return Long.UZERO;\n        if (value >= TWO_PWR_64_DBL) return Long.MAX_UNSIGNED_VALUE;\n      } else {\n        if (value <= -TWO_PWR_63_DBL) return Long.MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL) return Long.MAX_VALUE;\n      }\n\n      if (value < 0) return Long.fromNumber(-value, unsigned).neg();\n      return Long.fromBits(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0, unsigned);\n    }\n    /**\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n     * @param value - The number in question\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n\n\n    static fromBigInt(value, unsigned) {\n      return Long.fromString(value.toString(), unsigned);\n    }\n    /**\n     * Returns a Long representation of the given string, written using the specified radix.\n     * @param str - The textual representation of the Long\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @param radix - The radix in which the text is written (2-36), defaults to 10\n     * @returns The corresponding Long value\n     */\n\n\n    static fromString(str, unsigned, radix) {\n      if (str.length === 0) throw Error('empty string');\n      if (str === 'NaN' || str === 'Infinity' || str === '+Infinity' || str === '-Infinity') return Long.ZERO;\n\n      if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned, unsigned = false;\n      } else {\n        unsigned = !!unsigned;\n      }\n\n      radix = radix || 10;\n      if (radix < 2 || 36 < radix) throw RangeError('radix');\n      let p;\n      if ((p = str.indexOf('-')) > 0) throw Error('interior hyphen');else if (p === 0) {\n        return Long.fromString(str.substring(1), unsigned, radix).neg();\n      } // Do several (8) digits each time through the loop, so as to\n      // minimize the calls to the very expensive emulated div.\n\n      const radixToPower = Long.fromNumber(Math.pow(radix, 8));\n      let result = Long.ZERO;\n\n      for (let i = 0; i < str.length; i += 8) {\n        const size = Math.min(8, str.length - i),\n              value = parseInt(str.substring(i, i + size), radix);\n\n        if (size < 8) {\n          const power = Long.fromNumber(Math.pow(radix, size));\n          result = result.mul(power).add(Long.fromNumber(value));\n        } else {\n          result = result.mul(radixToPower);\n          result = result.add(Long.fromNumber(value));\n        }\n      }\n\n      result.unsigned = unsigned;\n      return result;\n    }\n    /**\n     * Creates a Long from its byte representation.\n     * @param bytes - Byte representation\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @param le - Whether little or big endian, defaults to big endian\n     * @returns The corresponding Long value\n     */\n\n\n    static fromBytes(bytes, unsigned, le) {\n      return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n    }\n    /**\n     * Creates a Long from its little endian byte representation.\n     * @param bytes - Little endian byte representation\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n\n\n    static fromBytesLE(bytes, unsigned) {\n      return new Long(bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24, bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24, unsigned);\n    }\n    /**\n     * Creates a Long from its big endian byte representation.\n     * @param bytes - Big endian byte representation\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n\n\n    static fromBytesBE(bytes, unsigned) {\n      return new Long(bytes[4] << 24 | bytes[5] << 16 | bytes[6] << 8 | bytes[7], bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], unsigned);\n    }\n    /**\n     * Tests if the specified object is a Long.\n     */\n\n\n    static isLong(value) {\n      return utils.isObjectLike(value) && value['__isLong__'] === true;\n    }\n    /**\n     * Converts the specified value to a Long.\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     */\n\n\n    static fromValue(val, unsigned) {\n      if (typeof val === 'number') return Long.fromNumber(val, unsigned);\n      if (typeof val === 'string') return Long.fromString(val, unsigned); // Throws for non-objects, converts non-instanceof Long:\n\n      return Long.fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n    }\n    /** Returns the sum of this and the specified Long. */\n\n\n    add(addend) {\n      if (!Long.isLong(addend)) addend = Long.fromValue(addend); // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n      const a48 = this.high >>> 16;\n      const a32 = this.high & 0xffff;\n      const a16 = this.low >>> 16;\n      const a00 = this.low & 0xffff;\n      const b48 = addend.high >>> 16;\n      const b32 = addend.high & 0xffff;\n      const b16 = addend.low >>> 16;\n      const b00 = addend.low & 0xffff;\n      let c48 = 0,\n          c32 = 0,\n          c16 = 0,\n          c00 = 0;\n      c00 += a00 + b00;\n      c16 += c00 >>> 16;\n      c00 &= 0xffff;\n      c16 += a16 + b16;\n      c32 += c16 >>> 16;\n      c16 &= 0xffff;\n      c32 += a32 + b32;\n      c48 += c32 >>> 16;\n      c32 &= 0xffff;\n      c48 += a48 + b48;\n      c48 &= 0xffff;\n      return Long.fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);\n    }\n    /**\n     * Returns the sum of this and the specified Long.\n     * @returns Sum\n     */\n\n\n    and(other) {\n      if (!Long.isLong(other)) other = Long.fromValue(other);\n      return Long.fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n    }\n    /**\n     * Compares this Long's value with the specified's.\n     * @returns 0 if they are the same, 1 if the this is greater and -1 if the given one is greater\n     */\n\n\n    compare(other) {\n      if (!Long.isLong(other)) other = Long.fromValue(other);\n      if (this.eq(other)) return 0;\n      const thisNeg = this.isNegative(),\n            otherNeg = other.isNegative();\n      if (thisNeg && !otherNeg) return -1;\n      if (!thisNeg && otherNeg) return 1; // At this point the sign bits are the same\n\n      if (!this.unsigned) return this.sub(other).isNegative() ? -1 : 1; // Both are positive if at least one is unsigned\n\n      return other.high >>> 0 > this.high >>> 0 || other.high === this.high && other.low >>> 0 > this.low >>> 0 ? -1 : 1;\n    }\n    /**\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or unsigned if this Long is unsigned.\n     * @returns Quotient\n     */\n\n\n    divide(divisor) {\n      if (!Long.isLong(divisor)) divisor = Long.fromValue(divisor);\n      if (divisor.isZero()) throw Error('division by zero'); // use wasm support if present\n\n      if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!this.unsigned && this.high === -0x80000000 && divisor.low === -1 && divisor.high === -1) {\n          // be consistent with non-wasm code path\n          return this;\n        }\n\n        const low = (this.unsigned ? wasm.div_u : wasm.div_s)(this.low, this.high, divisor.low, divisor.high);\n        return Long.fromBits(low, wasm.get_high(), this.unsigned);\n      }\n\n      if (this.isZero()) return this.unsigned ? Long.UZERO : Long.ZERO;\n      let approx, rem, res;\n\n      if (!this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (this.eq(Long.MIN_VALUE)) {\n          if (divisor.eq(Long.ONE) || divisor.eq(Long.NEG_ONE)) return Long.MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n          else if (divisor.eq(Long.MIN_VALUE)) return Long.ONE;else {\n              // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n              const halfThis = this.shr(1);\n              approx = halfThis.div(divisor).shl(1);\n\n              if (approx.eq(Long.ZERO)) {\n                return divisor.isNegative() ? Long.ONE : Long.NEG_ONE;\n              } else {\n                rem = this.sub(divisor.mul(approx));\n                res = approx.add(rem.div(divisor));\n                return res;\n              }\n            }\n        } else if (divisor.eq(Long.MIN_VALUE)) return this.unsigned ? Long.UZERO : Long.ZERO;\n\n        if (this.isNegative()) {\n          if (divisor.isNegative()) return this.neg().div(divisor.neg());\n          return this.neg().div(divisor).neg();\n        } else if (divisor.isNegative()) return this.div(divisor.neg()).neg();\n\n        res = Long.ZERO;\n      } else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned) divisor = divisor.toUnsigned();\n        if (divisor.gt(this)) return Long.UZERO;\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n          return Long.UONE;\n        res = Long.UZERO;\n      } // Repeat the following until the remainder is less than other:  find a\n      // floating-point that approximates remainder / other *from below*, add this\n      // into the result, and subtract it from the remainder.  It is critical that\n      // the approximate value is less than or equal to the real value so that the\n      // remainder never becomes negative.\n\n\n      rem = this;\n\n      while (rem.gte(divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber())); // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n\n        const log2 = Math.ceil(Math.log(approx) / Math.LN2);\n        const delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48); // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n\n        let approxRes = Long.fromNumber(approx);\n        let approxRem = approxRes.mul(divisor);\n\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\n          approx -= delta;\n          approxRes = Long.fromNumber(approx, this.unsigned);\n          approxRem = approxRes.mul(divisor);\n        } // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n\n\n        if (approxRes.isZero()) approxRes = Long.ONE;\n        res = res.add(approxRes);\n        rem = rem.sub(approxRem);\n      }\n\n      return res;\n    }\n    /**\n     * Tests if this Long's value equals the specified's.\n     * @param other - Other value\n     */\n\n\n    equals(other) {\n      if (!Long.isLong(other)) other = Long.fromValue(other);\n      if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;\n      return this.high === other.high && this.low === other.low;\n    }\n    /** Gets the high 32 bits as a signed integer. */\n\n\n    getHighBits() {\n      return this.high;\n    }\n    /** Gets the high 32 bits as an unsigned integer. */\n\n\n    getHighBitsUnsigned() {\n      return this.high >>> 0;\n    }\n    /** Gets the low 32 bits as a signed integer. */\n\n\n    getLowBits() {\n      return this.low;\n    }\n    /** Gets the low 32 bits as an unsigned integer. */\n\n\n    getLowBitsUnsigned() {\n      return this.low >>> 0;\n    }\n    /** Gets the number of bits needed to represent the absolute value of this Long. */\n\n\n    getNumBitsAbs() {\n      if (this.isNegative()) {\n        // Unsigned Longs are never negative\n        return this.eq(Long.MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n      }\n\n      const val = this.high !== 0 ? this.high : this.low;\n      let bit;\n\n      for (bit = 31; bit > 0; bit--) if ((val & 1 << bit) !== 0) break;\n\n      return this.high !== 0 ? bit + 33 : bit + 1;\n    }\n    /** Tests if this Long's value is greater than the specified's. */\n\n\n    greaterThan(other) {\n      return this.comp(other) > 0;\n    }\n    /** Tests if this Long's value is greater than or equal the specified's. */\n\n\n    greaterThanOrEqual(other) {\n      return this.comp(other) >= 0;\n    }\n    /** Tests if this Long's value is even. */\n\n\n    isEven() {\n      return (this.low & 1) === 0;\n    }\n    /** Tests if this Long's value is negative. */\n\n\n    isNegative() {\n      return !this.unsigned && this.high < 0;\n    }\n    /** Tests if this Long's value is odd. */\n\n\n    isOdd() {\n      return (this.low & 1) === 1;\n    }\n    /** Tests if this Long's value is positive. */\n\n\n    isPositive() {\n      return this.unsigned || this.high >= 0;\n    }\n    /** Tests if this Long's value equals zero. */\n\n\n    isZero() {\n      return this.high === 0 && this.low === 0;\n    }\n    /** Tests if this Long's value is less than the specified's. */\n\n\n    lessThan(other) {\n      return this.comp(other) < 0;\n    }\n    /** Tests if this Long's value is less than or equal the specified's. */\n\n\n    lessThanOrEqual(other) {\n      return this.comp(other) <= 0;\n    }\n    /** Returns this Long modulo the specified. */\n\n\n    modulo(divisor) {\n      if (!Long.isLong(divisor)) divisor = Long.fromValue(divisor); // use wasm support if present\n\n      if (wasm) {\n        const low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(this.low, this.high, divisor.low, divisor.high);\n        return Long.fromBits(low, wasm.get_high(), this.unsigned);\n      }\n\n      return this.sub(this.div(divisor).mul(divisor));\n    }\n    /**\n     * Returns the product of this and the specified Long.\n     * @param multiplier - Multiplier\n     * @returns Product\n     */\n\n\n    multiply(multiplier) {\n      if (this.isZero()) return Long.ZERO;\n      if (!Long.isLong(multiplier)) multiplier = Long.fromValue(multiplier); // use wasm support if present\n\n      if (wasm) {\n        const low = wasm.mul(this.low, this.high, multiplier.low, multiplier.high);\n        return Long.fromBits(low, wasm.get_high(), this.unsigned);\n      }\n\n      if (multiplier.isZero()) return Long.ZERO;\n      if (this.eq(Long.MIN_VALUE)) return multiplier.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n      if (multiplier.eq(Long.MIN_VALUE)) return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n\n      if (this.isNegative()) {\n        if (multiplier.isNegative()) return this.neg().mul(multiplier.neg());else return this.neg().mul(multiplier).neg();\n      } else if (multiplier.isNegative()) return this.mul(multiplier.neg()).neg(); // If both longs are small, use float multiplication\n\n\n      if (this.lt(Long.TWO_PWR_24) && multiplier.lt(Long.TWO_PWR_24)) return Long.fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned); // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n      // We can skip products that would overflow.\n\n      const a48 = this.high >>> 16;\n      const a32 = this.high & 0xffff;\n      const a16 = this.low >>> 16;\n      const a00 = this.low & 0xffff;\n      const b48 = multiplier.high >>> 16;\n      const b32 = multiplier.high & 0xffff;\n      const b16 = multiplier.low >>> 16;\n      const b00 = multiplier.low & 0xffff;\n      let c48 = 0,\n          c32 = 0,\n          c16 = 0,\n          c00 = 0;\n      c00 += a00 * b00;\n      c16 += c00 >>> 16;\n      c00 &= 0xffff;\n      c16 += a16 * b00;\n      c32 += c16 >>> 16;\n      c16 &= 0xffff;\n      c16 += a00 * b16;\n      c32 += c16 >>> 16;\n      c16 &= 0xffff;\n      c32 += a32 * b00;\n      c48 += c32 >>> 16;\n      c32 &= 0xffff;\n      c32 += a16 * b16;\n      c48 += c32 >>> 16;\n      c32 &= 0xffff;\n      c32 += a00 * b32;\n      c48 += c32 >>> 16;\n      c32 &= 0xffff;\n      c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n      c48 &= 0xffff;\n      return Long.fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);\n    }\n    /** Returns the Negation of this Long's value. */\n\n\n    negate() {\n      if (!this.unsigned && this.eq(Long.MIN_VALUE)) return Long.MIN_VALUE;\n      return this.not().add(Long.ONE);\n    }\n    /** Returns the bitwise NOT of this Long. */\n\n\n    not() {\n      return Long.fromBits(~this.low, ~this.high, this.unsigned);\n    }\n    /** Tests if this Long's value differs from the specified's. */\n\n\n    notEquals(other) {\n      return !this.equals(other);\n    }\n    /**\n     * Returns the bitwise OR of this Long and the specified.\n     */\n\n\n    or(other) {\n      if (!Long.isLong(other)) other = Long.fromValue(other);\n      return Long.fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n    }\n    /**\n     * Returns this Long with bits shifted to the left by the given amount.\n     * @param numBits - Number of bits\n     * @returns Shifted Long\n     */\n\n\n    shiftLeft(numBits) {\n      if (Long.isLong(numBits)) numBits = numBits.toInt();\n      if ((numBits &= 63) === 0) return this;else if (numBits < 32) return Long.fromBits(this.low << numBits, this.high << numBits | this.low >>> 32 - numBits, this.unsigned);else return Long.fromBits(0, this.low << numBits - 32, this.unsigned);\n    }\n    /**\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\n     * @param numBits - Number of bits\n     * @returns Shifted Long\n     */\n\n\n    shiftRight(numBits) {\n      if (Long.isLong(numBits)) numBits = numBits.toInt();\n      if ((numBits &= 63) === 0) return this;else if (numBits < 32) return Long.fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >> numBits, this.unsigned);else return Long.fromBits(this.high >> numBits - 32, this.high >= 0 ? 0 : -1, this.unsigned);\n    }\n    /**\n     * Returns this Long with bits logically shifted to the right by the given amount.\n     * @param numBits - Number of bits\n     * @returns Shifted Long\n     */\n\n\n    shiftRightUnsigned(numBits) {\n      if (Long.isLong(numBits)) numBits = numBits.toInt();\n      numBits &= 63;\n      if (numBits === 0) return this;else {\n        const high = this.high;\n\n        if (numBits < 32) {\n          const low = this.low;\n          return Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits, this.unsigned);\n        } else if (numBits === 32) return Long.fromBits(high, 0, this.unsigned);else return Long.fromBits(high >>> numBits - 32, 0, this.unsigned);\n      }\n    }\n    /**\n     * Returns the difference of this and the specified Long.\n     * @param subtrahend - Subtrahend\n     * @returns Difference\n     */\n\n\n    subtract(subtrahend) {\n      if (!Long.isLong(subtrahend)) subtrahend = Long.fromValue(subtrahend);\n      return this.add(subtrahend.neg());\n    }\n    /** Converts the Long to a 32 bit integer, assuming it is a 32 bit integer. */\n\n\n    toInt() {\n      return this.unsigned ? this.low >>> 0 : this.low;\n    }\n    /** Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa). */\n\n\n    toNumber() {\n      if (this.unsigned) return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n      return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n    }\n    /** Converts the Long to a BigInt (arbitrary precision). */\n\n\n    toBigInt() {\n      return BigInt(this.toString());\n    }\n    /**\n     * Converts this Long to its byte representation.\n     * @param le - Whether little or big endian, defaults to big endian\n     * @returns Byte representation\n     */\n\n\n    toBytes(le) {\n      return le ? this.toBytesLE() : this.toBytesBE();\n    }\n    /**\n     * Converts this Long to its little endian byte representation.\n     * @returns Little endian byte representation\n     */\n\n\n    toBytesLE() {\n      const hi = this.high,\n            lo = this.low;\n      return [lo & 0xff, lo >>> 8 & 0xff, lo >>> 16 & 0xff, lo >>> 24, hi & 0xff, hi >>> 8 & 0xff, hi >>> 16 & 0xff, hi >>> 24];\n    }\n    /**\n     * Converts this Long to its big endian byte representation.\n     * @returns Big endian byte representation\n     */\n\n\n    toBytesBE() {\n      const hi = this.high,\n            lo = this.low;\n      return [hi >>> 24, hi >>> 16 & 0xff, hi >>> 8 & 0xff, hi & 0xff, lo >>> 24, lo >>> 16 & 0xff, lo >>> 8 & 0xff, lo & 0xff];\n    }\n    /**\n     * Converts this Long to signed.\n     */\n\n\n    toSigned() {\n      if (!this.unsigned) return this;\n      return Long.fromBits(this.low, this.high, false);\n    }\n    /**\n     * Converts the Long to a string written in the specified radix.\n     * @param radix - Radix (2-36), defaults to 10\n     * @throws RangeError If `radix` is out of range\n     */\n\n\n    toString(radix) {\n      radix = radix || 10;\n      if (radix < 2 || 36 < radix) throw RangeError('radix');\n      if (this.isZero()) return '0';\n\n      if (this.isNegative()) {\n        // Unsigned Longs are never negative\n        if (this.eq(Long.MIN_VALUE)) {\n          // We need to change the Long value before it can be negated, so we remove\n          // the bottom-most digit in this base and then recurse to do the rest.\n          const radixLong = Long.fromNumber(radix),\n                div = this.div(radixLong),\n                rem1 = div.mul(radixLong).sub(this);\n          return div.toString(radix) + rem1.toInt().toString(radix);\n        } else return '-' + this.neg().toString(radix);\n      } // Do several (6) digits each time through the loop, so as to\n      // minimize the calls to the very expensive emulated div.\n\n\n      const radixToPower = Long.fromNumber(Math.pow(radix, 6), this.unsigned); // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n      let rem = this;\n      let result = ''; // eslint-disable-next-line no-constant-condition\n\n      while (true) {\n        const remDiv = rem.div(radixToPower);\n        const intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0;\n        let digits = intval.toString(radix);\n        rem = remDiv;\n\n        if (rem.isZero()) {\n          return digits + result;\n        } else {\n          while (digits.length < 6) digits = '0' + digits;\n\n          result = '' + digits + result;\n        }\n      }\n    }\n    /** Converts this Long to unsigned. */\n\n\n    toUnsigned() {\n      if (this.unsigned) return this;\n      return Long.fromBits(this.low, this.high, true);\n    }\n    /** Returns the bitwise XOR of this Long and the given one. */\n\n\n    xor(other) {\n      if (!Long.isLong(other)) other = Long.fromValue(other);\n      return Long.fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n    }\n    /*\n     ****************************************************************\n     *                  BSON SPECIFIC ADDITIONS                     *\n     ****************************************************************\n     */\n\n\n    toExtendedJSON(options) {\n      if (options && options.relaxed) return this.toNumber();\n      return {\n        $numberLong: this.toString()\n      };\n    }\n\n    static fromExtendedJSON(doc, options) {\n      const result = Long.fromString(doc.$numberLong);\n      return options && options.relaxed ? result.toNumber() : result;\n    }\n\n  }\n\n  exports.Long = Long;\n  Long.TWO_PWR_24 = Long.fromInt(TWO_PWR_24_DBL);\n  /** Maximum unsigned value. */\n\n  Long.MAX_UNSIGNED_VALUE = Long.fromBits(0xffffffff | 0, 0xffffffff | 0, true);\n  /** Signed zero */\n\n  Long.ZERO = Long.fromInt(0);\n  /** Unsigned zero. */\n\n  Long.UZERO = Long.fromInt(0, true);\n  /** Signed one. */\n\n  Long.ONE = Long.fromInt(1);\n  /** Unsigned one. */\n\n  Long.UONE = Long.fromInt(1, true);\n  /** Signed negative one. */\n\n  Long.NEG_ONE = Long.fromInt(-1);\n  /** Maximum signed value. */\n\n  Long.MAX_VALUE = Long.fromBits(0xffffffff | 0, 0x7fffffff | 0, false);\n  /** Minimum signed value. */\n\n  Long.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0, false);\n  Object.defineProperty(Long.prototype, '__isLong__', {\n    value: true\n  });\n  Object.defineProperty(Long.prototype, '_bsontype', {\n    value: 'Long'\n  });\n});\nunwrapExports(long_1);\nvar long_2 = long_1.Long;\nvar decimal128 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Decimal128 = void 0;\n  const PARSE_STRING_REGEXP = /^(\\+|-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([-+])?(\\d+)?$/;\n  const PARSE_INF_REGEXP = /^(\\+|-)?(Infinity|inf)$/i;\n  const PARSE_NAN_REGEXP = /^(\\+|-)?NaN$/i;\n  const EXPONENT_MAX = 6111;\n  const EXPONENT_MIN = -6176;\n  const EXPONENT_BIAS = 6176;\n  const MAX_DIGITS = 34; // Nan value bits as 32 bit values (due to lack of longs)\n\n  const NAN_BUFFER = [0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse(); // Infinity value bits 32 bit values (due to lack of longs)\n\n  const INF_NEGATIVE_BUFFER = [0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n  const INF_POSITIVE_BUFFER = [0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();\n  const EXPONENT_REGEX = /^([-+])?(\\d+)?$/; // Extract least significant 5 bits\n\n  const COMBINATION_MASK = 0x1f; // Extract least significant 14 bits\n\n  const EXPONENT_MASK = 0x3fff; // Value of combination field for Inf\n\n  const COMBINATION_INFINITY = 30; // Value of combination field for NaN\n\n  const COMBINATION_NAN = 31; // Detect if the value is a digit\n\n  function isDigit(value) {\n    return !isNaN(parseInt(value, 10));\n  } // Divide two uint128 values\n\n\n  function divideu128(value) {\n    const DIVISOR = long_1.Long.fromNumber(1000 * 1000 * 1000);\n\n    let _rem = long_1.Long.fromNumber(0);\n\n    if (!value.parts[0] && !value.parts[1] && !value.parts[2] && !value.parts[3]) {\n      return {\n        quotient: value,\n        rem: _rem\n      };\n    }\n\n    for (let i = 0; i <= 3; i++) {\n      // Adjust remainder to match value of next dividend\n      _rem = _rem.shiftLeft(32); // Add the divided to _rem\n\n      _rem = _rem.add(new long_1.Long(value.parts[i], 0));\n      value.parts[i] = _rem.div(DIVISOR).low;\n      _rem = _rem.modulo(DIVISOR);\n    }\n\n    return {\n      quotient: value,\n      rem: _rem\n    };\n  } // Multiply two Long values and return the 128 bit value\n\n\n  function multiply64x2(left, right) {\n    if (!left && !right) {\n      return {\n        high: long_1.Long.fromNumber(0),\n        low: long_1.Long.fromNumber(0)\n      };\n    }\n\n    const leftHigh = left.shiftRightUnsigned(32);\n    const leftLow = new long_1.Long(left.getLowBits(), 0);\n    const rightHigh = right.shiftRightUnsigned(32);\n    const rightLow = new long_1.Long(right.getLowBits(), 0);\n    let productHigh = leftHigh.multiply(rightHigh);\n    let productMid = leftHigh.multiply(rightLow);\n    const productMid2 = leftLow.multiply(rightHigh);\n    let productLow = leftLow.multiply(rightLow);\n    productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n    productMid = new long_1.Long(productMid.getLowBits(), 0).add(productMid2).add(productLow.shiftRightUnsigned(32));\n    productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n    productLow = productMid.shiftLeft(32).add(new long_1.Long(productLow.getLowBits(), 0)); // Return the 128 bit result\n\n    return {\n      high: productHigh,\n      low: productLow\n    };\n  }\n\n  function lessThan(left, right) {\n    // Make values unsigned\n    const uhleft = left.high >>> 0;\n    const uhright = right.high >>> 0; // Compare high bits first\n\n    if (uhleft < uhright) {\n      return true;\n    } else if (uhleft === uhright) {\n      const ulleft = left.low >>> 0;\n      const ulright = right.low >>> 0;\n      if (ulleft < ulright) return true;\n    }\n\n    return false;\n  }\n\n  function invalidErr(string, message) {\n    throw new TypeError(`\"${string}\" is not a valid Decimal128 string - ${message}`);\n  }\n  /**\n   * A class representation of the BSON Decimal128 type.\n   * @public\n   */\n\n\n  class Decimal128 {\n    /** @param bytes - a buffer containing the raw Decimal128 bytes in little endian order */\n    constructor(bytes) {\n      this.bytes = bytes;\n    }\n    /**\n     * Create a Decimal128 instance from a string representation\n     *\n     * @param representation - a numeric string representation.\n     */\n\n\n    static fromString(representation) {\n      // Parse state tracking\n      let isNegative = false;\n      let sawRadix = false;\n      let foundNonZero = false; // Total number of significant digits (no leading or trailing zero)\n\n      let significantDigits = 0; // Total number of significand digits read\n\n      let nDigitsRead = 0; // Total number of digits (no leading zeros)\n\n      let nDigits = 0; // The number of the digits after radix\n\n      let radixPosition = 0; // The index of the first non-zero in *str*\n\n      let firstNonZero = 0; // Digits Array\n\n      const digits = [0]; // The number of digits in digits\n\n      let nDigitsStored = 0; // Insertion pointer for digits\n\n      let digitsInsert = 0; // The index of the first non-zero digit\n\n      let firstDigit = 0; // The index of the last digit\n\n      let lastDigit = 0; // Exponent\n\n      let exponent = 0; // loop index over array\n\n      let i = 0; // The high 17 digits of the significand\n\n      let significandHigh = new long_1.Long(0, 0); // The low 17 digits of the significand\n\n      let significandLow = new long_1.Long(0, 0); // The biased exponent\n\n      let biasedExponent = 0; // Read index\n\n      let index = 0; // Naively prevent against REDOS attacks.\n      // TODO: implementing a custom parsing for this, or refactoring the regex would yield\n      //       further gains.\n\n      if (representation.length >= 7000) {\n        throw new TypeError('' + representation + ' not a valid Decimal128 string');\n      } // Results\n\n\n      const stringMatch = representation.match(PARSE_STRING_REGEXP);\n      const infMatch = representation.match(PARSE_INF_REGEXP);\n      const nanMatch = representation.match(PARSE_NAN_REGEXP); // Validate the string\n\n      if (!stringMatch && !infMatch && !nanMatch || representation.length === 0) {\n        throw new TypeError('' + representation + ' not a valid Decimal128 string');\n      }\n\n      if (stringMatch) {\n        // full_match = stringMatch[0]\n        // sign = stringMatch[1]\n        const unsignedNumber = stringMatch[2]; // stringMatch[3] is undefined if a whole number (ex \"1\", 12\")\n        // but defined if a number w/ decimal in it (ex \"1.0, 12.2\")\n\n        const e = stringMatch[4];\n        const expSign = stringMatch[5];\n        const expNumber = stringMatch[6]; // they provided e, but didn't give an exponent number. for ex \"1e\"\n\n        if (e && expNumber === undefined) invalidErr(representation, 'missing exponent power'); // they provided e, but didn't give a number before it. for ex \"e1\"\n\n        if (e && unsignedNumber === undefined) invalidErr(representation, 'missing exponent base');\n\n        if (e === undefined && (expSign || expNumber)) {\n          invalidErr(representation, 'missing e before exponent');\n        }\n      } // Get the negative or positive sign\n\n\n      if (representation[index] === '+' || representation[index] === '-') {\n        isNegative = representation[index++] === '-';\n      } // Check if user passed Infinity or NaN\n\n\n      if (!isDigit(representation[index]) && representation[index] !== '.') {\n        if (representation[index] === 'i' || representation[index] === 'I') {\n          return new Decimal128(buffer.Buffer.from(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n        } else if (representation[index] === 'N') {\n          return new Decimal128(buffer.Buffer.from(NAN_BUFFER));\n        }\n      } // Read all the digits\n\n\n      while (isDigit(representation[index]) || representation[index] === '.') {\n        if (representation[index] === '.') {\n          if (sawRadix) invalidErr(representation, 'contains multiple periods');\n          sawRadix = true;\n          index = index + 1;\n          continue;\n        }\n\n        if (nDigitsStored < 34) {\n          if (representation[index] !== '0' || foundNonZero) {\n            if (!foundNonZero) {\n              firstNonZero = nDigitsRead;\n            }\n\n            foundNonZero = true; // Only store 34 digits\n\n            digits[digitsInsert++] = parseInt(representation[index], 10);\n            nDigitsStored = nDigitsStored + 1;\n          }\n        }\n\n        if (foundNonZero) nDigits = nDigits + 1;\n        if (sawRadix) radixPosition = radixPosition + 1;\n        nDigitsRead = nDigitsRead + 1;\n        index = index + 1;\n      }\n\n      if (sawRadix && !nDigitsRead) throw new TypeError('' + representation + ' not a valid Decimal128 string'); // Read exponent if exists\n\n      if (representation[index] === 'e' || representation[index] === 'E') {\n        // Read exponent digits\n        const match = representation.substr(++index).match(EXPONENT_REGEX); // No digits read\n\n        if (!match || !match[2]) return new Decimal128(buffer.Buffer.from(NAN_BUFFER)); // Get exponent\n\n        exponent = parseInt(match[0], 10); // Adjust the index\n\n        index = index + match[0].length;\n      } // Return not a number\n\n\n      if (representation[index]) return new Decimal128(buffer.Buffer.from(NAN_BUFFER)); // Done reading input\n      // Find first non-zero digit in digits\n\n      firstDigit = 0;\n\n      if (!nDigitsStored) {\n        firstDigit = 0;\n        lastDigit = 0;\n        digits[0] = 0;\n        nDigits = 1;\n        nDigitsStored = 1;\n        significantDigits = 0;\n      } else {\n        lastDigit = nDigitsStored - 1;\n        significantDigits = nDigits;\n\n        if (significantDigits !== 1) {\n          while (representation[firstNonZero + significantDigits - 1] === '0') {\n            significantDigits = significantDigits - 1;\n          }\n        }\n      } // Normalization of exponent\n      // Correct exponent based on radix position, and shift significand as needed\n      // to represent user input\n      // Overflow prevention\n\n\n      if (exponent <= radixPosition && radixPosition - exponent > 1 << 14) {\n        exponent = EXPONENT_MIN;\n      } else {\n        exponent = exponent - radixPosition;\n      } // Attempt to normalize the exponent\n\n\n      while (exponent > EXPONENT_MAX) {\n        // Shift exponent to significand and decrease\n        lastDigit = lastDigit + 1;\n\n        if (lastDigit - firstDigit > MAX_DIGITS) {\n          // Check if we have a zero then just hard clamp, otherwise fail\n          const digitsString = digits.join('');\n\n          if (digitsString.match(/^0+$/)) {\n            exponent = EXPONENT_MAX;\n            break;\n          }\n\n          invalidErr(representation, 'overflow');\n        }\n\n        exponent = exponent - 1;\n      }\n\n      while (exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n        // Shift last digit. can only do this if < significant digits than # stored.\n        if (lastDigit === 0 && significantDigits < nDigitsStored) {\n          exponent = EXPONENT_MIN;\n          significantDigits = 0;\n          break;\n        }\n\n        if (nDigitsStored < nDigits) {\n          // adjust to match digits not stored\n          nDigits = nDigits - 1;\n        } else {\n          // adjust to round\n          lastDigit = lastDigit - 1;\n        }\n\n        if (exponent < EXPONENT_MAX) {\n          exponent = exponent + 1;\n        } else {\n          // Check if we have a zero then just hard clamp, otherwise fail\n          const digitsString = digits.join('');\n\n          if (digitsString.match(/^0+$/)) {\n            exponent = EXPONENT_MAX;\n            break;\n          }\n\n          invalidErr(representation, 'overflow');\n        }\n      } // Round\n      // We've normalized the exponent, but might still need to round.\n\n\n      if (lastDigit - firstDigit + 1 < significantDigits) {\n        let endOfString = nDigitsRead; // If we have seen a radix point, 'string' is 1 longer than we have\n        // documented with ndigits_read, so inc the position of the first nonzero\n        // digit and the position that digits are read to.\n\n        if (sawRadix) {\n          firstNonZero = firstNonZero + 1;\n          endOfString = endOfString + 1;\n        } // if negative, we need to increment again to account for - sign at start.\n\n\n        if (isNegative) {\n          firstNonZero = firstNonZero + 1;\n          endOfString = endOfString + 1;\n        }\n\n        const roundDigit = parseInt(representation[firstNonZero + lastDigit + 1], 10);\n        let roundBit = 0;\n\n        if (roundDigit >= 5) {\n          roundBit = 1;\n\n          if (roundDigit === 5) {\n            roundBit = digits[lastDigit] % 2 === 1 ? 1 : 0;\n\n            for (i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n              if (parseInt(representation[i], 10)) {\n                roundBit = 1;\n                break;\n              }\n            }\n          }\n        }\n\n        if (roundBit) {\n          let dIdx = lastDigit;\n\n          for (; dIdx >= 0; dIdx--) {\n            if (++digits[dIdx] > 9) {\n              digits[dIdx] = 0; // overflowed most significant digit\n\n              if (dIdx === 0) {\n                if (exponent < EXPONENT_MAX) {\n                  exponent = exponent + 1;\n                  digits[dIdx] = 1;\n                } else {\n                  return new Decimal128(buffer.Buffer.from(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n                }\n              }\n            }\n          }\n        }\n      } // Encode significand\n      // The high 17 digits of the significand\n\n\n      significandHigh = long_1.Long.fromNumber(0); // The low 17 digits of the significand\n\n      significandLow = long_1.Long.fromNumber(0); // read a zero\n\n      if (significantDigits === 0) {\n        significandHigh = long_1.Long.fromNumber(0);\n        significandLow = long_1.Long.fromNumber(0);\n      } else if (lastDigit - firstDigit < 17) {\n        let dIdx = firstDigit;\n        significandLow = long_1.Long.fromNumber(digits[dIdx++]);\n        significandHigh = new long_1.Long(0, 0);\n\n        for (; dIdx <= lastDigit; dIdx++) {\n          significandLow = significandLow.multiply(long_1.Long.fromNumber(10));\n          significandLow = significandLow.add(long_1.Long.fromNumber(digits[dIdx]));\n        }\n      } else {\n        let dIdx = firstDigit;\n        significandHigh = long_1.Long.fromNumber(digits[dIdx++]);\n\n        for (; dIdx <= lastDigit - 17; dIdx++) {\n          significandHigh = significandHigh.multiply(long_1.Long.fromNumber(10));\n          significandHigh = significandHigh.add(long_1.Long.fromNumber(digits[dIdx]));\n        }\n\n        significandLow = long_1.Long.fromNumber(digits[dIdx++]);\n\n        for (; dIdx <= lastDigit; dIdx++) {\n          significandLow = significandLow.multiply(long_1.Long.fromNumber(10));\n          significandLow = significandLow.add(long_1.Long.fromNumber(digits[dIdx]));\n        }\n      }\n\n      const significand = multiply64x2(significandHigh, long_1.Long.fromString('100000000000000000'));\n      significand.low = significand.low.add(significandLow);\n\n      if (lessThan(significand.low, significandLow)) {\n        significand.high = significand.high.add(long_1.Long.fromNumber(1));\n      } // Biased exponent\n\n\n      biasedExponent = exponent + EXPONENT_BIAS;\n      const dec = {\n        low: long_1.Long.fromNumber(0),\n        high: long_1.Long.fromNumber(0)\n      }; // Encode combination, exponent, and significand.\n\n      if (significand.high.shiftRightUnsigned(49).and(long_1.Long.fromNumber(1)).equals(long_1.Long.fromNumber(1))) {\n        // Encode '11' into bits 1 to 3\n        dec.high = dec.high.or(long_1.Long.fromNumber(0x3).shiftLeft(61));\n        dec.high = dec.high.or(long_1.Long.fromNumber(biasedExponent).and(long_1.Long.fromNumber(0x3fff).shiftLeft(47)));\n        dec.high = dec.high.or(significand.high.and(long_1.Long.fromNumber(0x7fffffffffff)));\n      } else {\n        dec.high = dec.high.or(long_1.Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n        dec.high = dec.high.or(significand.high.and(long_1.Long.fromNumber(0x1ffffffffffff)));\n      }\n\n      dec.low = significand.low; // Encode sign\n\n      if (isNegative) {\n        dec.high = dec.high.or(long_1.Long.fromString('9223372036854775808'));\n      } // Encode into a buffer\n\n\n      const buffer$1 = buffer.Buffer.alloc(16);\n      index = 0; // Encode the low 64 bits of the decimal\n      // Encode low bits\n\n      buffer$1[index++] = dec.low.low & 0xff;\n      buffer$1[index++] = dec.low.low >> 8 & 0xff;\n      buffer$1[index++] = dec.low.low >> 16 & 0xff;\n      buffer$1[index++] = dec.low.low >> 24 & 0xff; // Encode high bits\n\n      buffer$1[index++] = dec.low.high & 0xff;\n      buffer$1[index++] = dec.low.high >> 8 & 0xff;\n      buffer$1[index++] = dec.low.high >> 16 & 0xff;\n      buffer$1[index++] = dec.low.high >> 24 & 0xff; // Encode the high 64 bits of the decimal\n      // Encode low bits\n\n      buffer$1[index++] = dec.high.low & 0xff;\n      buffer$1[index++] = dec.high.low >> 8 & 0xff;\n      buffer$1[index++] = dec.high.low >> 16 & 0xff;\n      buffer$1[index++] = dec.high.low >> 24 & 0xff; // Encode high bits\n\n      buffer$1[index++] = dec.high.high & 0xff;\n      buffer$1[index++] = dec.high.high >> 8 & 0xff;\n      buffer$1[index++] = dec.high.high >> 16 & 0xff;\n      buffer$1[index++] = dec.high.high >> 24 & 0xff; // Return the new Decimal128\n\n      return new Decimal128(buffer$1);\n    }\n    /** Create a string representation of the raw Decimal128 value */\n\n\n    toString() {\n      // Note: bits in this routine are referred to starting at 0,\n      // from the sign bit, towards the coefficient.\n      // decoded biased exponent (14 bits)\n      let biased_exponent; // the number of significand digits\n\n      let significand_digits = 0; // the base-10 digits in the significand\n\n      const significand = new Array(36);\n\n      for (let i = 0; i < significand.length; i++) significand[i] = 0; // read pointer into significand\n\n\n      let index = 0; // true if the number is zero\n\n      let is_zero = false; // the most significant significand bits (50-46)\n\n      let significand_msb; // temporary storage for significand decoding\n\n      let significand128 = {\n        parts: [0, 0, 0, 0]\n      }; // indexing variables\n\n      let j, k; // Output string\n\n      const string = []; // Unpack index\n\n      index = 0; // Buffer reference\n\n      const buffer = this.bytes; // Unpack the low 64bits into a long\n      // bits 96 - 127\n\n      const low = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24; // bits 64 - 95\n\n      const midl = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24; // Unpack the high 64bits into a long\n      // bits 32 - 63\n\n      const midh = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24; // bits 0 - 31\n\n      const high = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24; // Unpack index\n\n      index = 0; // Create the state of the decimal\n\n      const dec = {\n        low: new long_1.Long(low, midl),\n        high: new long_1.Long(midh, high)\n      };\n\n      if (dec.high.lessThan(long_1.Long.ZERO)) {\n        string.push('-');\n      } // Decode combination field and exponent\n      // bits 1 - 5\n\n\n      const combination = high >> 26 & COMBINATION_MASK;\n\n      if (combination >> 3 === 3) {\n        // Check for 'special' values\n        if (combination === COMBINATION_INFINITY) {\n          return string.join('') + 'Infinity';\n        } else if (combination === COMBINATION_NAN) {\n          return 'NaN';\n        } else {\n          biased_exponent = high >> 15 & EXPONENT_MASK;\n          significand_msb = 0x08 + (high >> 14 & 0x01);\n        }\n      } else {\n        significand_msb = high >> 14 & 0x07;\n        biased_exponent = high >> 17 & EXPONENT_MASK;\n      } // unbiased exponent\n\n\n      const exponent = biased_exponent - EXPONENT_BIAS; // Create string of significand digits\n      // Convert the 114-bit binary number represented by\n      // (significand_high, significand_low) to at most 34 decimal\n      // digits through modulo and division.\n\n      significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n      significand128.parts[1] = midh;\n      significand128.parts[2] = midl;\n      significand128.parts[3] = low;\n\n      if (significand128.parts[0] === 0 && significand128.parts[1] === 0 && significand128.parts[2] === 0 && significand128.parts[3] === 0) {\n        is_zero = true;\n      } else {\n        for (k = 3; k >= 0; k--) {\n          let least_digits = 0; // Perform the divide\n\n          const result = divideu128(significand128);\n          significand128 = result.quotient;\n          least_digits = result.rem.low; // We now have the 9 least significant digits (in base 2).\n          // Convert and output to string.\n\n          if (!least_digits) continue;\n\n          for (j = 8; j >= 0; j--) {\n            // significand[k * 9 + j] = Math.round(least_digits % 10);\n            significand[k * 9 + j] = least_digits % 10; // least_digits = Math.round(least_digits / 10);\n\n            least_digits = Math.floor(least_digits / 10);\n          }\n        }\n      } // Output format options:\n      // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n      // Regular    - ddd.ddd\n\n\n      if (is_zero) {\n        significand_digits = 1;\n        significand[index] = 0;\n      } else {\n        significand_digits = 36;\n\n        while (!significand[index]) {\n          significand_digits = significand_digits - 1;\n          index = index + 1;\n        }\n      } // the exponent if scientific notation is used\n\n\n      const scientific_exponent = significand_digits - 1 + exponent; // The scientific exponent checks are dictated by the string conversion\n      // specification and are somewhat arbitrary cutoffs.\n      //\n      // We must check exponent > 0, because if this is the case, the number\n      // has trailing zeros.  However, we *cannot* output these trailing zeros,\n      // because doing so would change the precision of the value, and would\n      // change stored data if the string converted number is round tripped.\n\n      if (scientific_exponent >= 34 || scientific_exponent <= -7 || exponent > 0) {\n        // Scientific format\n        // if there are too many significant digits, we should just be treating numbers\n        // as + or - 0 and using the non-scientific exponent (this is for the \"invalid\n        // representation should be treated as 0/-0\" spec cases in decimal128-1.json)\n        if (significand_digits > 34) {\n          string.push(`${0}`);\n          if (exponent > 0) string.push('E+' + exponent);else if (exponent < 0) string.push('E' + exponent);\n          return string.join('');\n        }\n\n        string.push(`${significand[index++]}`);\n        significand_digits = significand_digits - 1;\n\n        if (significand_digits) {\n          string.push('.');\n        }\n\n        for (let i = 0; i < significand_digits; i++) {\n          string.push(`${significand[index++]}`);\n        } // Exponent\n\n\n        string.push('E');\n\n        if (scientific_exponent > 0) {\n          string.push('+' + scientific_exponent);\n        } else {\n          string.push(`${scientific_exponent}`);\n        }\n      } else {\n        // Regular format with no decimal place\n        if (exponent >= 0) {\n          for (let i = 0; i < significand_digits; i++) {\n            string.push(`${significand[index++]}`);\n          }\n        } else {\n          let radix_position = significand_digits + exponent; // non-zero digits before radix\n\n          if (radix_position > 0) {\n            for (let i = 0; i < radix_position; i++) {\n              string.push(`${significand[index++]}`);\n            }\n          } else {\n            string.push('0');\n          }\n\n          string.push('.'); // add leading zeros after radix\n\n          while (radix_position++ < 0) {\n            string.push('0');\n          }\n\n          for (let i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n            string.push(`${significand[index++]}`);\n          }\n        }\n      }\n\n      return string.join('');\n    }\n\n    toJSON() {\n      return {\n        $numberDecimal: this.toString()\n      };\n    }\n    /** @internal */\n\n\n    toExtendedJSON() {\n      return {\n        $numberDecimal: this.toString()\n      };\n    }\n    /** @internal */\n\n\n    static fromExtendedJSON(doc) {\n      return Decimal128.fromString(doc.$numberDecimal);\n    }\n\n  }\n\n  exports.Decimal128 = Decimal128;\n  Object.defineProperty(Decimal128.prototype, '_bsontype', {\n    value: 'Decimal128'\n  });\n});\nunwrapExports(decimal128);\nvar decimal128_1 = decimal128.Decimal128;\nvar double_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Double = void 0;\n  /**\n   * A class representation of the BSON Double type.\n   * @public\n   */\n\n  class Double {\n    /**\n     * Create a Double type\n     *\n     * @param value - the number we want to represent as a double.\n     */\n    constructor(value) {\n      if (value instanceof Number) {\n        value = value.valueOf();\n      }\n\n      this.value = +value;\n    }\n    /**\n     * Access the number value.\n     *\n     * @returns returns the wrapped double number.\n     */\n\n\n    valueOf() {\n      return this.value;\n    }\n    /** @internal */\n\n\n    toJSON() {\n      return this.value;\n    }\n    /** @internal */\n\n\n    toExtendedJSON(options) {\n      if (options && (options.legacy || options.relaxed && isFinite(this.value))) {\n        return this.value;\n      } // NOTE: JavaScript has +0 and -0, apparently to model limit calculations. If a user\n      // explicitly provided `-0` then we need to ensure the sign makes it into the output\n\n\n      if (Object.is(Math.sign(this.value), -0)) {\n        return {\n          $numberDouble: `-${this.value.toFixed(1)}`\n        };\n      }\n\n      let $numberDouble;\n\n      if (Number.isInteger(this.value)) {\n        $numberDouble = this.value.toFixed(1);\n\n        if ($numberDouble.length >= 13) {\n          $numberDouble = this.value.toExponential(13).toUpperCase();\n        }\n      } else {\n        $numberDouble = this.value.toString();\n      }\n\n      return {\n        $numberDouble\n      };\n    }\n    /** @internal */\n\n\n    static fromExtendedJSON(doc, options) {\n      const doubleValue = parseFloat(doc.$numberDouble);\n      return options && options.relaxed ? doubleValue : new Double(doubleValue);\n    }\n\n  }\n\n  exports.Double = Double;\n  Object.defineProperty(Double.prototype, '_bsontype', {\n    value: 'Double'\n  });\n});\nunwrapExports(double_1);\nvar double_2 = double_1.Double;\nvar int_32 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Int32 = void 0;\n  /**\n   * A class representation of a BSON Int32 type.\n   * @public\n   */\n\n  class Int32 {\n    /**\n     * Create an Int32 type\n     *\n     * @param value - the number we want to represent as an int32.\n     */\n    constructor(value) {\n      if (value instanceof Number) {\n        value = value.valueOf();\n      }\n\n      this.value = +value;\n    }\n    /**\n     * Access the number value.\n     *\n     * @returns returns the wrapped int32 number.\n     */\n\n\n    valueOf() {\n      return this.value;\n    }\n    /** @internal */\n\n\n    toJSON() {\n      return this.value;\n    }\n    /** @internal */\n\n\n    toExtendedJSON(options) {\n      if (options && (options.relaxed || options.legacy)) return this.value;\n      return {\n        $numberInt: this.value.toString()\n      };\n    }\n    /** @internal */\n\n\n    static fromExtendedJSON(doc, options) {\n      return options && options.relaxed ? parseInt(doc.$numberInt, 10) : new Int32(doc.$numberInt);\n    }\n\n  }\n\n  exports.Int32 = Int32;\n  Object.defineProperty(Int32.prototype, '_bsontype', {\n    value: 'Int32'\n  });\n});\nunwrapExports(int_32);\nvar int_32_1 = int_32.Int32;\nvar map = createCommonjsModule(function (module, exports) {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  // We have an ES6 Map available, return the native instance\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Map = void 0;\n  /** @public */\n\n  let bsonMap;\n  exports.Map = bsonMap;\n\n  const check = function (potentialGlobal) {\n    // eslint-disable-next-line eqeqeq\n    return potentialGlobal && potentialGlobal.Math == Math && potentialGlobal;\n  }; // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\n\n  function getGlobal() {\n    // eslint-disable-next-line no-undef\n    return check(typeof globalThis === 'object' && globalThis) || check(typeof window === 'object' && window) || check(typeof self === 'object' && self) || check(typeof commonjsGlobal === 'object' && commonjsGlobal) || Function('return this')();\n  }\n\n  const bsonGlobal = getGlobal();\n\n  if (Object.prototype.hasOwnProperty.call(bsonGlobal, 'Map')) {\n    exports.Map = bsonMap = bsonGlobal.Map;\n  } else {\n    // We will return a polyfill\n    exports.Map = bsonMap = class Map {\n      constructor(array = []) {\n        this._keys = [];\n        this._values = {};\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == null) continue; // skip null and undefined\n\n          const entry = array[i];\n          const key = entry[0];\n          const value = entry[1]; // Add the key to the list of keys in order\n\n          this._keys.push(key); // Add the key and value to the values dictionary with a point\n          // to the location in the ordered keys list\n\n\n          this._values[key] = {\n            v: value,\n            i: this._keys.length - 1\n          };\n        }\n      }\n\n      clear() {\n        this._keys = [];\n        this._values = {};\n      }\n\n      delete(key) {\n        const value = this._values[key];\n        if (value == null) return false; // Delete entry\n\n        delete this._values[key]; // Remove the key from the ordered keys list\n\n        this._keys.splice(value.i, 1);\n\n        return true;\n      }\n\n      entries() {\n        let index = 0;\n        return {\n          next: () => {\n            const key = this._keys[index++];\n            return {\n              value: key !== undefined ? [key, this._values[key].v] : undefined,\n              done: key !== undefined ? false : true\n            };\n          }\n        };\n      }\n\n      forEach(callback, self) {\n        self = self || this;\n\n        for (let i = 0; i < this._keys.length; i++) {\n          const key = this._keys[i]; // Call the forEach callback\n\n          callback.call(self, this._values[key].v, key, self);\n        }\n      }\n\n      get(key) {\n        return this._values[key] ? this._values[key].v : undefined;\n      }\n\n      has(key) {\n        return this._values[key] != null;\n      }\n\n      keys() {\n        let index = 0;\n        return {\n          next: () => {\n            const key = this._keys[index++];\n            return {\n              value: key !== undefined ? key : undefined,\n              done: key !== undefined ? false : true\n            };\n          }\n        };\n      }\n\n      set(key, value) {\n        if (this._values[key]) {\n          this._values[key].v = value;\n          return this;\n        } // Add the key to the list of keys in order\n\n\n        this._keys.push(key); // Add the key and value to the values dictionary with a point\n        // to the location in the ordered keys list\n\n\n        this._values[key] = {\n          v: value,\n          i: this._keys.length - 1\n        };\n        return this;\n      }\n\n      values() {\n        let index = 0;\n        return {\n          next: () => {\n            const key = this._keys[index++];\n            return {\n              value: key !== undefined ? this._values[key].v : undefined,\n              done: key !== undefined ? false : true\n            };\n          }\n        };\n      }\n\n      get size() {\n        return this._keys.length;\n      }\n\n    };\n  }\n});\nunwrapExports(map);\nvar map_1 = map.Map;\nvar max_key = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.MaxKey = void 0;\n  /**\n   * A class representation of the BSON MaxKey type.\n   * @public\n   */\n\n  class MaxKey {\n    /** @internal */\n    toExtendedJSON() {\n      return {\n        $maxKey: 1\n      };\n    }\n    /** @internal */\n\n\n    static fromExtendedJSON() {\n      return new MaxKey();\n    }\n\n  }\n\n  exports.MaxKey = MaxKey;\n  Object.defineProperty(MaxKey.prototype, '_bsontype', {\n    value: 'MaxKey'\n  });\n});\nunwrapExports(max_key);\nvar max_key_1 = max_key.MaxKey;\nvar min_key = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.MinKey = void 0;\n  /**\n   * A class representation of the BSON MinKey type.\n   * @public\n   */\n\n  class MinKey {\n    /** @internal */\n    toExtendedJSON() {\n      return {\n        $minKey: 1\n      };\n    }\n    /** @internal */\n\n\n    static fromExtendedJSON() {\n      return new MinKey();\n    }\n\n  }\n\n  exports.MinKey = MinKey;\n  Object.defineProperty(MinKey.prototype, '_bsontype', {\n    value: 'MinKey'\n  });\n});\nunwrapExports(min_key);\nvar min_key_1 = min_key.MinKey;\nvar objectid = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ObjectId = void 0; // constants\n\n  const PROCESS_UNIQUE = utils.randomBytes(5); // Regular expression that checks for hex value\n\n  const checkForHexRegExp = new RegExp('^[0-9a-fA-F]{24}$'); // Precomputed hex table enables speedy hex string conversion\n\n  const hexTable = [];\n\n  for (let i = 0; i < 256; i++) {\n    hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);\n  } // Lookup tables\n\n\n  const decodeLookup = [];\n  let i = 0;\n\n  while (i < 10) decodeLookup[0x30 + i] = i++;\n\n  while (i < 16) decodeLookup[0x41 - 10 + i] = decodeLookup[0x61 - 10 + i] = i++;\n\n  const kId = Symbol('id');\n  /**\n   * A class representation of the BSON ObjectId type.\n   * @public\n   */\n\n  class ObjectId {\n    /**\n     * Create an ObjectId type\n     *\n     * @param id - Can be a 24 character hex string, 12 byte binary Buffer, or a number.\n     */\n    constructor(id) {\n      // Duck-typing to support ObjectId from different npm packages\n      if (id instanceof ObjectId) {\n        this[kId] = id.id;\n        this.__id = id.__id;\n      }\n\n      if (typeof id === 'object' && id && 'id' in id) {\n        if ('toHexString' in id && typeof id.toHexString === 'function') {\n          this[kId] = buffer.Buffer.from(id.toHexString(), 'hex');\n        } else {\n          this[kId] = typeof id.id === 'string' ? buffer.Buffer.from(id.id) : id.id;\n        }\n      } // The most common use case (blank id, new objectId instance)\n\n\n      if (id == null || typeof id === 'number') {\n        // Generate a new id\n        this[kId] = ObjectId.generate(typeof id === 'number' ? id : undefined); // If we are caching the hex string\n\n        if (ObjectId.cacheHexString) {\n          this.__id = this.id.toString('hex');\n        }\n      }\n\n      if (ArrayBuffer.isView(id) && id.byteLength === 12) {\n        this[kId] = ensure_buffer.ensureBuffer(id);\n      }\n\n      if (typeof id === 'string') {\n        if (id.length === 12) {\n          const bytes = buffer.Buffer.from(id);\n\n          if (bytes.byteLength === 12) {\n            this[kId] = bytes;\n          }\n        } else if (id.length === 24 && checkForHexRegExp.test(id)) {\n          this[kId] = buffer.Buffer.from(id, 'hex');\n        } else {\n          throw new TypeError('Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters');\n        }\n      }\n\n      if (ObjectId.cacheHexString) {\n        this.__id = this.id.toString('hex');\n      }\n    }\n    /**\n     * The ObjectId bytes\n     * @readonly\n     */\n\n\n    get id() {\n      return this[kId];\n    }\n\n    set id(value) {\n      this[kId] = value;\n\n      if (ObjectId.cacheHexString) {\n        this.__id = value.toString('hex');\n      }\n    }\n    /**\n     * The generation time of this ObjectId instance\n     * @deprecated Please use getTimestamp / createFromTime which returns an int32 epoch\n     */\n\n\n    get generationTime() {\n      return this.id.readInt32BE(0);\n    }\n\n    set generationTime(value) {\n      // Encode time into first 4 bytes\n      this.id.writeUInt32BE(value, 0);\n    }\n    /** Returns the ObjectId id as a 24 character hex string representation */\n\n\n    toHexString() {\n      if (ObjectId.cacheHexString && this.__id) {\n        return this.__id;\n      }\n\n      const hexString = this.id.toString('hex');\n\n      if (ObjectId.cacheHexString && !this.__id) {\n        this.__id = hexString;\n      }\n\n      return hexString;\n    }\n    /**\n     * Update the ObjectId index\n     * @privateRemarks\n     * Used in generating new ObjectId's on the driver\n     * @internal\n     */\n\n\n    static getInc() {\n      return ObjectId.index = (ObjectId.index + 1) % 0xffffff;\n    }\n    /**\n     * Generate a 12 byte id buffer used in ObjectId's\n     *\n     * @param time - pass in a second based timestamp.\n     */\n\n\n    static generate(time) {\n      if ('number' !== typeof time) {\n        time = ~~(Date.now() / 1000);\n      }\n\n      const inc = ObjectId.getInc();\n      const buffer$1 = buffer.Buffer.alloc(12); // 4-byte timestamp\n\n      buffer$1.writeUInt32BE(time, 0); // 5-byte process unique\n\n      buffer$1[4] = PROCESS_UNIQUE[0];\n      buffer$1[5] = PROCESS_UNIQUE[1];\n      buffer$1[6] = PROCESS_UNIQUE[2];\n      buffer$1[7] = PROCESS_UNIQUE[3];\n      buffer$1[8] = PROCESS_UNIQUE[4]; // 3-byte counter\n\n      buffer$1[11] = inc & 0xff;\n      buffer$1[10] = inc >> 8 & 0xff;\n      buffer$1[9] = inc >> 16 & 0xff;\n      return buffer$1;\n    }\n    /**\n     * Converts the id into a 24 character hex string for printing\n     *\n     * @param format - The Buffer toString format parameter.\n     * @internal\n     */\n\n\n    toString(format) {\n      // Is the id a buffer then use the buffer toString method to return the format\n      if (format) return this.id.toString(format);\n      return this.toHexString();\n    }\n    /**\n     * Converts to its JSON the 24 character hex string representation.\n     * @internal\n     */\n\n\n    toJSON() {\n      return this.toHexString();\n    }\n    /**\n     * Compares the equality of this ObjectId with `otherID`.\n     *\n     * @param otherId - ObjectId instance to compare against.\n     */\n\n\n    equals(otherId) {\n      if (otherId === undefined || otherId === null) {\n        return false;\n      }\n\n      if (otherId instanceof ObjectId) {\n        return this.toString() === otherId.toString();\n      }\n\n      if (typeof otherId === 'string' && ObjectId.isValid(otherId) && otherId.length === 12 && this.id instanceof buffer.Buffer) {\n        return otherId === this.id.toString('binary');\n      }\n\n      if (typeof otherId === 'string' && ObjectId.isValid(otherId) && otherId.length === 24) {\n        return otherId.toLowerCase() === this.toHexString();\n      }\n\n      if (typeof otherId === 'string' && ObjectId.isValid(otherId) && otherId.length === 12) {\n        return buffer.Buffer.from(otherId).equals(this.id);\n      }\n\n      if (typeof otherId === 'object' && 'toHexString' in otherId && typeof otherId.toHexString === 'function') {\n        return otherId.toHexString() === this.toHexString();\n      }\n\n      return false;\n    }\n    /** Returns the generation date (accurate up to the second) that this ID was generated. */\n\n\n    getTimestamp() {\n      const timestamp = new Date();\n      const time = this.id.readUInt32BE(0);\n      timestamp.setTime(Math.floor(time) * 1000);\n      return timestamp;\n    }\n    /** @internal */\n\n\n    static createPk() {\n      return new ObjectId();\n    }\n    /**\n     * Creates an ObjectId from a second based number, with the rest of the ObjectId zeroed out. Used for comparisons or sorting the ObjectId.\n     *\n     * @param time - an integer number representing a number of seconds.\n     */\n\n\n    static createFromTime(time) {\n      const buffer$1 = buffer.Buffer.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]); // Encode time into first 4 bytes\n\n      buffer$1.writeUInt32BE(time, 0); // Return the new objectId\n\n      return new ObjectId(buffer$1);\n    }\n    /**\n     * Creates an ObjectId from a hex string representation of an ObjectId.\n     *\n     * @param hexString - create a ObjectId from a passed in 24 character hexstring.\n     */\n\n\n    static createFromHexString(hexString) {\n      // Throw an error if it's not a valid setup\n      if (typeof hexString === 'undefined' || hexString != null && hexString.length !== 24) {\n        throw new TypeError('Argument passed in must be a single String of 12 bytes or a string of 24 hex characters');\n      }\n\n      return new ObjectId(buffer.Buffer.from(hexString, 'hex'));\n    }\n    /**\n     * Checks if a value is a valid bson ObjectId\n     *\n     * @param id - ObjectId instance to validate.\n     */\n\n\n    static isValid(id) {\n      if (id == null) return false;\n\n      if (typeof id === 'number') {\n        return true;\n      }\n\n      if (typeof id === 'string') {\n        return id.length === 12 || id.length === 24 && checkForHexRegExp.test(id);\n      }\n\n      if (id instanceof ObjectId) {\n        return true;\n      }\n\n      if (id instanceof buffer.Buffer && id.length === 12) {\n        return true;\n      } // Duck-Typing detection of ObjectId like objects\n\n\n      if (typeof id === 'object' && 'toHexString' in id && typeof id.toHexString === 'function') {\n        if (typeof id.id === 'string') {\n          return id.id.length === 12;\n        }\n\n        return id.toHexString().length === 24 && checkForHexRegExp.test(id.id.toString('hex'));\n      }\n\n      return false;\n    }\n    /** @internal */\n\n\n    toExtendedJSON() {\n      if (this.toHexString) return {\n        $oid: this.toHexString()\n      };\n      return {\n        $oid: this.toString('hex')\n      };\n    }\n    /** @internal */\n\n\n    static fromExtendedJSON(doc) {\n      return new ObjectId(doc.$oid);\n    }\n\n  }\n\n  exports.ObjectId = ObjectId;\n  /** @internal */\n\n  ObjectId.index = ~~(Math.random() * 0xffffff); // Deprecated methods\n\n  Object.defineProperty(ObjectId.prototype, 'generate', {\n    value: utils.deprecate(time => ObjectId.generate(time), 'Please use the static `ObjectId.generate(time)` instead')\n  });\n  Object.defineProperty(ObjectId.prototype, 'getInc', {\n    value: utils.deprecate(() => ObjectId.getInc(), 'Please use the static `ObjectId.getInc()` instead')\n  });\n  Object.defineProperty(ObjectId.prototype, 'get_inc', {\n    value: utils.deprecate(() => ObjectId.getInc(), 'Please use the static `ObjectId.getInc()` instead')\n  });\n  Object.defineProperty(ObjectId, 'get_inc', {\n    value: utils.deprecate(() => ObjectId.getInc(), 'Please use the static `ObjectId.getInc()` instead')\n  });\n  const inspect = Symbol.for('nodejs.util.inspect.custom');\n  /**\n   * Converts to a string representation of this Id.\n   *\n   * @returns return the 24 character hex string representation.\n   * @internal\n   */\n\n  Object.defineProperty(ObjectId.prototype, inspect, ObjectId.prototype.toString);\n  Object.defineProperty(ObjectId.prototype, 'inspect', ObjectId.prototype.toString);\n  Object.defineProperty(ObjectId.prototype, '_bsontype', {\n    value: 'ObjectID'\n  });\n});\nunwrapExports(objectid);\nvar objectid_1 = objectid.ObjectId;\nvar constants = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.BSON_BINARY_SUBTYPE_USER_DEFINED = exports.BSON_BINARY_SUBTYPE_MD5 = exports.BSON_BINARY_SUBTYPE_UUID_NEW = exports.BSON_BINARY_SUBTYPE_UUID = exports.BSON_BINARY_SUBTYPE_BYTE_ARRAY = exports.BSON_BINARY_SUBTYPE_FUNCTION = exports.BSON_BINARY_SUBTYPE_DEFAULT = exports.BSON_DATA_MAX_KEY = exports.BSON_DATA_MIN_KEY = exports.BSON_DATA_DECIMAL128 = exports.BSON_DATA_LONG = exports.BSON_DATA_TIMESTAMP = exports.BSON_DATA_INT = exports.BSON_DATA_CODE_W_SCOPE = exports.BSON_DATA_SYMBOL = exports.BSON_DATA_CODE = exports.BSON_DATA_DBPOINTER = exports.BSON_DATA_REGEXP = exports.BSON_DATA_NULL = exports.BSON_DATA_DATE = exports.BSON_DATA_BOOLEAN = exports.BSON_DATA_OID = exports.BSON_DATA_UNDEFINED = exports.BSON_DATA_BINARY = exports.BSON_DATA_ARRAY = exports.BSON_DATA_OBJECT = exports.BSON_DATA_STRING = exports.BSON_DATA_NUMBER = exports.JS_INT_MIN = exports.JS_INT_MAX = exports.BSON_INT64_MIN = exports.BSON_INT64_MAX = exports.BSON_INT32_MIN = exports.BSON_INT32_MAX = void 0;\n  /** @internal */\n\n  exports.BSON_INT32_MAX = 0x7fffffff;\n  /** @internal */\n\n  exports.BSON_INT32_MIN = -0x80000000;\n  /** @internal */\n\n  exports.BSON_INT64_MAX = Math.pow(2, 63) - 1;\n  /** @internal */\n\n  exports.BSON_INT64_MIN = -Math.pow(2, 63);\n  /**\n   * Any integer up to 2^53 can be precisely represented by a double.\n   * @internal\n   */\n\n  exports.JS_INT_MAX = Math.pow(2, 53);\n  /**\n   * Any integer down to -2^53 can be precisely represented by a double.\n   * @internal\n   */\n\n  exports.JS_INT_MIN = -Math.pow(2, 53);\n  /** Number BSON Type @internal */\n\n  exports.BSON_DATA_NUMBER = 1;\n  /** String BSON Type @internal */\n\n  exports.BSON_DATA_STRING = 2;\n  /** Object BSON Type @internal */\n\n  exports.BSON_DATA_OBJECT = 3;\n  /** Array BSON Type @internal */\n\n  exports.BSON_DATA_ARRAY = 4;\n  /** Binary BSON Type @internal */\n\n  exports.BSON_DATA_BINARY = 5;\n  /** Binary BSON Type @internal */\n\n  exports.BSON_DATA_UNDEFINED = 6;\n  /** ObjectId BSON Type @internal */\n\n  exports.BSON_DATA_OID = 7;\n  /** Boolean BSON Type @internal */\n\n  exports.BSON_DATA_BOOLEAN = 8;\n  /** Date BSON Type @internal */\n\n  exports.BSON_DATA_DATE = 9;\n  /** null BSON Type @internal */\n\n  exports.BSON_DATA_NULL = 10;\n  /** RegExp BSON Type @internal */\n\n  exports.BSON_DATA_REGEXP = 11;\n  /** Code BSON Type @internal */\n\n  exports.BSON_DATA_DBPOINTER = 12;\n  /** Code BSON Type @internal */\n\n  exports.BSON_DATA_CODE = 13;\n  /** Symbol BSON Type @internal */\n\n  exports.BSON_DATA_SYMBOL = 14;\n  /** Code with Scope BSON Type @internal */\n\n  exports.BSON_DATA_CODE_W_SCOPE = 15;\n  /** 32 bit Integer BSON Type @internal */\n\n  exports.BSON_DATA_INT = 16;\n  /** Timestamp BSON Type @internal */\n\n  exports.BSON_DATA_TIMESTAMP = 17;\n  /** Long BSON Type @internal */\n\n  exports.BSON_DATA_LONG = 18;\n  /** Decimal128 BSON Type @internal */\n\n  exports.BSON_DATA_DECIMAL128 = 19;\n  /** MinKey BSON Type @internal */\n\n  exports.BSON_DATA_MIN_KEY = 0xff;\n  /** MaxKey BSON Type @internal */\n\n  exports.BSON_DATA_MAX_KEY = 0x7f;\n  /** Binary Default Type @internal */\n\n  exports.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n  /** Binary Function Type @internal */\n\n  exports.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n  /** Binary Byte Array Type @internal */\n\n  exports.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n  /** Binary Deprecated UUID Type @deprecated Please use BSON_BINARY_SUBTYPE_UUID_NEW @internal */\n\n  exports.BSON_BINARY_SUBTYPE_UUID = 3;\n  /** Binary UUID Type @internal */\n\n  exports.BSON_BINARY_SUBTYPE_UUID_NEW = 4;\n  /** Binary MD5 Type @internal */\n\n  exports.BSON_BINARY_SUBTYPE_MD5 = 5;\n  /** Binary User Defined Type @internal */\n\n  exports.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n});\nunwrapExports(constants);\nvar constants_1 = constants.BSON_BINARY_SUBTYPE_USER_DEFINED;\nvar constants_2 = constants.BSON_BINARY_SUBTYPE_MD5;\nvar constants_3 = constants.BSON_BINARY_SUBTYPE_UUID_NEW;\nvar constants_4 = constants.BSON_BINARY_SUBTYPE_UUID;\nvar constants_5 = constants.BSON_BINARY_SUBTYPE_BYTE_ARRAY;\nvar constants_6 = constants.BSON_BINARY_SUBTYPE_FUNCTION;\nvar constants_7 = constants.BSON_BINARY_SUBTYPE_DEFAULT;\nvar constants_8 = constants.BSON_DATA_MAX_KEY;\nvar constants_9 = constants.BSON_DATA_MIN_KEY;\nvar constants_10 = constants.BSON_DATA_DECIMAL128;\nvar constants_11 = constants.BSON_DATA_LONG;\nvar constants_12 = constants.BSON_DATA_TIMESTAMP;\nvar constants_13 = constants.BSON_DATA_INT;\nvar constants_14 = constants.BSON_DATA_CODE_W_SCOPE;\nvar constants_15 = constants.BSON_DATA_SYMBOL;\nvar constants_16 = constants.BSON_DATA_CODE;\nvar constants_17 = constants.BSON_DATA_DBPOINTER;\nvar constants_18 = constants.BSON_DATA_REGEXP;\nvar constants_19 = constants.BSON_DATA_NULL;\nvar constants_20 = constants.BSON_DATA_DATE;\nvar constants_21 = constants.BSON_DATA_BOOLEAN;\nvar constants_22 = constants.BSON_DATA_OID;\nvar constants_23 = constants.BSON_DATA_UNDEFINED;\nvar constants_24 = constants.BSON_DATA_BINARY;\nvar constants_25 = constants.BSON_DATA_ARRAY;\nvar constants_26 = constants.BSON_DATA_OBJECT;\nvar constants_27 = constants.BSON_DATA_STRING;\nvar constants_28 = constants.BSON_DATA_NUMBER;\nvar constants_29 = constants.JS_INT_MIN;\nvar constants_30 = constants.JS_INT_MAX;\nvar constants_31 = constants.BSON_INT64_MIN;\nvar constants_32 = constants.BSON_INT64_MAX;\nvar constants_33 = constants.BSON_INT32_MIN;\nvar constants_34 = constants.BSON_INT32_MAX;\nvar calculate_size = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.calculateObjectSize = void 0;\n\n  function calculateObjectSize(object, serializeFunctions, ignoreUndefined) {\n    let totalLength = 4 + 1;\n\n    if (Array.isArray(object)) {\n      for (let i = 0; i < object.length; i++) {\n        totalLength += calculateElement(i.toString(), object[i], serializeFunctions, true, ignoreUndefined);\n      }\n    } else {\n      // If we have toBSON defined, override the current object\n      if (object.toBSON) {\n        object = object.toBSON();\n      } // Calculate size\n\n\n      for (const key in object) {\n        totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\n      }\n    }\n\n    return totalLength;\n  }\n\n  exports.calculateObjectSize = calculateObjectSize;\n  /** @internal */\n\n  function calculateElement(name, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value, serializeFunctions = false, isArray = false, ignoreUndefined = false) {\n    // If we have toBSON defined, override the current object\n    if (value && value.toBSON) {\n      value = value.toBSON();\n    }\n\n    switch (typeof value) {\n      case 'string':\n        return 1 + buffer.Buffer.byteLength(name, 'utf8') + 1 + 4 + buffer.Buffer.byteLength(value, 'utf8') + 1;\n\n      case 'number':\n        if (Math.floor(value) === value && value >= constants.JS_INT_MIN && value <= constants.JS_INT_MAX) {\n          if (value >= constants.BSON_INT32_MIN && value <= constants.BSON_INT32_MAX) {\n            // 32 bit\n            return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (4 + 1);\n          } else {\n            return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n          }\n        } else {\n          // 64 bit\n          return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n        }\n\n      case 'undefined':\n        if (isArray || !ignoreUndefined) return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n        return 0;\n\n      case 'boolean':\n        return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 1);\n\n      case 'object':\n        if (value == null || value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n          return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n        } else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n          return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (12 + 1);\n        } else if (value instanceof Date || utils.isDate(value)) {\n          return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n        } else if (ArrayBuffer.isView(value) || value instanceof ArrayBuffer) {\n          return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 4 + 1) + value.byteLength;\n        } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Double' || value['_bsontype'] === 'Timestamp') {\n          return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n        } else if (value['_bsontype'] === 'Decimal128') {\n          return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (16 + 1);\n        } else if (value['_bsontype'] === 'Code') {\n          // Calculate size depending on the availability of a scope\n          if (value.scope != null && Object.keys(value.scope).length > 0) {\n            return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + 4 + 4 + buffer.Buffer.byteLength(value.code.toString(), 'utf8') + 1 + calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined);\n          } else {\n            return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + 4 + buffer.Buffer.byteLength(value.code.toString(), 'utf8') + 1;\n          }\n        } else if (value['_bsontype'] === 'Binary') {\n          // Check what kind of subtype we have\n          if (value.sub_type === binary.Binary.SUBTYPE_BYTE_ARRAY) {\n            return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (value.position + 1 + 4 + 1 + 4);\n          } else {\n            return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (value.position + 1 + 4 + 1);\n          }\n        } else if (value['_bsontype'] === 'Symbol') {\n          return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + buffer.Buffer.byteLength(value.value, 'utf8') + 4 + 1 + 1;\n        } else if (value['_bsontype'] === 'DBRef') {\n          // Set up correct object for serialization\n          const ordered_values = Object.assign({\n            $ref: value.collection,\n            $id: value.oid\n          }, value.fields); // Add db reference if it exists\n\n          if (value.db != null) {\n            ordered_values['$db'] = value.db;\n          }\n\n          return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + calculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined);\n        } else if (value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]') {\n          return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + buffer.Buffer.byteLength(value.source, 'utf8') + 1 + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1;\n        } else if (value['_bsontype'] === 'BSONRegExp') {\n          return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + buffer.Buffer.byteLength(value.pattern, 'utf8') + 1 + buffer.Buffer.byteLength(value.options, 'utf8') + 1;\n        } else {\n          return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + calculateObjectSize(value, serializeFunctions, ignoreUndefined) + 1;\n        }\n\n      case 'function':\n        // WTF for 0.4.X where typeof /someregexp/ === 'function'\n        if (value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) === '[object RegExp]') {\n          return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + buffer.Buffer.byteLength(value.source, 'utf8') + 1 + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1;\n        } else {\n          if (serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\n            return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + 4 + 4 + buffer.Buffer.byteLength(utils.normalizedFunctionString(value), 'utf8') + 1 + calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined);\n          } else if (serializeFunctions) {\n            return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + 4 + buffer.Buffer.byteLength(utils.normalizedFunctionString(value), 'utf8') + 1;\n          }\n        }\n\n    }\n\n    return 0;\n  }\n});\nunwrapExports(calculate_size);\nvar calculate_size_1 = calculate_size.calculateObjectSize;\nvar regexp = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.BSONRegExp = void 0;\n\n  function alphabetize(str) {\n    return str.split('').sort().join('');\n  }\n  /**\n   * A class representation of the BSON RegExp type.\n   * @public\n   */\n\n\n  class BSONRegExp {\n    /**\n     * @param pattern - The regular expression pattern to match\n     * @param options - The regular expression options\n     */\n    constructor(pattern, options) {\n      this.pattern = pattern;\n      this.options = options !== null && options !== void 0 ? options : ''; // Execute\n\n      alphabetize(this.options); // Validate options\n\n      for (let i = 0; i < this.options.length; i++) {\n        if (!(this.options[i] === 'i' || this.options[i] === 'm' || this.options[i] === 'x' || this.options[i] === 'l' || this.options[i] === 's' || this.options[i] === 'u')) {\n          throw new Error(`The regular expression option [${this.options[i]}] is not supported`);\n        }\n      }\n    }\n\n    static parseOptions(options) {\n      return options ? options.split('').sort().join('') : '';\n    }\n    /** @internal */\n\n\n    toExtendedJSON(options) {\n      options = options || {};\n\n      if (options.legacy) {\n        return {\n          $regex: this.pattern,\n          $options: this.options\n        };\n      }\n\n      return {\n        $regularExpression: {\n          pattern: this.pattern,\n          options: this.options\n        }\n      };\n    }\n    /** @internal */\n\n\n    static fromExtendedJSON(doc) {\n      if ('$regex' in doc) {\n        if (typeof doc.$regex !== 'string') {\n          // This is for $regex query operators that have extended json values.\n          if (doc.$regex._bsontype === 'BSONRegExp') {\n            return doc;\n          }\n        } else {\n          return new BSONRegExp(doc.$regex, BSONRegExp.parseOptions(doc.$options));\n        }\n      }\n\n      if ('$regularExpression' in doc) {\n        return new BSONRegExp(doc.$regularExpression.pattern, BSONRegExp.parseOptions(doc.$regularExpression.options));\n      }\n\n      throw new TypeError(`Unexpected BSONRegExp EJSON object form: ${JSON.stringify(doc)}`);\n    }\n\n  }\n\n  exports.BSONRegExp = BSONRegExp;\n  Object.defineProperty(BSONRegExp.prototype, '_bsontype', {\n    value: 'BSONRegExp'\n  });\n});\nunwrapExports(regexp);\nvar regexp_1 = regexp.BSONRegExp;\nvar symbol = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.BSONSymbol = void 0;\n  /**\n   * A class representation of the BSON Symbol type.\n   * @public\n   */\n\n  class BSONSymbol {\n    /**\n     * @param value - the string representing the symbol.\n     */\n    constructor(value) {\n      this.value = value;\n    }\n    /** Access the wrapped string value. */\n\n\n    valueOf() {\n      return this.value;\n    }\n    /** @internal */\n\n\n    toString() {\n      return this.value;\n    }\n    /** @internal */\n\n\n    inspect() {\n      return this.value;\n    }\n    /** @internal */\n\n\n    toJSON() {\n      return this.value;\n    }\n    /** @internal */\n\n\n    toExtendedJSON() {\n      return {\n        $symbol: this.value\n      };\n    }\n    /** @internal */\n\n\n    static fromExtendedJSON(doc) {\n      return new BSONSymbol(doc.$symbol);\n    }\n\n  }\n\n  exports.BSONSymbol = BSONSymbol;\n  Object.defineProperty(BSONSymbol.prototype, '_bsontype', {\n    value: 'Symbol'\n  });\n});\nunwrapExports(symbol);\nvar symbol_1 = symbol.BSONSymbol;\nvar timestamp$1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Timestamp = exports.LongWithoutOverridesClass = void 0;\n  /** @public */\n\n  exports.LongWithoutOverridesClass = long_1.Long;\n  /** @public */\n\n  class Timestamp extends exports.LongWithoutOverridesClass {\n    constructor(low, high) {\n      if (long_1.Long.isLong(low)) {\n        super(low.low, low.high, true);\n      } else {\n        super(low, high, true);\n      }\n\n      Object.defineProperty(this, '_bsontype', {\n        value: 'Timestamp',\n        writable: false,\n        configurable: false,\n        enumerable: false\n      });\n    }\n\n    toJSON() {\n      return {\n        $timestamp: this.toString()\n      };\n    }\n    /** Returns a Timestamp represented by the given (32-bit) integer value. */\n\n\n    static fromInt(value) {\n      return new Timestamp(long_1.Long.fromInt(value, true));\n    }\n    /** Returns a Timestamp representing the given number value, provided that it is a finite number. Otherwise, zero is returned. */\n\n\n    static fromNumber(value) {\n      return new Timestamp(long_1.Long.fromNumber(value, true));\n    }\n    /**\n     * Returns a Timestamp for the given high and low bits. Each is assumed to use 32 bits.\n     *\n     * @param lowBits - the low 32-bits.\n     * @param highBits - the high 32-bits.\n     */\n\n\n    static fromBits(lowBits, highBits) {\n      return new Timestamp(lowBits, highBits);\n    }\n    /**\n     * Returns a Timestamp from the given string, optionally using the given radix.\n     *\n     * @param str - the textual representation of the Timestamp.\n     * @param optRadix - the radix in which the text is written.\n     */\n\n\n    static fromString(str, optRadix) {\n      return new Timestamp(long_1.Long.fromString(str, true, optRadix));\n    }\n    /** @internal */\n\n\n    toExtendedJSON() {\n      return {\n        $timestamp: {\n          t: this.high >>> 0,\n          i: this.low >>> 0\n        }\n      };\n    }\n    /** @internal */\n\n\n    static fromExtendedJSON(doc) {\n      return new Timestamp(doc.$timestamp.i, doc.$timestamp.t);\n    }\n\n  }\n\n  exports.Timestamp = Timestamp;\n  Timestamp.MAX_VALUE = long_1.Long.MAX_UNSIGNED_VALUE;\n});\nunwrapExports(timestamp$1);\nvar timestamp_1 = timestamp$1.Timestamp;\nvar timestamp_2 = timestamp$1.LongWithoutOverridesClass;\nvar validate_utf8 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.validateUtf8 = void 0;\n  const FIRST_BIT = 0x80;\n  const FIRST_TWO_BITS = 0xc0;\n  const FIRST_THREE_BITS = 0xe0;\n  const FIRST_FOUR_BITS = 0xf0;\n  const FIRST_FIVE_BITS = 0xf8;\n  const TWO_BIT_CHAR = 0xc0;\n  const THREE_BIT_CHAR = 0xe0;\n  const FOUR_BIT_CHAR = 0xf0;\n  const CONTINUING_CHAR = 0x80;\n  /**\n   * Determines if the passed in bytes are valid utf8\n   * @param bytes - An array of 8-bit bytes. Must be indexable and have length property\n   * @param start - The index to start validating\n   * @param end - The index to end validating\n   */\n\n  function validateUtf8(bytes, start, end) {\n    let continuation = 0;\n\n    for (let i = start; i < end; i += 1) {\n      const byte = bytes[i];\n\n      if (continuation) {\n        if ((byte & FIRST_TWO_BITS) !== CONTINUING_CHAR) {\n          return false;\n        }\n\n        continuation -= 1;\n      } else if (byte & FIRST_BIT) {\n        if ((byte & FIRST_THREE_BITS) === TWO_BIT_CHAR) {\n          continuation = 1;\n        } else if ((byte & FIRST_FOUR_BITS) === THREE_BIT_CHAR) {\n          continuation = 2;\n        } else if ((byte & FIRST_FIVE_BITS) === FOUR_BIT_CHAR) {\n          continuation = 3;\n        } else {\n          return false;\n        }\n      }\n    }\n\n    return !continuation;\n  }\n\n  exports.validateUtf8 = validateUtf8;\n});\nunwrapExports(validate_utf8);\nvar validate_utf8_1 = validate_utf8.validateUtf8;\nvar deserializer = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.deserialize = void 0; // Internal long versions\n\n  const JS_INT_MAX_LONG = long_1.Long.fromNumber(constants.JS_INT_MAX);\n  const JS_INT_MIN_LONG = long_1.Long.fromNumber(constants.JS_INT_MIN);\n  const functionCache = {};\n\n  function deserialize(buffer, options, isArray) {\n    options = options == null ? {} : options;\n    const index = options && options.index ? options.index : 0; // Read the document size\n\n    const size = buffer[index] | buffer[index + 1] << 8 | buffer[index + 2] << 16 | buffer[index + 3] << 24;\n\n    if (size < 5) {\n      throw new Error(`bson size must be >= 5, is ${size}`);\n    }\n\n    if (options.allowObjectSmallerThanBufferSize && buffer.length < size) {\n      throw new Error(`buffer length ${buffer.length} must be >= bson size ${size}`);\n    }\n\n    if (!options.allowObjectSmallerThanBufferSize && buffer.length !== size) {\n      throw new Error(`buffer length ${buffer.length} must === bson size ${size}`);\n    }\n\n    if (size + index > buffer.byteLength) {\n      throw new Error(`(bson size ${size} + options.index ${index} must be <= buffer length ${buffer.byteLength})`);\n    } // Illegal end value\n\n\n    if (buffer[index + size - 1] !== 0) {\n      throw new Error(\"One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00\");\n    } // Start deserializtion\n\n\n    return deserializeObject(buffer, index, options, isArray);\n  }\n\n  exports.deserialize = deserialize;\n\n  function deserializeObject(buffer$1, index, options, isArray = false) {\n    const evalFunctions = options['evalFunctions'] == null ? false : options['evalFunctions'];\n    const cacheFunctions = options['cacheFunctions'] == null ? false : options['cacheFunctions'];\n    const fieldsAsRaw = options['fieldsAsRaw'] == null ? null : options['fieldsAsRaw']; // Return raw bson buffer instead of parsing it\n\n    const raw = options['raw'] == null ? false : options['raw']; // Return BSONRegExp objects instead of native regular expressions\n\n    const bsonRegExp = typeof options['bsonRegExp'] === 'boolean' ? options['bsonRegExp'] : false; // Controls the promotion of values vs wrapper classes\n\n    const promoteBuffers = options['promoteBuffers'] == null ? false : options['promoteBuffers'];\n    const promoteLongs = options['promoteLongs'] == null ? true : options['promoteLongs'];\n    const promoteValues = options['promoteValues'] == null ? true : options['promoteValues']; // Set the start index\n\n    const startIndex = index; // Validate that we have at least 4 bytes of buffer\n\n    if (buffer$1.length < 5) throw new Error('corrupt bson message < 5 bytes long'); // Read the document size\n\n    const size = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24; // Ensure buffer is valid size\n\n    if (size < 5 || size > buffer$1.length) throw new Error('corrupt bson message'); // Create holding object\n\n    const object = isArray ? [] : {}; // Used for arrays to skip having to perform utf8 decoding\n\n    let arrayIndex = 0;\n    const done = false; // While we have more left data left keep parsing\n\n    while (!done) {\n      // Read the type\n      const elementType = buffer$1[index++]; // If we get a zero it's the last byte, exit\n\n      if (elementType === 0) break; // Get the start search index\n\n      let i = index; // Locate the end of the c string\n\n      while (buffer$1[i] !== 0x00 && i < buffer$1.length) {\n        i++;\n      } // If are at the end of the buffer there is a problem with the document\n\n\n      if (i >= buffer$1.byteLength) throw new Error('Bad BSON Document: illegal CString');\n      const name = isArray ? arrayIndex++ : buffer$1.toString('utf8', index, i);\n      index = i + 1;\n\n      if (elementType === constants.BSON_DATA_STRING) {\n        const stringSize = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24;\n        if (stringSize <= 0 || stringSize > buffer$1.length - index || buffer$1[index + stringSize - 1] !== 0) throw new Error('bad string length in bson');\n\n        if (!validate_utf8.validateUtf8(buffer$1, index, index + stringSize - 1)) {\n          throw new Error('Invalid UTF-8 string in BSON document');\n        }\n\n        const s = buffer$1.toString('utf8', index, index + stringSize - 1);\n        object[name] = s;\n        index = index + stringSize;\n      } else if (elementType === constants.BSON_DATA_OID) {\n        const oid = buffer.Buffer.alloc(12);\n        buffer$1.copy(oid, 0, index, index + 12);\n        object[name] = new objectid.ObjectId(oid);\n        index = index + 12;\n      } else if (elementType === constants.BSON_DATA_INT && promoteValues === false) {\n        object[name] = new int_32.Int32(buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24);\n      } else if (elementType === constants.BSON_DATA_INT) {\n        object[name] = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24;\n      } else if (elementType === constants.BSON_DATA_NUMBER && promoteValues === false) {\n        object[name] = new double_1.Double(buffer$1.readDoubleLE(index));\n        index = index + 8;\n      } else if (elementType === constants.BSON_DATA_NUMBER) {\n        object[name] = buffer$1.readDoubleLE(index);\n        index = index + 8;\n      } else if (elementType === constants.BSON_DATA_DATE) {\n        const lowBits = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24;\n        const highBits = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24;\n        object[name] = new Date(new long_1.Long(lowBits, highBits).toNumber());\n      } else if (elementType === constants.BSON_DATA_BOOLEAN) {\n        if (buffer$1[index] !== 0 && buffer$1[index] !== 1) throw new Error('illegal boolean type value');\n        object[name] = buffer$1[index++] === 1;\n      } else if (elementType === constants.BSON_DATA_OBJECT) {\n        const _index = index;\n        const objectSize = buffer$1[index] | buffer$1[index + 1] << 8 | buffer$1[index + 2] << 16 | buffer$1[index + 3] << 24;\n        if (objectSize <= 0 || objectSize > buffer$1.length - index) throw new Error('bad embedded document length in bson'); // We have a raw value\n\n        if (raw) {\n          object[name] = buffer$1.slice(index, index + objectSize);\n        } else {\n          object[name] = deserializeObject(buffer$1, _index, options, false);\n        }\n\n        index = index + objectSize;\n      } else if (elementType === constants.BSON_DATA_ARRAY) {\n        const _index = index;\n        const objectSize = buffer$1[index] | buffer$1[index + 1] << 8 | buffer$1[index + 2] << 16 | buffer$1[index + 3] << 24;\n        let arrayOptions = options; // Stop index\n\n        const stopIndex = index + objectSize; // All elements of array to be returned as raw bson\n\n        if (fieldsAsRaw && fieldsAsRaw[name]) {\n          arrayOptions = {};\n\n          for (const n in options) {\n            arrayOptions[n] = options[n];\n          }\n\n          arrayOptions['raw'] = true;\n        }\n\n        object[name] = deserializeObject(buffer$1, _index, arrayOptions, true);\n        index = index + objectSize;\n        if (buffer$1[index - 1] !== 0) throw new Error('invalid array terminator byte');\n        if (index !== stopIndex) throw new Error('corrupted array bson');\n      } else if (elementType === constants.BSON_DATA_UNDEFINED) {\n        object[name] = undefined;\n      } else if (elementType === constants.BSON_DATA_NULL) {\n        object[name] = null;\n      } else if (elementType === constants.BSON_DATA_LONG) {\n        // Unpack the low and high bits\n        const lowBits = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24;\n        const highBits = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24;\n        const long = new long_1.Long(lowBits, highBits); // Promote the long if possible\n\n        if (promoteLongs && promoteValues === true) {\n          object[name] = long.lessThanOrEqual(JS_INT_MAX_LONG) && long.greaterThanOrEqual(JS_INT_MIN_LONG) ? long.toNumber() : long;\n        } else {\n          object[name] = long;\n        }\n      } else if (elementType === constants.BSON_DATA_DECIMAL128) {\n        // Buffer to contain the decimal bytes\n        const bytes = buffer.Buffer.alloc(16); // Copy the next 16 bytes into the bytes buffer\n\n        buffer$1.copy(bytes, 0, index, index + 16); // Update index\n\n        index = index + 16; // Assign the new Decimal128 value\n\n        const decimal128$1 = new decimal128.Decimal128(bytes); // If we have an alternative mapper use that\n\n        if ('toObject' in decimal128$1 && typeof decimal128$1.toObject === 'function') {\n          object[name] = decimal128$1.toObject();\n        } else {\n          object[name] = decimal128$1;\n        }\n      } else if (elementType === constants.BSON_DATA_BINARY) {\n        let binarySize = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24;\n        const totalBinarySize = binarySize;\n        const subType = buffer$1[index++]; // Did we have a negative binary size, throw\n\n        if (binarySize < 0) throw new Error('Negative binary type element size found'); // Is the length longer than the document\n\n        if (binarySize > buffer$1.byteLength) throw new Error('Binary type size larger than document size'); // Decode as raw Buffer object if options specifies it\n\n        if (buffer$1['slice'] != null) {\n          // If we have subtype 2 skip the 4 bytes for the size\n          if (subType === binary.Binary.SUBTYPE_BYTE_ARRAY) {\n            binarySize = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24;\n            if (binarySize < 0) throw new Error('Negative binary type element size found for subtype 0x02');\n            if (binarySize > totalBinarySize - 4) throw new Error('Binary type with subtype 0x02 contains too long binary size');\n            if (binarySize < totalBinarySize - 4) throw new Error('Binary type with subtype 0x02 contains too short binary size');\n          }\n\n          if (promoteBuffers && promoteValues) {\n            object[name] = buffer$1.slice(index, index + binarySize);\n          } else {\n            object[name] = new binary.Binary(buffer$1.slice(index, index + binarySize), subType);\n          }\n        } else {\n          const _buffer = buffer.Buffer.alloc(binarySize); // If we have subtype 2 skip the 4 bytes for the size\n\n\n          if (subType === binary.Binary.SUBTYPE_BYTE_ARRAY) {\n            binarySize = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24;\n            if (binarySize < 0) throw new Error('Negative binary type element size found for subtype 0x02');\n            if (binarySize > totalBinarySize - 4) throw new Error('Binary type with subtype 0x02 contains too long binary size');\n            if (binarySize < totalBinarySize - 4) throw new Error('Binary type with subtype 0x02 contains too short binary size');\n          } // Copy the data\n\n\n          for (i = 0; i < binarySize; i++) {\n            _buffer[i] = buffer$1[index + i];\n          }\n\n          if (promoteBuffers && promoteValues) {\n            object[name] = _buffer;\n          } else {\n            object[name] = new binary.Binary(_buffer, subType);\n          }\n        } // Update the index\n\n\n        index = index + binarySize;\n      } else if (elementType === constants.BSON_DATA_REGEXP && bsonRegExp === false) {\n        // Get the start search index\n        i = index; // Locate the end of the c string\n\n        while (buffer$1[i] !== 0x00 && i < buffer$1.length) {\n          i++;\n        } // If are at the end of the buffer there is a problem with the document\n\n\n        if (i >= buffer$1.length) throw new Error('Bad BSON Document: illegal CString'); // Return the C string\n\n        const source = buffer$1.toString('utf8', index, i); // Create the regexp\n\n        index = i + 1; // Get the start search index\n\n        i = index; // Locate the end of the c string\n\n        while (buffer$1[i] !== 0x00 && i < buffer$1.length) {\n          i++;\n        } // If are at the end of the buffer there is a problem with the document\n\n\n        if (i >= buffer$1.length) throw new Error('Bad BSON Document: illegal CString'); // Return the C string\n\n        const regExpOptions = buffer$1.toString('utf8', index, i);\n        index = i + 1; // For each option add the corresponding one for javascript\n\n        const optionsArray = new Array(regExpOptions.length); // Parse options\n\n        for (i = 0; i < regExpOptions.length; i++) {\n          switch (regExpOptions[i]) {\n            case 'm':\n              optionsArray[i] = 'm';\n              break;\n\n            case 's':\n              optionsArray[i] = 'g';\n              break;\n\n            case 'i':\n              optionsArray[i] = 'i';\n              break;\n          }\n        }\n\n        object[name] = new RegExp(source, optionsArray.join(''));\n      } else if (elementType === constants.BSON_DATA_REGEXP && bsonRegExp === true) {\n        // Get the start search index\n        i = index; // Locate the end of the c string\n\n        while (buffer$1[i] !== 0x00 && i < buffer$1.length) {\n          i++;\n        } // If are at the end of the buffer there is a problem with the document\n\n\n        if (i >= buffer$1.length) throw new Error('Bad BSON Document: illegal CString'); // Return the C string\n\n        const source = buffer$1.toString('utf8', index, i);\n        index = i + 1; // Get the start search index\n\n        i = index; // Locate the end of the c string\n\n        while (buffer$1[i] !== 0x00 && i < buffer$1.length) {\n          i++;\n        } // If are at the end of the buffer there is a problem with the document\n\n\n        if (i >= buffer$1.length) throw new Error('Bad BSON Document: illegal CString'); // Return the C string\n\n        const regExpOptions = buffer$1.toString('utf8', index, i);\n        index = i + 1; // Set the object\n\n        object[name] = new regexp.BSONRegExp(source, regExpOptions);\n      } else if (elementType === constants.BSON_DATA_SYMBOL) {\n        const stringSize = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24;\n        if (stringSize <= 0 || stringSize > buffer$1.length - index || buffer$1[index + stringSize - 1] !== 0) throw new Error('bad string length in bson');\n        const symbol$1 = buffer$1.toString('utf8', index, index + stringSize - 1);\n        object[name] = promoteValues ? symbol$1 : new symbol.BSONSymbol(symbol$1);\n        index = index + stringSize;\n      } else if (elementType === constants.BSON_DATA_TIMESTAMP) {\n        const lowBits = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24;\n        const highBits = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24;\n        object[name] = new timestamp$1.Timestamp(lowBits, highBits);\n      } else if (elementType === constants.BSON_DATA_MIN_KEY) {\n        object[name] = new min_key.MinKey();\n      } else if (elementType === constants.BSON_DATA_MAX_KEY) {\n        object[name] = new max_key.MaxKey();\n      } else if (elementType === constants.BSON_DATA_CODE) {\n        const stringSize = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24;\n        if (stringSize <= 0 || stringSize > buffer$1.length - index || buffer$1[index + stringSize - 1] !== 0) throw new Error('bad string length in bson');\n        const functionString = buffer$1.toString('utf8', index, index + stringSize - 1); // If we are evaluating the functions\n\n        if (evalFunctions) {\n          // If we have cache enabled let's look for the md5 of the function in the cache\n          if (cacheFunctions) {\n            // Got to do this to avoid V8 deoptimizing the call due to finding eval\n            object[name] = isolateEval(functionString, functionCache, object);\n          } else {\n            object[name] = isolateEval(functionString);\n          }\n        } else {\n          object[name] = new code$1.Code(functionString);\n        } // Update parse index position\n\n\n        index = index + stringSize;\n      } else if (elementType === constants.BSON_DATA_CODE_W_SCOPE) {\n        const totalSize = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24; // Element cannot be shorter than totalSize + stringSize + documentSize + terminator\n\n        if (totalSize < 4 + 4 + 4 + 1) {\n          throw new Error('code_w_scope total size shorter minimum expected length');\n        } // Get the code string size\n\n\n        const stringSize = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24; // Check if we have a valid string\n\n        if (stringSize <= 0 || stringSize > buffer$1.length - index || buffer$1[index + stringSize - 1] !== 0) throw new Error('bad string length in bson'); // Javascript function\n\n        const functionString = buffer$1.toString('utf8', index, index + stringSize - 1); // Update parse index position\n\n        index = index + stringSize; // Parse the element\n\n        const _index = index; // Decode the size of the object document\n\n        const objectSize = buffer$1[index] | buffer$1[index + 1] << 8 | buffer$1[index + 2] << 16 | buffer$1[index + 3] << 24; // Decode the scope object\n\n        const scopeObject = deserializeObject(buffer$1, _index, options, false); // Adjust the index\n\n        index = index + objectSize; // Check if field length is too short\n\n        if (totalSize < 4 + 4 + objectSize + stringSize) {\n          throw new Error('code_w_scope total size is too short, truncating scope');\n        } // Check if totalSize field is too long\n\n\n        if (totalSize > 4 + 4 + objectSize + stringSize) {\n          throw new Error('code_w_scope total size is too long, clips outer document');\n        } // If we are evaluating the functions\n\n\n        if (evalFunctions) {\n          // If we have cache enabled let's look for the md5 of the function in the cache\n          if (cacheFunctions) {\n            // Got to do this to avoid V8 deoptimizing the call due to finding eval\n            object[name] = isolateEval(functionString, functionCache, object);\n          } else {\n            object[name] = isolateEval(functionString);\n          }\n\n          object[name].scope = scopeObject;\n        } else {\n          object[name] = new code$1.Code(functionString, scopeObject);\n        }\n      } else if (elementType === constants.BSON_DATA_DBPOINTER) {\n        // Get the code string size\n        const stringSize = buffer$1[index++] | buffer$1[index++] << 8 | buffer$1[index++] << 16 | buffer$1[index++] << 24; // Check if we have a valid string\n\n        if (stringSize <= 0 || stringSize > buffer$1.length - index || buffer$1[index + stringSize - 1] !== 0) throw new Error('bad string length in bson'); // Namespace\n\n        if (!validate_utf8.validateUtf8(buffer$1, index, index + stringSize - 1)) {\n          throw new Error('Invalid UTF-8 string in BSON document');\n        }\n\n        const namespace = buffer$1.toString('utf8', index, index + stringSize - 1); // Update parse index position\n\n        index = index + stringSize; // Read the oid\n\n        const oidBuffer = buffer.Buffer.alloc(12);\n        buffer$1.copy(oidBuffer, 0, index, index + 12);\n        const oid = new objectid.ObjectId(oidBuffer); // Update the index\n\n        index = index + 12; // Upgrade to DBRef type\n\n        object[name] = new db_ref.DBRef(namespace, oid);\n      } else {\n        throw new Error('Detected unknown BSON type ' + elementType.toString(16) + ' for fieldname \"' + name + '\"');\n      }\n    } // Check if the deserialization was against a valid array/object\n\n\n    if (size !== index - startIndex) {\n      if (isArray) throw new Error('corrupt array bson');\n      throw new Error('corrupt object bson');\n    } // check if object's $ keys are those of a DBRef\n\n\n    const dollarKeys = Object.keys(object).filter(k => k.startsWith('$'));\n    let valid = true;\n    dollarKeys.forEach(k => {\n      if (['$ref', '$id', '$db'].indexOf(k) === -1) valid = false;\n    }); // if a $key not in \"$ref\", \"$id\", \"$db\", don't make a DBRef\n\n    if (!valid) return object;\n\n    if (db_ref.isDBRefLike(object)) {\n      const copy = Object.assign({}, object);\n      delete copy.$ref;\n      delete copy.$id;\n      delete copy.$db;\n      return new db_ref.DBRef(object.$ref, object.$id, object.$db, copy);\n    }\n\n    return object;\n  }\n  /**\n   * Ensure eval is isolated, store the result in functionCache.\n   *\n   * @internal\n   */\n\n\n  function isolateEval(functionString, functionCache, object) {\n    if (!functionCache) return new Function(functionString); // Check for cache hit, eval if missing and return cached function\n\n    if (functionCache[functionString] == null) {\n      functionCache[functionString] = new Function(functionString);\n    } // Set the object\n\n\n    return functionCache[functionString].bind(object);\n  }\n});\nunwrapExports(deserializer);\nvar deserializer_1 = deserializer.deserialize;\nvar extended_json = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.EJSON = exports.isBSONType = void 0;\n\n  function isBSONType(value) {\n    return utils.isObjectLike(value) && Reflect.has(value, '_bsontype') && typeof value._bsontype === 'string';\n  }\n\n  exports.isBSONType = isBSONType; // INT32 boundaries\n\n  const BSON_INT32_MAX = 0x7fffffff;\n  const BSON_INT32_MIN = -0x80000000; // INT64 boundaries\n\n  const BSON_INT64_MAX = 0x7fffffffffffffff;\n  const BSON_INT64_MIN = -0x8000000000000000; // all the types where we don't need to do any special processing and can just pass the EJSON\n  //straight to type.fromExtendedJSON\n\n  const keysToCodecs = {\n    $oid: objectid.ObjectId,\n    $binary: binary.Binary,\n    $uuid: binary.Binary,\n    $symbol: symbol.BSONSymbol,\n    $numberInt: int_32.Int32,\n    $numberDecimal: decimal128.Decimal128,\n    $numberDouble: double_1.Double,\n    $numberLong: long_1.Long,\n    $minKey: min_key.MinKey,\n    $maxKey: max_key.MaxKey,\n    $regex: regexp.BSONRegExp,\n    $regularExpression: regexp.BSONRegExp,\n    $timestamp: timestamp$1.Timestamp\n  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  function deserializeValue(value, options = {}) {\n    if (typeof value === 'number') {\n      if (options.relaxed || options.legacy) {\n        return value;\n      } // if it's an integer, should interpret as smallest BSON integer\n      // that can represent it exactly. (if out of range, interpret as double.)\n\n\n      if (Math.floor(value) === value) {\n        if (value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) return new int_32.Int32(value);\n        if (value >= BSON_INT64_MIN && value <= BSON_INT64_MAX) return long_1.Long.fromNumber(value);\n      } // If the number is a non-integer or out of integer range, should interpret as BSON Double.\n\n\n      return new double_1.Double(value);\n    } // from here on out we're looking for bson types, so bail if its not an object\n\n\n    if (value == null || typeof value !== 'object') return value; // upgrade deprecated undefined to null\n\n    if (value.$undefined) return null;\n    const keys = Object.keys(value).filter(k => k.startsWith('$') && value[k] != null);\n\n    for (let i = 0; i < keys.length; i++) {\n      const c = keysToCodecs[keys[i]];\n      if (c) return c.fromExtendedJSON(value, options);\n    }\n\n    if (value.$date != null) {\n      const d = value.$date;\n      const date = new Date();\n\n      if (options.legacy) {\n        if (typeof d === 'number') date.setTime(d);else if (typeof d === 'string') date.setTime(Date.parse(d));\n      } else {\n        if (typeof d === 'string') date.setTime(Date.parse(d));else if (long_1.Long.isLong(d)) date.setTime(d.toNumber());else if (typeof d === 'number' && options.relaxed) date.setTime(d);\n      }\n\n      return date;\n    }\n\n    if (value.$code != null) {\n      const copy = Object.assign({}, value);\n\n      if (value.$scope) {\n        copy.$scope = deserializeValue(value.$scope);\n      }\n\n      return code$1.Code.fromExtendedJSON(value);\n    }\n\n    if (value.$ref != null || value.$dbPointer != null) {\n      const v = value.$ref ? value : value.$dbPointer; // we run into this in a \"degenerate EJSON\" case (with $id and $ref order flipped)\n      // because of the order JSON.parse goes through the document\n\n      if (v instanceof db_ref.DBRef) return v;\n      const dollarKeys = Object.keys(v).filter(k => k.startsWith('$'));\n      let valid = true;\n      dollarKeys.forEach(k => {\n        if (['$ref', '$id', '$db'].indexOf(k) === -1) valid = false;\n      }); // only make DBRef if $ keys are all valid\n\n      if (valid) return db_ref.DBRef.fromExtendedJSON(v);\n    }\n\n    return value;\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  function serializeArray(array, options) {\n    return array.map(v => serializeValue(v, options));\n  }\n\n  function getISOString(date) {\n    const isoStr = date.toISOString(); // we should only show milliseconds in timestamp if they're non-zero\n\n    return date.getUTCMilliseconds() !== 0 ? isoStr : isoStr.slice(0, -5) + 'Z';\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  function serializeValue(value, options) {\n    if (Array.isArray(value)) return serializeArray(value, options);\n    if (value === undefined) return null;\n\n    if (value instanceof Date) {\n      const dateNum = value.getTime(),\n            // is it in year range 1970-9999?\n      inRange = dateNum > -1 && dateNum < 253402318800000;\n\n      if (options.legacy) {\n        return options.relaxed && inRange ? {\n          $date: value.getTime()\n        } : {\n          $date: getISOString(value)\n        };\n      }\n\n      return options.relaxed && inRange ? {\n        $date: getISOString(value)\n      } : {\n        $date: {\n          $numberLong: value.getTime().toString()\n        }\n      };\n    }\n\n    if (typeof value === 'number' && !options.relaxed) {\n      // it's an integer\n      if (Math.floor(value) === value) {\n        const int32Range = value >= BSON_INT32_MIN && value <= BSON_INT32_MAX,\n              int64Range = value >= BSON_INT64_MIN && value <= BSON_INT64_MAX; // interpret as being of the smallest BSON integer type that can represent the number exactly\n\n        if (int32Range) return {\n          $numberInt: value.toString()\n        };\n        if (int64Range) return {\n          $numberLong: value.toString()\n        };\n      }\n\n      return {\n        $numberDouble: value.toString()\n      };\n    }\n\n    if (value instanceof RegExp) {\n      let flags = value.flags;\n\n      if (flags === undefined) {\n        const match = value.toString().match(/[gimuy]*$/);\n\n        if (match) {\n          flags = match[0];\n        }\n      }\n\n      const rx = new regexp.BSONRegExp(value.source, flags);\n      return rx.toExtendedJSON(options);\n    }\n\n    if (value != null && typeof value === 'object') return serializeDocument(value, options);\n    return value;\n  }\n\n  const BSON_TYPE_MAPPINGS = {\n    Binary: o => new binary.Binary(o.value(), o.sub_type),\n    Code: o => new code$1.Code(o.code, o.scope),\n    DBRef: o => new db_ref.DBRef(o.collection || o.namespace, o.oid, o.db, o.fields),\n    Decimal128: o => new decimal128.Decimal128(o.bytes),\n    Double: o => new double_1.Double(o.value),\n    Int32: o => new int_32.Int32(o.value),\n    Long: o => long_1.Long.fromBits( // underscore variants for 1.x backwards compatibility\n    o.low != null ? o.low : o.low_, o.low != null ? o.high : o.high_, o.low != null ? o.unsigned : o.unsigned_),\n    MaxKey: () => new max_key.MaxKey(),\n    MinKey: () => new min_key.MinKey(),\n    ObjectID: o => new objectid.ObjectId(o),\n    ObjectId: o => new objectid.ObjectId(o),\n    BSONRegExp: o => new regexp.BSONRegExp(o.pattern, o.options),\n    Symbol: o => new symbol.BSONSymbol(o.value),\n    Timestamp: o => timestamp$1.Timestamp.fromBits(o.low, o.high)\n  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  function serializeDocument(doc, options) {\n    if (doc == null || typeof doc !== 'object') throw new Error('not an object instance');\n    const bsontype = doc._bsontype;\n\n    if (typeof bsontype === 'undefined') {\n      // It's a regular object. Recursively serialize its property values.\n      const _doc = {};\n\n      for (const name in doc) {\n        _doc[name] = serializeValue(doc[name], options);\n      }\n\n      return _doc;\n    } else if (isBSONType(doc)) {\n      // the \"document\" is really just a BSON type object\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      let outDoc = doc;\n\n      if (typeof outDoc.toExtendedJSON !== 'function') {\n        // There's no EJSON serialization function on the object. It's probably an\n        // object created by a previous version of this library (or another library)\n        // that's duck-typing objects to look like they were generated by this library).\n        // Copy the object into this library's version of that type.\n        const mapper = BSON_TYPE_MAPPINGS[doc._bsontype];\n\n        if (!mapper) {\n          throw new TypeError('Unrecognized or invalid _bsontype: ' + doc._bsontype);\n        }\n\n        outDoc = mapper(outDoc);\n      } // Two BSON types may have nested objects that may need to be serialized too\n\n\n      if (bsontype === 'Code' && outDoc.scope) {\n        outDoc = new code$1.Code(outDoc.code, serializeValue(outDoc.scope, options));\n      } else if (bsontype === 'DBRef' && outDoc.oid) {\n        outDoc = new db_ref.DBRef(outDoc.collection, serializeValue(outDoc.oid, options), outDoc.db, outDoc.fields);\n      }\n\n      return outDoc.toExtendedJSON(options);\n    } else {\n      throw new Error('_bsontype must be a string, but was: ' + typeof bsontype);\n    }\n  }\n  /**\n   * EJSON parse / stringify API\n   * @public\n   */\n  // the namespace here is used to emulate `export * as EJSON from '...'`\n  // which as of now (sept 2020) api-extractor does not support\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n\n\n  var EJSON;\n\n  (function (EJSON) {\n    /**\n     * Parse an Extended JSON string, constructing the JavaScript value or object described by that\n     * string.\n     *\n     * @example\n     * ```js\n     * const { EJSON } = require('bson');\n     * const text = '{ \"int32\": { \"$numberInt\": \"10\" } }';\n     *\n     * // prints { int32: { [String: '10'] _bsontype: 'Int32', value: '10' } }\n     * console.log(EJSON.parse(text, { relaxed: false }));\n     *\n     * // prints { int32: 10 }\n     * console.log(EJSON.parse(text));\n     * ```\n     */\n    function parse(text, options) {\n      const finalOptions = Object.assign({}, {\n        relaxed: true,\n        legacy: false\n      }, options); // relaxed implies not strict\n\n      if (typeof finalOptions.relaxed === 'boolean') finalOptions.strict = !finalOptions.relaxed;\n      if (typeof finalOptions.strict === 'boolean') finalOptions.relaxed = !finalOptions.strict;\n      return JSON.parse(text, (_key, value) => deserializeValue(value, finalOptions));\n    }\n\n    EJSON.parse = parse;\n\n    function stringify(value, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    replacer, space, options) {\n      if (space != null && typeof space === 'object') {\n        options = space;\n        space = 0;\n      }\n\n      if (replacer != null && typeof replacer === 'object' && !Array.isArray(replacer)) {\n        options = replacer;\n        replacer = undefined;\n        space = 0;\n      }\n\n      options = Object.assign({}, {\n        relaxed: true,\n        legacy: false\n      }, options);\n      const doc = serializeValue(value, options);\n      return JSON.stringify(doc, replacer, space);\n    }\n\n    EJSON.stringify = stringify;\n    /**\n     * Serializes an object to an Extended JSON string, and reparse it as a JavaScript object.\n     *\n     * @param value - The object to serialize\n     * @param options - Optional settings passed to the `stringify` function\n     */\n\n    function serialize(value, options) {\n      options = options || {};\n      return JSON.parse(stringify(value, options));\n    }\n\n    EJSON.serialize = serialize;\n    /**\n     * Deserializes an Extended JSON object into a plain JavaScript object with native/BSON types\n     *\n     * @param ejson - The Extended JSON object to deserialize\n     * @param options - Optional settings passed to the parse method\n     */\n\n    function deserialize(ejson, options) {\n      options = options || {};\n      return parse(JSON.stringify(ejson), options);\n    }\n\n    EJSON.deserialize = deserialize;\n  })(EJSON = exports.EJSON || (exports.EJSON = {}));\n});\nunwrapExports(extended_json);\nvar extended_json_1 = extended_json.EJSON;\nvar extended_json_2 = extended_json.isBSONType;\nvar float_parser = createCommonjsModule(function (module, exports) {\n  // Copyright (c) 2008, Fair Oaks Labs, Inc.\n  // All rights reserved.\n  //\n  // Redistribution and use in source and binary forms, with or without\n  // modification, are permitted provided that the following conditions are met:\n  //\n  //  * Redistributions of source code must retain the above copyright notice,\n  //    this list of conditions and the following disclaimer.\n  //\n  //  * Redistributions in binary form must reproduce the above copyright notice,\n  //    this list of conditions and the following disclaimer in the documentation\n  //    and/or other materials provided with the distribution.\n  //\n  //  * Neither the name of Fair Oaks Labs, Inc. nor the names of its contributors\n  //    may be used to endorse or promote products derived from this software\n  //    without specific prior written permission.\n  //\n  // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  // ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n  // LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n  // CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n  // SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n  // INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n  // CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n  // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  // POSSIBILITY OF SUCH DAMAGE.\n  //\n  //\n  // Modifications to writeIEEE754 to support negative zeroes made by Brian White\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.writeIEEE754 = exports.readIEEE754 = void 0;\n\n  function readIEEE754(buffer, offset, endian, mLen, nBytes) {\n    let e;\n    let m;\n    const bBE = endian === 'big';\n    const eLen = nBytes * 8 - mLen - 1;\n    const eMax = (1 << eLen) - 1;\n    const eBias = eMax >> 1;\n    let nBits = -7;\n    let i = bBE ? 0 : nBytes - 1;\n    const d = bBE ? 1 : -1;\n    let s = buffer[offset + i];\n    i += d;\n    e = s & (1 << -nBits) - 1;\n    s >>= -nBits;\n    nBits += eLen;\n\n    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n    m = e & (1 << -nBits) - 1;\n    e >>= -nBits;\n    nBits += mLen;\n\n    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n    if (e === 0) {\n      e = 1 - eBias;\n    } else if (e === eMax) {\n      return m ? NaN : (s ? -1 : 1) * Infinity;\n    } else {\n      m = m + Math.pow(2, mLen);\n      e = e - eBias;\n    }\n\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n  }\n\n  exports.readIEEE754 = readIEEE754;\n\n  function writeIEEE754(buffer, value, offset, endian, mLen, nBytes) {\n    let e;\n    let m;\n    let c;\n    const bBE = endian === 'big';\n    let eLen = nBytes * 8 - mLen - 1;\n    const eMax = (1 << eLen) - 1;\n    const eBias = eMax >> 1;\n    const rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    let i = bBE ? nBytes - 1 : 0;\n    const d = bBE ? -1 : 1;\n    const s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n    value = Math.abs(value);\n\n    if (isNaN(value) || value === Infinity) {\n      m = isNaN(value) ? 1 : 0;\n      e = eMax;\n    } else {\n      e = Math.floor(Math.log(value) / Math.LN2);\n\n      if (value * (c = Math.pow(2, -e)) < 1) {\n        e--;\n        c *= 2;\n      }\n\n      if (e + eBias >= 1) {\n        value += rt / c;\n      } else {\n        value += rt * Math.pow(2, 1 - eBias);\n      }\n\n      if (value * c >= 2) {\n        e++;\n        c /= 2;\n      }\n\n      if (e + eBias >= eMax) {\n        m = 0;\n        e = eMax;\n      } else if (e + eBias >= 1) {\n        m = (value * c - 1) * Math.pow(2, mLen);\n        e = e + eBias;\n      } else {\n        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n        e = 0;\n      }\n    }\n\n    if (isNaN(value)) m = 0;\n\n    while (mLen >= 8) {\n      buffer[offset + i] = m & 0xff;\n      i += d;\n      m /= 256;\n      mLen -= 8;\n    }\n\n    e = e << mLen | m;\n    if (isNaN(value)) e += 8;\n    eLen += mLen;\n\n    while (eLen > 0) {\n      buffer[offset + i] = e & 0xff;\n      i += d;\n      e /= 256;\n      eLen -= 8;\n    }\n\n    buffer[offset + i - d] |= s * 128;\n  }\n\n  exports.writeIEEE754 = writeIEEE754;\n});\nunwrapExports(float_parser);\nvar float_parser_1 = float_parser.writeIEEE754;\nvar float_parser_2 = float_parser.readIEEE754;\nvar serializer = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.serializeInto = void 0;\n  const regexp = /\\x00/; // eslint-disable-line no-control-regex\n\n  const ignoreKeys = new Set(['$db', '$ref', '$id', '$clusterTime']);\n\n  function isRegExp(d) {\n    return Object.prototype.toString.call(d) === '[object RegExp]';\n  }\n  /*\n   * isArray indicates if we are writing to a BSON array (type 0x04)\n   * which forces the \"key\" which really an array index as a string to be written as ascii\n   * This will catch any errors in index as a string generation\n   */\n\n\n  function serializeString(buffer, key, value, index, isArray) {\n    // Encode String type\n    buffer[index++] = constants.BSON_DATA_STRING; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes + 1;\n    buffer[index - 1] = 0; // Write the string\n\n    const size = buffer.write(value, index + 4, undefined, 'utf8'); // Write the size of the string to buffer\n\n    buffer[index + 3] = size + 1 >> 24 & 0xff;\n    buffer[index + 2] = size + 1 >> 16 & 0xff;\n    buffer[index + 1] = size + 1 >> 8 & 0xff;\n    buffer[index] = size + 1 & 0xff; // Update index\n\n    index = index + 4 + size; // Write zero\n\n    buffer[index++] = 0;\n    return index;\n  }\n\n  function serializeNumber(buffer, key, value, index, isArray) {\n    // We have an integer value\n    // TODO(NODE-2529): Add support for big int\n    if (Number.isInteger(value) && value >= constants.BSON_INT32_MIN && value <= constants.BSON_INT32_MAX) {\n      // If the value fits in 32 bits encode as int32\n      // Set int type 32 bits or less\n      buffer[index++] = constants.BSON_DATA_INT; // Number of written bytes\n\n      const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0; // Write the int value\n\n      buffer[index++] = value & 0xff;\n      buffer[index++] = value >> 8 & 0xff;\n      buffer[index++] = value >> 16 & 0xff;\n      buffer[index++] = value >> 24 & 0xff;\n    } else {\n      // Encode as double\n      buffer[index++] = constants.BSON_DATA_NUMBER; // Number of written bytes\n\n      const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0; // Write float\n\n      float_parser.writeIEEE754(buffer, value, index, 'little', 52, 8); // Adjust index\n\n      index = index + 8;\n    }\n\n    return index;\n  }\n\n  function serializeNull(buffer, key, _, index, isArray) {\n    // Set long type\n    buffer[index++] = constants.BSON_DATA_NULL; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    return index;\n  }\n\n  function serializeBoolean(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_BOOLEAN; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0; // Encode the boolean value\n\n    buffer[index++] = value ? 1 : 0;\n    return index;\n  }\n\n  function serializeDate(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_DATE; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0; // Write the date\n\n    const dateInMilis = long_1.Long.fromNumber(value.getTime());\n    const lowBits = dateInMilis.getLowBits();\n    const highBits = dateInMilis.getHighBits(); // Encode low bits\n\n    buffer[index++] = lowBits & 0xff;\n    buffer[index++] = lowBits >> 8 & 0xff;\n    buffer[index++] = lowBits >> 16 & 0xff;\n    buffer[index++] = lowBits >> 24 & 0xff; // Encode high bits\n\n    buffer[index++] = highBits & 0xff;\n    buffer[index++] = highBits >> 8 & 0xff;\n    buffer[index++] = highBits >> 16 & 0xff;\n    buffer[index++] = highBits >> 24 & 0xff;\n    return index;\n  }\n\n  function serializeRegExp(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_REGEXP; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n\n    if (value.source && value.source.match(regexp) != null) {\n      throw Error('value ' + value.source + ' must not contain null bytes');\n    } // Adjust the index\n\n\n    index = index + buffer.write(value.source, index, undefined, 'utf8'); // Write zero\n\n    buffer[index++] = 0x00; // Write the parameters\n\n    if (value.ignoreCase) buffer[index++] = 0x69; // i\n\n    if (value.global) buffer[index++] = 0x73; // s\n\n    if (value.multiline) buffer[index++] = 0x6d; // m\n    // Add ending zero\n\n    buffer[index++] = 0x00;\n    return index;\n  }\n\n  function serializeBSONRegExp(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_REGEXP; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0; // Check the pattern for 0 bytes\n\n    if (value.pattern.match(regexp) != null) {\n      // The BSON spec doesn't allow keys with null bytes because keys are\n      // null-terminated.\n      throw Error('pattern ' + value.pattern + ' must not contain null bytes');\n    } // Adjust the index\n\n\n    index = index + buffer.write(value.pattern, index, undefined, 'utf8'); // Write zero\n\n    buffer[index++] = 0x00; // Write the options\n\n    index = index + buffer.write(value.options.split('').sort().join(''), index, undefined, 'utf8'); // Add ending zero\n\n    buffer[index++] = 0x00;\n    return index;\n  }\n\n  function serializeMinMax(buffer, key, value, index, isArray) {\n    // Write the type of either min or max key\n    if (value === null) {\n      buffer[index++] = constants.BSON_DATA_NULL;\n    } else if (value._bsontype === 'MinKey') {\n      buffer[index++] = constants.BSON_DATA_MIN_KEY;\n    } else {\n      buffer[index++] = constants.BSON_DATA_MAX_KEY;\n    } // Number of written bytes\n\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    return index;\n  }\n\n  function serializeObjectId(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_OID; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0; // Write the objectId into the shared buffer\n\n    if (typeof value.id === 'string') {\n      buffer.write(value.id, index, undefined, 'binary');\n    } else if (value.id && value.id.copy) {\n      value.id.copy(buffer, index, 0, 12);\n    } else {\n      throw new TypeError('object [' + JSON.stringify(value) + '] is not a valid ObjectId');\n    } // Adjust index\n\n\n    return index + 12;\n  }\n\n  function serializeBuffer(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_BINARY; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0; // Get size of the buffer (current write point)\n\n    const size = value.length; // Write the size of the string to buffer\n\n    buffer[index++] = size & 0xff;\n    buffer[index++] = size >> 8 & 0xff;\n    buffer[index++] = size >> 16 & 0xff;\n    buffer[index++] = size >> 24 & 0xff; // Write the default subtype\n\n    buffer[index++] = constants.BSON_BINARY_SUBTYPE_DEFAULT; // Copy the content form the binary field to the buffer\n\n    buffer.set(ensure_buffer.ensureBuffer(value), index); // Adjust the index\n\n    index = index + size;\n    return index;\n  }\n\n  function serializeObject(buffer, key, value, index, checkKeys = false, depth = 0, serializeFunctions = false, ignoreUndefined = true, isArray = false, path = []) {\n    for (let i = 0; i < path.length; i++) {\n      if (path[i] === value) throw new Error('cyclic dependency detected');\n    } // Push value to stack\n\n\n    path.push(value); // Write the type\n\n    buffer[index++] = Array.isArray(value) ? constants.BSON_DATA_ARRAY : constants.BSON_DATA_OBJECT; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const endIndex = serializeInto(buffer, value, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined, path); // Pop stack\n\n    path.pop();\n    return endIndex;\n  }\n\n  function serializeDecimal128(buffer, key, value, index, isArray) {\n    buffer[index++] = constants.BSON_DATA_DECIMAL128; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0; // Write the data from the value\n\n    value.bytes.copy(buffer, index, 0, 16);\n    return index + 16;\n  }\n\n  function serializeLong(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = value._bsontype === 'Long' ? constants.BSON_DATA_LONG : constants.BSON_DATA_TIMESTAMP; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0; // Write the date\n\n    const lowBits = value.getLowBits();\n    const highBits = value.getHighBits(); // Encode low bits\n\n    buffer[index++] = lowBits & 0xff;\n    buffer[index++] = lowBits >> 8 & 0xff;\n    buffer[index++] = lowBits >> 16 & 0xff;\n    buffer[index++] = lowBits >> 24 & 0xff; // Encode high bits\n\n    buffer[index++] = highBits & 0xff;\n    buffer[index++] = highBits >> 8 & 0xff;\n    buffer[index++] = highBits >> 16 & 0xff;\n    buffer[index++] = highBits >> 24 & 0xff;\n    return index;\n  }\n\n  function serializeInt32(buffer, key, value, index, isArray) {\n    value = value.valueOf(); // Set int type 32 bits or less\n\n    buffer[index++] = constants.BSON_DATA_INT; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0; // Write the int value\n\n    buffer[index++] = value & 0xff;\n    buffer[index++] = value >> 8 & 0xff;\n    buffer[index++] = value >> 16 & 0xff;\n    buffer[index++] = value >> 24 & 0xff;\n    return index;\n  }\n\n  function serializeDouble(buffer, key, value, index, isArray) {\n    // Encode as double\n    buffer[index++] = constants.BSON_DATA_NUMBER; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0; // Write float\n\n    float_parser.writeIEEE754(buffer, value.value, index, 'little', 52, 8); // Adjust index\n\n    index = index + 8;\n    return index;\n  }\n\n  function serializeFunction(buffer, key, value, index, _checkKeys = false, _depth = 0, isArray) {\n    buffer[index++] = constants.BSON_DATA_CODE; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0; // Function string\n\n    const functionString = utils.normalizedFunctionString(value); // Write the string\n\n    const size = buffer.write(functionString, index + 4, undefined, 'utf8') + 1; // Write the size of the string to buffer\n\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = size >> 8 & 0xff;\n    buffer[index + 2] = size >> 16 & 0xff;\n    buffer[index + 3] = size >> 24 & 0xff; // Update index\n\n    index = index + 4 + size - 1; // Write zero\n\n    buffer[index++] = 0;\n    return index;\n  }\n\n  function serializeCode(buffer, key, value, index, checkKeys = false, depth = 0, serializeFunctions = false, ignoreUndefined = true, isArray = false) {\n    if (value.scope && typeof value.scope === 'object') {\n      // Write the type\n      buffer[index++] = constants.BSON_DATA_CODE_W_SCOPE; // Number of written bytes\n\n      const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0; // Starting index\n\n      let startIndex = index; // Serialize the function\n      // Get the function string\n\n      const functionString = typeof value.code === 'string' ? value.code : value.code.toString(); // Index adjustment\n\n      index = index + 4; // Write string into buffer\n\n      const codeSize = buffer.write(functionString, index + 4, undefined, 'utf8') + 1; // Write the size of the string to buffer\n\n      buffer[index] = codeSize & 0xff;\n      buffer[index + 1] = codeSize >> 8 & 0xff;\n      buffer[index + 2] = codeSize >> 16 & 0xff;\n      buffer[index + 3] = codeSize >> 24 & 0xff; // Write end 0\n\n      buffer[index + 4 + codeSize - 1] = 0; // Write the\n\n      index = index + codeSize + 4; //\n      // Serialize the scope value\n\n      const endIndex = serializeInto(buffer, value.scope, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined);\n      index = endIndex - 1; // Writ the total\n\n      const totalSize = endIndex - startIndex; // Write the total size of the object\n\n      buffer[startIndex++] = totalSize & 0xff;\n      buffer[startIndex++] = totalSize >> 8 & 0xff;\n      buffer[startIndex++] = totalSize >> 16 & 0xff;\n      buffer[startIndex++] = totalSize >> 24 & 0xff; // Write trailing zero\n\n      buffer[index++] = 0;\n    } else {\n      buffer[index++] = constants.BSON_DATA_CODE; // Number of written bytes\n\n      const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0; // Function string\n\n      const functionString = value.code.toString(); // Write the string\n\n      const size = buffer.write(functionString, index + 4, undefined, 'utf8') + 1; // Write the size of the string to buffer\n\n      buffer[index] = size & 0xff;\n      buffer[index + 1] = size >> 8 & 0xff;\n      buffer[index + 2] = size >> 16 & 0xff;\n      buffer[index + 3] = size >> 24 & 0xff; // Update index\n\n      index = index + 4 + size - 1; // Write zero\n\n      buffer[index++] = 0;\n    }\n\n    return index;\n  }\n\n  function serializeBinary(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_BINARY; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0; // Extract the buffer\n\n    const data = value.value(true); // Calculate size\n\n    let size = value.position; // Add the deprecated 02 type 4 bytes of size to total\n\n    if (value.sub_type === binary.Binary.SUBTYPE_BYTE_ARRAY) size = size + 4; // Write the size of the string to buffer\n\n    buffer[index++] = size & 0xff;\n    buffer[index++] = size >> 8 & 0xff;\n    buffer[index++] = size >> 16 & 0xff;\n    buffer[index++] = size >> 24 & 0xff; // Write the subtype to the buffer\n\n    buffer[index++] = value.sub_type; // If we have binary type 2 the 4 first bytes are the size\n\n    if (value.sub_type === binary.Binary.SUBTYPE_BYTE_ARRAY) {\n      size = size - 4;\n      buffer[index++] = size & 0xff;\n      buffer[index++] = size >> 8 & 0xff;\n      buffer[index++] = size >> 16 & 0xff;\n      buffer[index++] = size >> 24 & 0xff;\n    } // Write the data to the object\n\n\n    buffer.set(data, index); // Adjust the index\n\n    index = index + value.position;\n    return index;\n  }\n\n  function serializeSymbol(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_SYMBOL; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0; // Write the string\n\n    const size = buffer.write(value.value, index + 4, undefined, 'utf8') + 1; // Write the size of the string to buffer\n\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = size >> 8 & 0xff;\n    buffer[index + 2] = size >> 16 & 0xff;\n    buffer[index + 3] = size >> 24 & 0xff; // Update index\n\n    index = index + 4 + size - 1; // Write zero\n\n    buffer[index++] = 0x00;\n    return index;\n  }\n\n  function serializeDBRef(buffer, key, value, index, depth, serializeFunctions, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_OBJECT; // Number of written bytes\n\n    const numberOfWrittenBytes = !isArray ? buffer.write(key, index, undefined, 'utf8') : buffer.write(key, index, undefined, 'ascii'); // Encode the name\n\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    let startIndex = index;\n    let output = {\n      $ref: value.collection || value.namespace,\n      $id: value.oid\n    };\n\n    if (value.db != null) {\n      output.$db = value.db;\n    }\n\n    output = Object.assign(output, value.fields);\n    const endIndex = serializeInto(buffer, output, false, index, depth + 1, serializeFunctions); // Calculate object size\n\n    const size = endIndex - startIndex; // Write the size\n\n    buffer[startIndex++] = size & 0xff;\n    buffer[startIndex++] = size >> 8 & 0xff;\n    buffer[startIndex++] = size >> 16 & 0xff;\n    buffer[startIndex++] = size >> 24 & 0xff; // Set index\n\n    return endIndex;\n  }\n\n  function serializeInto(buffer$1, object, checkKeys = false, startingIndex = 0, depth = 0, serializeFunctions = false, ignoreUndefined = true, path = []) {\n    startingIndex = startingIndex || 0;\n    path = path || []; // Push the object to the path\n\n    path.push(object); // Start place to serialize into\n\n    let index = startingIndex + 4; // Special case isArray\n\n    if (Array.isArray(object)) {\n      // Get object keys\n      for (let i = 0; i < object.length; i++) {\n        const key = '' + i;\n        let value = object[i]; // Is there an override value\n\n        if (value && value.toBSON) {\n          if (typeof value.toBSON !== 'function') throw new TypeError('toBSON is not a function');\n          value = value.toBSON();\n        }\n\n        if (typeof value === 'string') {\n          index = serializeString(buffer$1, key, value, index, true);\n        } else if (typeof value === 'number') {\n          index = serializeNumber(buffer$1, key, value, index, true);\n        } else if (typeof value === 'bigint') {\n          throw new TypeError('Unsupported type BigInt, please use Decimal128');\n        } else if (typeof value === 'boolean') {\n          index = serializeBoolean(buffer$1, key, value, index, true);\n        } else if (value instanceof Date || utils.isDate(value)) {\n          index = serializeDate(buffer$1, key, value, index, true);\n        } else if (value === undefined) {\n          index = serializeNull(buffer$1, key, value, index, true);\n        } else if (value === null) {\n          index = serializeNull(buffer$1, key, value, index, true);\n        } else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n          index = serializeObjectId(buffer$1, key, value, index, true);\n        } else if (buffer.Buffer.isBuffer(value) || utils.isUint8Array(value)) {\n          index = serializeBuffer(buffer$1, key, value, index, true);\n        } else if (value instanceof RegExp || isRegExp(value)) {\n          index = serializeRegExp(buffer$1, key, value, index, true);\n        } else if (typeof value === 'object' && value['_bsontype'] == null) {\n          index = serializeObject(buffer$1, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, true, path);\n        } else if (typeof value === 'object' && extended_json.isBSONType(value) && value._bsontype === 'Decimal128') {\n          index = serializeDecimal128(buffer$1, key, value, index, true);\n        } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n          index = serializeLong(buffer$1, key, value, index, true);\n        } else if (value['_bsontype'] === 'Double') {\n          index = serializeDouble(buffer$1, key, value, index, true);\n        } else if (typeof value === 'function' && serializeFunctions) {\n          index = serializeFunction(buffer$1, key, value, index, checkKeys, depth, true);\n        } else if (value['_bsontype'] === 'Code') {\n          index = serializeCode(buffer$1, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, true);\n        } else if (value['_bsontype'] === 'Binary') {\n          index = serializeBinary(buffer$1, key, value, index, true);\n        } else if (value['_bsontype'] === 'Symbol') {\n          index = serializeSymbol(buffer$1, key, value, index, true);\n        } else if (value['_bsontype'] === 'DBRef') {\n          index = serializeDBRef(buffer$1, key, value, index, depth, serializeFunctions, true);\n        } else if (value['_bsontype'] === 'BSONRegExp') {\n          index = serializeBSONRegExp(buffer$1, key, value, index, true);\n        } else if (value['_bsontype'] === 'Int32') {\n          index = serializeInt32(buffer$1, key, value, index, true);\n        } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n          index = serializeMinMax(buffer$1, key, value, index, true);\n        } else if (typeof value['_bsontype'] !== 'undefined') {\n          throw new TypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n        }\n      }\n    } else if (object instanceof map.Map) {\n      const iterator = object.entries();\n      let done = false;\n\n      while (!done) {\n        // Unpack the next entry\n        const entry = iterator.next();\n        done = !!entry.done; // Are we done, then skip and terminate\n\n        if (done) continue; // Get the entry values\n\n        const key = entry.value[0];\n        const value = entry.value[1]; // Check the type of the value\n\n        const type = typeof value; // Check the key and throw error if it's illegal\n\n        if (typeof key === 'string' && !ignoreKeys.has(key)) {\n          if (key.match(regexp) != null) {\n            // The BSON spec doesn't allow keys with null bytes because keys are\n            // null-terminated.\n            throw Error('key ' + key + ' must not contain null bytes');\n          }\n\n          if (checkKeys) {\n            if ('$' === key[0]) {\n              throw Error('key ' + key + \" must not start with '$'\");\n            } else if (~key.indexOf('.')) {\n              throw Error('key ' + key + \" must not contain '.'\");\n            }\n          }\n        }\n\n        if (type === 'string') {\n          index = serializeString(buffer$1, key, value, index);\n        } else if (type === 'number') {\n          index = serializeNumber(buffer$1, key, value, index);\n        } else if (type === 'bigint' || utils.isBigInt64Array(value) || utils.isBigUInt64Array(value)) {\n          throw new TypeError('Unsupported type BigInt, please use Decimal128');\n        } else if (type === 'boolean') {\n          index = serializeBoolean(buffer$1, key, value, index);\n        } else if (value instanceof Date || utils.isDate(value)) {\n          index = serializeDate(buffer$1, key, value, index);\n        } else if (value === null || value === undefined && ignoreUndefined === false) {\n          index = serializeNull(buffer$1, key, value, index);\n        } else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n          index = serializeObjectId(buffer$1, key, value, index);\n        } else if (buffer.Buffer.isBuffer(value) || utils.isUint8Array(value)) {\n          index = serializeBuffer(buffer$1, key, value, index);\n        } else if (value instanceof RegExp || isRegExp(value)) {\n          index = serializeRegExp(buffer$1, key, value, index);\n        } else if (type === 'object' && value['_bsontype'] == null) {\n          index = serializeObject(buffer$1, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, false, path);\n        } else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n          index = serializeDecimal128(buffer$1, key, value, index);\n        } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n          index = serializeLong(buffer$1, key, value, index);\n        } else if (value['_bsontype'] === 'Double') {\n          index = serializeDouble(buffer$1, key, value, index);\n        } else if (value['_bsontype'] === 'Code') {\n          index = serializeCode(buffer$1, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);\n        } else if (typeof value === 'function' && serializeFunctions) {\n          index = serializeFunction(buffer$1, key, value, index, checkKeys, depth, serializeFunctions);\n        } else if (value['_bsontype'] === 'Binary') {\n          index = serializeBinary(buffer$1, key, value, index);\n        } else if (value['_bsontype'] === 'Symbol') {\n          index = serializeSymbol(buffer$1, key, value, index);\n        } else if (value['_bsontype'] === 'DBRef') {\n          index = serializeDBRef(buffer$1, key, value, index, depth, serializeFunctions);\n        } else if (value['_bsontype'] === 'BSONRegExp') {\n          index = serializeBSONRegExp(buffer$1, key, value, index);\n        } else if (value['_bsontype'] === 'Int32') {\n          index = serializeInt32(buffer$1, key, value, index);\n        } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n          index = serializeMinMax(buffer$1, key, value, index);\n        } else if (typeof value['_bsontype'] !== 'undefined') {\n          throw new TypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n        }\n      }\n    } else {\n      // Did we provide a custom serialization method\n      if (object.toBSON) {\n        if (typeof object.toBSON !== 'function') throw new TypeError('toBSON is not a function');\n        object = object.toBSON();\n        if (object != null && typeof object !== 'object') throw new TypeError('toBSON function did not return an object');\n      } // Iterate over all the keys\n\n\n      for (const key in object) {\n        let value = object[key]; // Is there an override value\n\n        if (value && value.toBSON) {\n          if (typeof value.toBSON !== 'function') throw new TypeError('toBSON is not a function');\n          value = value.toBSON();\n        } // Check the type of the value\n\n\n        const type = typeof value; // Check the key and throw error if it's illegal\n\n        if (typeof key === 'string' && !ignoreKeys.has(key)) {\n          if (key.match(regexp) != null) {\n            // The BSON spec doesn't allow keys with null bytes because keys are\n            // null-terminated.\n            throw Error('key ' + key + ' must not contain null bytes');\n          }\n\n          if (checkKeys) {\n            if ('$' === key[0]) {\n              throw Error('key ' + key + \" must not start with '$'\");\n            } else if (~key.indexOf('.')) {\n              throw Error('key ' + key + \" must not contain '.'\");\n            }\n          }\n        }\n\n        if (type === 'string') {\n          index = serializeString(buffer$1, key, value, index);\n        } else if (type === 'number') {\n          index = serializeNumber(buffer$1, key, value, index);\n        } else if (type === 'bigint') {\n          throw new TypeError('Unsupported type BigInt, please use Decimal128');\n        } else if (type === 'boolean') {\n          index = serializeBoolean(buffer$1, key, value, index);\n        } else if (value instanceof Date || utils.isDate(value)) {\n          index = serializeDate(buffer$1, key, value, index);\n        } else if (value === undefined) {\n          if (ignoreUndefined === false) index = serializeNull(buffer$1, key, value, index);\n        } else if (value === null) {\n          index = serializeNull(buffer$1, key, value, index);\n        } else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n          index = serializeObjectId(buffer$1, key, value, index);\n        } else if (buffer.Buffer.isBuffer(value) || utils.isUint8Array(value)) {\n          index = serializeBuffer(buffer$1, key, value, index);\n        } else if (value instanceof RegExp || isRegExp(value)) {\n          index = serializeRegExp(buffer$1, key, value, index);\n        } else if (type === 'object' && value['_bsontype'] == null) {\n          index = serializeObject(buffer$1, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, false, path);\n        } else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n          index = serializeDecimal128(buffer$1, key, value, index);\n        } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n          index = serializeLong(buffer$1, key, value, index);\n        } else if (value['_bsontype'] === 'Double') {\n          index = serializeDouble(buffer$1, key, value, index);\n        } else if (value['_bsontype'] === 'Code') {\n          index = serializeCode(buffer$1, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);\n        } else if (typeof value === 'function' && serializeFunctions) {\n          index = serializeFunction(buffer$1, key, value, index, checkKeys, depth, serializeFunctions);\n        } else if (value['_bsontype'] === 'Binary') {\n          index = serializeBinary(buffer$1, key, value, index);\n        } else if (value['_bsontype'] === 'Symbol') {\n          index = serializeSymbol(buffer$1, key, value, index);\n        } else if (value['_bsontype'] === 'DBRef') {\n          index = serializeDBRef(buffer$1, key, value, index, depth, serializeFunctions);\n        } else if (value['_bsontype'] === 'BSONRegExp') {\n          index = serializeBSONRegExp(buffer$1, key, value, index);\n        } else if (value['_bsontype'] === 'Int32') {\n          index = serializeInt32(buffer$1, key, value, index);\n        } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n          index = serializeMinMax(buffer$1, key, value, index);\n        } else if (typeof value['_bsontype'] !== 'undefined') {\n          throw new TypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n        }\n      }\n    } // Remove the path\n\n\n    path.pop(); // Final padding byte for object\n\n    buffer$1[index++] = 0x00; // Final size\n\n    const size = index - startingIndex; // Write the size of the object\n\n    buffer$1[startingIndex++] = size & 0xff;\n    buffer$1[startingIndex++] = size >> 8 & 0xff;\n    buffer$1[startingIndex++] = size >> 16 & 0xff;\n    buffer$1[startingIndex++] = size >> 24 & 0xff;\n    return index;\n  }\n\n  exports.serializeInto = serializeInto;\n});\nunwrapExports(serializer);\nvar serializer_1 = serializer.serializeInto;\nvar bson = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.deserializeStream = exports.calculateObjectSize = exports.deserialize = exports.serializeWithBufferAndIndex = exports.serialize = exports.setInternalBufferSize = exports.ObjectID = exports.Decimal128 = exports.BSONRegExp = exports.MaxKey = exports.MinKey = exports.Int32 = exports.Double = exports.Timestamp = exports.Long = exports.ObjectId = exports.Binary = exports.DBRef = exports.BSONSymbol = exports.Map = exports.Code = exports.LongWithoutOverridesClass = exports.EJSON = exports.JS_INT_MIN = exports.JS_INT_MAX = exports.BSON_INT64_MIN = exports.BSON_INT64_MAX = exports.BSON_INT32_MIN = exports.BSON_INT32_MAX = exports.BSON_DATA_UNDEFINED = exports.BSON_DATA_TIMESTAMP = exports.BSON_DATA_SYMBOL = exports.BSON_DATA_STRING = exports.BSON_DATA_REGEXP = exports.BSON_DATA_OID = exports.BSON_DATA_OBJECT = exports.BSON_DATA_NUMBER = exports.BSON_DATA_NULL = exports.BSON_DATA_MIN_KEY = exports.BSON_DATA_MAX_KEY = exports.BSON_DATA_LONG = exports.BSON_DATA_INT = exports.BSON_DATA_DECIMAL128 = exports.BSON_DATA_DBPOINTER = exports.BSON_DATA_DATE = exports.BSON_DATA_CODE_W_SCOPE = exports.BSON_DATA_CODE = exports.BSON_DATA_BOOLEAN = exports.BSON_DATA_BINARY = exports.BSON_DATA_ARRAY = exports.BSON_BINARY_SUBTYPE_UUID_NEW = exports.BSON_BINARY_SUBTYPE_UUID = exports.BSON_BINARY_SUBTYPE_USER_DEFINED = exports.BSON_BINARY_SUBTYPE_MD5 = exports.BSON_BINARY_SUBTYPE_FUNCTION = exports.BSON_BINARY_SUBTYPE_DEFAULT = exports.BSON_BINARY_SUBTYPE_BYTE_ARRAY = void 0;\n  Object.defineProperty(exports, \"Binary\", {\n    enumerable: true,\n    get: function () {\n      return binary.Binary;\n    }\n  });\n  Object.defineProperty(exports, \"Code\", {\n    enumerable: true,\n    get: function () {\n      return code$1.Code;\n    }\n  });\n  Object.defineProperty(exports, \"DBRef\", {\n    enumerable: true,\n    get: function () {\n      return db_ref.DBRef;\n    }\n  });\n  Object.defineProperty(exports, \"Decimal128\", {\n    enumerable: true,\n    get: function () {\n      return decimal128.Decimal128;\n    }\n  });\n  Object.defineProperty(exports, \"Double\", {\n    enumerable: true,\n    get: function () {\n      return double_1.Double;\n    }\n  });\n  Object.defineProperty(exports, \"Int32\", {\n    enumerable: true,\n    get: function () {\n      return int_32.Int32;\n    }\n  });\n  Object.defineProperty(exports, \"Long\", {\n    enumerable: true,\n    get: function () {\n      return long_1.Long;\n    }\n  });\n  Object.defineProperty(exports, \"Map\", {\n    enumerable: true,\n    get: function () {\n      return map.Map;\n    }\n  });\n  Object.defineProperty(exports, \"MaxKey\", {\n    enumerable: true,\n    get: function () {\n      return max_key.MaxKey;\n    }\n  });\n  Object.defineProperty(exports, \"MinKey\", {\n    enumerable: true,\n    get: function () {\n      return min_key.MinKey;\n    }\n  });\n  Object.defineProperty(exports, \"ObjectId\", {\n    enumerable: true,\n    get: function () {\n      return objectid.ObjectId;\n    }\n  });\n  Object.defineProperty(exports, \"ObjectID\", {\n    enumerable: true,\n    get: function () {\n      return objectid.ObjectId;\n    }\n  }); // Parts of the parser\n\n  Object.defineProperty(exports, \"BSONRegExp\", {\n    enumerable: true,\n    get: function () {\n      return regexp.BSONRegExp;\n    }\n  });\n  Object.defineProperty(exports, \"BSONSymbol\", {\n    enumerable: true,\n    get: function () {\n      return symbol.BSONSymbol;\n    }\n  });\n  Object.defineProperty(exports, \"Timestamp\", {\n    enumerable: true,\n    get: function () {\n      return timestamp$1.Timestamp;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_BINARY_SUBTYPE_BYTE_ARRAY\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_BINARY_SUBTYPE_BYTE_ARRAY;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_BINARY_SUBTYPE_DEFAULT\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_BINARY_SUBTYPE_DEFAULT;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_BINARY_SUBTYPE_FUNCTION\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_BINARY_SUBTYPE_FUNCTION;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_BINARY_SUBTYPE_MD5\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_BINARY_SUBTYPE_MD5;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_BINARY_SUBTYPE_USER_DEFINED\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_BINARY_SUBTYPE_USER_DEFINED;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_BINARY_SUBTYPE_UUID\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_BINARY_SUBTYPE_UUID;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_BINARY_SUBTYPE_UUID_NEW\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_BINARY_SUBTYPE_UUID_NEW;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_ARRAY\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_ARRAY;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_BINARY\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_BINARY;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_BOOLEAN\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_BOOLEAN;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_CODE\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_CODE;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_CODE_W_SCOPE\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_CODE_W_SCOPE;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_DATE\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_DATE;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_DBPOINTER\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_DBPOINTER;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_DECIMAL128\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_DECIMAL128;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_INT\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_INT;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_LONG\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_LONG;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_MAX_KEY\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_MAX_KEY;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_MIN_KEY\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_MIN_KEY;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_NULL\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_NULL;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_NUMBER\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_NUMBER;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_OBJECT\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_OBJECT;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_OID\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_OID;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_REGEXP\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_REGEXP;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_STRING\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_STRING;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_SYMBOL\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_SYMBOL;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_TIMESTAMP\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_TIMESTAMP;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_DATA_UNDEFINED\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_DATA_UNDEFINED;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_INT32_MAX\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_INT32_MAX;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_INT32_MIN\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_INT32_MIN;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_INT64_MAX\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_INT64_MAX;\n    }\n  });\n  Object.defineProperty(exports, \"BSON_INT64_MIN\", {\n    enumerable: true,\n    get: function () {\n      return constants.BSON_INT64_MIN;\n    }\n  });\n  Object.defineProperty(exports, \"JS_INT_MAX\", {\n    enumerable: true,\n    get: function () {\n      return constants.JS_INT_MAX;\n    }\n  });\n  Object.defineProperty(exports, \"JS_INT_MIN\", {\n    enumerable: true,\n    get: function () {\n      return constants.JS_INT_MIN;\n    }\n  });\n  Object.defineProperty(exports, \"EJSON\", {\n    enumerable: true,\n    get: function () {\n      return extended_json.EJSON;\n    }\n  });\n  var timestamp_2 = timestamp$1;\n  Object.defineProperty(exports, \"LongWithoutOverridesClass\", {\n    enumerable: true,\n    get: function () {\n      return timestamp_2.LongWithoutOverridesClass;\n    }\n  });\n  /** @internal */\n  // Default Max Size\n\n  const MAXSIZE = 1024 * 1024 * 17; // Current Internal Temporary Serialization Buffer\n\n  let buffer$1 = buffer.Buffer.alloc(MAXSIZE);\n  /**\n   * Sets the size of the internal serialization buffer.\n   *\n   * @param size - The desired size for the internal serialization buffer\n   * @public\n   */\n\n  function setInternalBufferSize(size) {\n    // Resize the internal serialization buffer if needed\n    if (buffer$1.length < size) {\n      buffer$1 = buffer.Buffer.alloc(size);\n    }\n  }\n\n  exports.setInternalBufferSize = setInternalBufferSize;\n  /**\n   * Serialize a Javascript object.\n   *\n   * @param object - the Javascript object to serialize.\n   * @returns Buffer object containing the serialized object.\n   * @public\n   */\n\n  function serialize(object, options = {}) {\n    // Unpack the options\n    const checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    const minInternalBufferSize = typeof options.minInternalBufferSize === 'number' ? options.minInternalBufferSize : MAXSIZE; // Resize the internal serialization buffer if needed\n\n    if (buffer$1.length < minInternalBufferSize) {\n      buffer$1 = buffer.Buffer.alloc(minInternalBufferSize);\n    } // Attempt to serialize\n\n\n    const serializationIndex = serializer.serializeInto(buffer$1, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined, []); // Create the final buffer\n\n    const finishedBuffer = buffer.Buffer.alloc(serializationIndex); // Copy into the finished buffer\n\n    buffer$1.copy(finishedBuffer, 0, 0, finishedBuffer.length); // Return the buffer\n\n    return finishedBuffer;\n  }\n\n  exports.serialize = serialize;\n  /**\n   * Serialize a Javascript object using a predefined Buffer and index into the buffer,\n   * useful when pre-allocating the space for serialization.\n   *\n   * @param object - the Javascript object to serialize.\n   * @param finalBuffer - the Buffer you pre-allocated to store the serialized BSON object.\n   * @returns the index pointing to the last written byte in the buffer.\n   * @public\n   */\n\n  function serializeWithBufferAndIndex(object, finalBuffer, options = {}) {\n    // Unpack the options\n    const checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    const startIndex = typeof options.index === 'number' ? options.index : 0; // Attempt to serialize\n\n    const serializationIndex = serializer.serializeInto(buffer$1, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined);\n    buffer$1.copy(finalBuffer, startIndex, 0, serializationIndex); // Return the index\n\n    return startIndex + serializationIndex - 1;\n  }\n\n  exports.serializeWithBufferAndIndex = serializeWithBufferAndIndex;\n  /**\n   * Deserialize data as BSON.\n   *\n   * @param buffer - the buffer containing the serialized set of BSON documents.\n   * @returns returns the deserialized Javascript Object.\n   * @public\n   */\n\n  function deserialize(buffer, options = {}) {\n    return deserializer.deserialize(ensure_buffer.ensureBuffer(buffer), options);\n  }\n\n  exports.deserialize = deserialize;\n  /**\n   * Calculate the bson size for a passed in Javascript object.\n   *\n   * @param object - the Javascript object to calculate the BSON byte size for\n   * @returns size of BSON object in bytes\n   * @public\n   */\n\n  function calculateObjectSize(object, options = {}) {\n    options = options || {};\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    return calculate_size.calculateObjectSize(object, serializeFunctions, ignoreUndefined);\n  }\n\n  exports.calculateObjectSize = calculateObjectSize;\n  /**\n   * Deserialize stream data as BSON documents.\n   *\n   * @param data - the buffer containing the serialized set of BSON documents.\n   * @param startIndex - the start index in the data Buffer where the deserialization is to start.\n   * @param numberOfDocuments - number of documents to deserialize.\n   * @param documents - an array where to store the deserialized documents.\n   * @param docStartIndex - the index in the documents array from where to start inserting documents.\n   * @param options - additional options used for the deserialization.\n   * @returns next index in the buffer after deserialization **x** numbers of documents.\n   * @public\n   */\n\n  function deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, options) {\n    const internalOptions = Object.assign({\n      allowObjectSmallerThanBufferSize: true,\n      index: 0\n    }, options);\n    const bufferData = ensure_buffer.ensureBuffer(data);\n    let index = startIndex; // Loop over all documents\n\n    for (let i = 0; i < numberOfDocuments; i++) {\n      // Find size of the document\n      const size = bufferData[index] | bufferData[index + 1] << 8 | bufferData[index + 2] << 16 | bufferData[index + 3] << 24; // Update options with index\n\n      internalOptions.index = index; // Parse the document at this point\n\n      documents[docStartIndex + i] = deserializer.deserialize(bufferData, internalOptions); // Adjust index by the document size\n\n      index = index + size;\n    } // Return object containing end index of parsing and list of documents\n\n\n    return index;\n  }\n\n  exports.deserializeStream = deserializeStream;\n});\nvar bson$1 = unwrapExports(bson);\nvar bson_1 = bson.deserializeStream;\nvar bson_2 = bson.calculateObjectSize;\nvar bson_3 = bson.deserialize;\nvar bson_4 = bson.serializeWithBufferAndIndex;\nvar bson_5 = bson.serialize;\nvar bson_6 = bson.setInternalBufferSize;\nvar bson_7 = bson.ObjectID;\nvar bson_8 = bson.Decimal128;\nvar bson_9 = bson.BSONRegExp;\nvar bson_10 = bson.MaxKey;\nvar bson_11 = bson.MinKey;\nvar bson_12 = bson.Int32;\nvar bson_13 = bson.Double;\nvar bson_14 = bson.Timestamp;\nvar bson_15 = bson.Long;\nvar bson_16 = bson.ObjectId;\nvar bson_17 = bson.Binary;\nvar bson_18 = bson.DBRef;\nvar bson_19 = bson.BSONSymbol;\nvar bson_20 = bson.Map;\nvar bson_21 = bson.Code;\nvar bson_22 = bson.LongWithoutOverridesClass;\nvar bson_23 = bson.EJSON;\nvar bson_24 = bson.JS_INT_MIN;\nvar bson_25 = bson.JS_INT_MAX;\nvar bson_26 = bson.BSON_INT64_MIN;\nvar bson_27 = bson.BSON_INT64_MAX;\nvar bson_28 = bson.BSON_INT32_MIN;\nvar bson_29 = bson.BSON_INT32_MAX;\nvar bson_30 = bson.BSON_DATA_UNDEFINED;\nvar bson_31 = bson.BSON_DATA_TIMESTAMP;\nvar bson_32 = bson.BSON_DATA_SYMBOL;\nvar bson_33 = bson.BSON_DATA_STRING;\nvar bson_34 = bson.BSON_DATA_REGEXP;\nvar bson_35 = bson.BSON_DATA_OID;\nvar bson_36 = bson.BSON_DATA_OBJECT;\nvar bson_37 = bson.BSON_DATA_NUMBER;\nvar bson_38 = bson.BSON_DATA_NULL;\nvar bson_39 = bson.BSON_DATA_MIN_KEY;\nvar bson_40 = bson.BSON_DATA_MAX_KEY;\nvar bson_41 = bson.BSON_DATA_LONG;\nvar bson_42 = bson.BSON_DATA_INT;\nvar bson_43 = bson.BSON_DATA_DECIMAL128;\nvar bson_44 = bson.BSON_DATA_DBPOINTER;\nvar bson_45 = bson.BSON_DATA_DATE;\nvar bson_46 = bson.BSON_DATA_CODE_W_SCOPE;\nvar bson_47 = bson.BSON_DATA_CODE;\nvar bson_48 = bson.BSON_DATA_BOOLEAN;\nvar bson_49 = bson.BSON_DATA_BINARY;\nvar bson_50 = bson.BSON_DATA_ARRAY;\nvar bson_51 = bson.BSON_BINARY_SUBTYPE_UUID_NEW;\nvar bson_52 = bson.BSON_BINARY_SUBTYPE_UUID;\nvar bson_53 = bson.BSON_BINARY_SUBTYPE_USER_DEFINED;\nvar bson_54 = bson.BSON_BINARY_SUBTYPE_MD5;\nvar bson_55 = bson.BSON_BINARY_SUBTYPE_FUNCTION;\nvar bson_56 = bson.BSON_BINARY_SUBTYPE_DEFAULT;\nvar bson_57 = bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY;\nexport default bson$1;\nexport { bson_9 as BSONRegExp, bson_19 as BSONSymbol, bson_57 as BSON_BINARY_SUBTYPE_BYTE_ARRAY, bson_56 as BSON_BINARY_SUBTYPE_DEFAULT, bson_55 as BSON_BINARY_SUBTYPE_FUNCTION, bson_54 as BSON_BINARY_SUBTYPE_MD5, bson_53 as BSON_BINARY_SUBTYPE_USER_DEFINED, bson_52 as BSON_BINARY_SUBTYPE_UUID, bson_51 as BSON_BINARY_SUBTYPE_UUID_NEW, bson_50 as BSON_DATA_ARRAY, bson_49 as BSON_DATA_BINARY, bson_48 as BSON_DATA_BOOLEAN, bson_47 as BSON_DATA_CODE, bson_46 as BSON_DATA_CODE_W_SCOPE, bson_45 as BSON_DATA_DATE, bson_44 as BSON_DATA_DBPOINTER, bson_43 as BSON_DATA_DECIMAL128, bson_42 as BSON_DATA_INT, bson_41 as BSON_DATA_LONG, bson_40 as BSON_DATA_MAX_KEY, bson_39 as BSON_DATA_MIN_KEY, bson_38 as BSON_DATA_NULL, bson_37 as BSON_DATA_NUMBER, bson_36 as BSON_DATA_OBJECT, bson_35 as BSON_DATA_OID, bson_34 as BSON_DATA_REGEXP, bson_33 as BSON_DATA_STRING, bson_32 as BSON_DATA_SYMBOL, bson_31 as BSON_DATA_TIMESTAMP, bson_30 as BSON_DATA_UNDEFINED, bson_29 as BSON_INT32_MAX, bson_28 as BSON_INT32_MIN, bson_27 as BSON_INT64_MAX, bson_26 as BSON_INT64_MIN, bson_17 as Binary, bson_21 as Code, bson_18 as DBRef, bson_8 as Decimal128, bson_13 as Double, bson_23 as EJSON, bson_12 as Int32, bson_25 as JS_INT_MAX, bson_24 as JS_INT_MIN, bson_15 as Long, bson_22 as LongWithoutOverridesClass, bson_20 as Map, bson_10 as MaxKey, bson_11 as MinKey, bson_7 as ObjectID, bson_16 as ObjectId, bson_14 as Timestamp, bson_2 as calculateObjectSize, bson_3 as deserialize, bson_1 as deserializeStream, bson_5 as serialize, bson_4 as serializeWithBufferAndIndex, bson_6 as setInternalBufferSize };","map":{"version":3,"sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../src/ensure_buffer.ts","../src/uuid.ts","../src/binary.ts","../src/code.ts","../node_modules/rollup-plugin-node-builtins/src/es6/empty.js","../node_modules/rollup-plugin-node-builtins/src/es6/inherits.js","../node_modules/rollup-plugin-node-builtins/src/es6/util.js","../src/parser/utils.ts","../src/db_ref.ts","../src/long.ts","../src/decimal128.ts","../src/double.ts","../src/int_32.ts","../src/map.ts","../src/max_key.ts","../src/min_key.ts","../src/objectid.ts","../src/constants.ts","../src/parser/calculate_size.ts","../src/regexp.ts","../src/symbol.ts","../src/timestamp.ts","../src/validate_utf8.ts","../src/parser/deserializer.ts","../src/extended_json.ts","../src/float_parser.ts","../src/parser/serializer.ts","../src/bson.ts"],"names":["lookup","revLookup","Arr","code","i","len","b64","validLen","placeHoldersLen","lens","getLens","arr","_byteLength","curByte","tmp","num","output","uint8","tripletToBase64","extraBytes","parts","maxChunkLength","len2","encodeChunk","eLen","nBytes","eMax","eBias","nBits","isLE","d","s","buffer","offset","e","m","Math","rt","mLen","value","isNaN","c","customInspectSymbol","Symbol","exports","K_MAX_LENGTH","Buffer","typedArraySupport","console","proto","foo","Object","Uint8Array","enumerable","get","length","buf","allocUnsafe","from","fromString","ArrayBuffer","fromArrayLike","isInstance","fromArrayBuffer","valueOf","b","fromObject","size","assertSize","createBuffer","fill","alloc","checked","encoding","byteLength","actual","array","byteOffset","obj","numberIsNaN","Array","a","x","y","String","list","pos","string","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","slowToString","str","max","target","thisStart","thisEnd","thisCopy","targetCopy","dir","val","arrayIndexOf","indexSize","arrLength","valLength","foundIndex","read","found","j","bidirectionalIndexOf","Number","remaining","strLen","parsed","parseInt","blitBuffer","asciiToBytes","asciiWrite","utf16leToBytes","isFinite","hexWrite","utf8Write","latin1Write","base64Write","ucs2Write","type","data","base64","res","firstByte","codePoint","bytesPerSequence","secondByte","tempCodePoint","thirdByte","fourthByte","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","ret","out","hexSliceLookupTable","bytes","newBuf","checkOffset","mul","ieee754","maxBytes","checkInt","limit","sub","checkIEEE754","writeFloat","writeDouble","targetStart","INVALID_BASE64_RE","units","leadSurrogate","byteArray","hi","lo","base64clean","dst","src","alphabet","table","i16","buffer_1","ensure_buffer_1","uuid_1","inherits","ctor","superCtor","constructor","writable","configurable","TempCtor","formatRegExp","isString","objects","inspect","args","JSON","isNull","isObject","isUndefined","global","deprecate","warned","fn","debugs","debugEnviron","set","pid","msg","format","ctx","seen","stylize","stylizeNoColor","isBoolean","_extend","formatValue","style","hash","isFunction","primitive","formatPrimitive","keys","visibleKeys","arrayToHash","isError","formatError","name","isRegExp","RegExp","isDate","Date","base","braces","isArray","n","recurseTimes","formatArray","formatProperty","reduceToSingleString","simple","isNumber","Error","l","hasOwnProperty","key","desc","cur","numLinesEst","prev","arg","objectToString","months","time","pad","timestamp","origin","add","log","isBuffer","isPrimitive","isSymbol","isNullOrUndefined","debuglog","utils_1","binary_1","validate_utf8_1","objectid_1","int_32_1","decimal128","decimal128_1","regexp_1","symbol","symbol_1","timestamp_1","min_key_1","max_key_1","code_1","db_ref_1","float_parser_1","extended_json_1","map_1","serializer_1","deserializer_1","calculate_size_1"],"mappings":"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","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('nodejs.util.inspect.custom')\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n",null,null,null,null,"export default {};\n","\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},"metadata":{},"sourceType":"module"}